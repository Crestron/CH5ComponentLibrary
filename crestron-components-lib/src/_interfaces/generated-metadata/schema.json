{
  "htmlElements": {
    "common": {
      "attributes": [
        {
          "documentation": [
            "`data-ch5-show` custom attribute",
            "***",
            "Specifies whether or not an element is visible based upon the value of the state. Works with standard HTML elements. ",
            "The data-ch5-noshow-type attribute can be supplied to set how an HTML element will be hidden from view."
          ],
          "value": [],
          "name": "data-ch5-show"
        },
        {
          "documentation": [
            "`data-ch5-noshow-type` custom attribute",
            "***",
            "The 'data-ch5-noshow-type' custom attribute is related to the HTML custom attribute 'data-ch5-show' ",
            "and overrides the way in which a Component is made invisible. ",
            "The Crestron Components library will default the 'noshow' type based upon the element type."
          ],
          "value": [
            "visibility",
            "display",
            "remove"
          ],
          "name": "data-ch5-noshow-type"
        },
        {
          "documentation": [
            "`data-ch5-appendclass` custom attribute",
            "***",
            "The 'data-ch5-appendclass' custom HTML attribute appends the value of a signal to the 'class' attribute ",
            "on a standard HTML element. A change in signal value will remove the prior value of the ",
            "signal and append the new value."
          ],
          "value": [],
          "name": "data-ch5-appendclass"
        },
        {
          "documentation": [
            "`data-ch5-innerhtml` custom attribute",
            "***",
            "The 'data-ch5-innerhtml' custom HTML attribute allows for dynamic HTML content to be applied to ",
            "standard HTML elements such as <div>. This is a very powerful construct that, when used incorrecly, ",
            "can lead to functional and performance issues if used to inject badly-formed HTML. The ",
            "attribute value is signalScript as described in the ch5.subscribeStateScript utility function description."
          ],
          "value": [],
          "name": "data-ch5-innerhtml"
        },
        {
          "documentation": [
            "`data-ch5-showpulse` custom attribute",
            "***",
            "Works similarly to data-ch5-show, but does not offer toggle functionality (can only make the elements visible). ",
            "Works with standard HTML elements. ",
            "The data-ch5-noshow-type attribute can be supplied to set how an HTML element will be hidden from view."
          ],
          "value": [],
          "name": "data-ch5-showpulse"
        },
        {
          "documentation": [
            "`data-ch5-textcontent` custom attribute",
            "***",
            "The 'data-ch5-textcontent' custom HTML attribute allows for dynamic text content to be applied to ",
            "standard HTML elements such as <p> and <h1-6>. The attribute value is signalScript as described in the ",
            "ch5.subscribeStateScript utility function description."
          ],
          "value": [],
          "name": "data-ch5-textcontent"
        },
        {
          "documentation": [
            "`data-ch5-appendstyle` custom attribute",
            "***",
            "The 'data-ch5-appendstyle' custom HTML attribute appends the value of a signal to the 'style' attribute ",
            "on a standard HTML element. A signal value change will remove the prior value of the ",
            "signal and append the new value."
          ],
          "value": [],
          "name": "data-ch5-appendstyle"
        },
        {
          "documentation": [
            "`data-ch5-hidepulse` custom attribute",
            "***",
            "Works similarly to data-ch5-show, but does not offer toggle functionality (can only hide the elements). ",
            "Works with standard HTML elements. ",
            "The data-ch5-noshow-type attribute can be supplied to set how an HTML element will be hidden from view."
          ],
          "value": [],
          "name": "data-ch5-hidepulse"
        },
        {
          "documentation": [
            "`data-ch5-keep-sig-subscription` custom attribute",
            "***",
            "Keeps the state subscription key generated by hidepulse, showpulse, or show custom attributes."
          ],
          "value": [],
          "name": "data-ch5-keep-sig-subscription"
        },
        {
          "documentation": [
            "`data-ch5-i18n` custom attribute",
            "***",
            "The 'data-ch5-i18n' custom HTML attribute allows for text content translation to be applied to ",
            "standard HTML elements."
          ],
          "value": [],
          "name": "data-ch5-i18n"
        }
      ]
    },
    "elements": []
  },
  "ch5Elements": {
    "common": {
      "attributes": []
    },
    "elements": [
      {
        "attributes": [
          {
            "documentation": [
              "`id` attribute",
              "***",
              "This is a standard id HTML attribute."
            ],
            "value": [],
            "name": "id"
          },
          {
            "documentation": [
              "`customclass` attribute",
              "***",
              "Contains a list of classes that are applied on the component"
            ],
            "value": [],
            "name": "customclass"
          },
          {
            "documentation": [
              "`customstyle` attribute",
              "***",
              "Contains a list of space-delimited style classes applied on the component."
            ],
            "value": [],
            "name": "customstyle"
          },
          {
            "documentation": [
              "`noshowtype` attribute",
              "***",
              "This property reflects the type of the visibility of the item. See the 'data-ch5-noshow-type' ",
              "custom HTML attribute for further information."
            ],
            "value": [
              "visibility",
              "display",
              "remove"
            ],
            "name": "noshowtype"
          },
          {
            "documentation": [
              "`receivestatecustomclass` attribute",
              "***",
              "The value of this signal will be applied as an equivalent property on 'customClass'.",
              "The change of value will remove  theprior value and apply the new value."
            ],
            "value": [],
            "name": "receivestatecustomclass"
          },
          {
            "documentation": [
              "`receivestatecustomstyle` attribute",
              "***",
              "The value of this signal will be applied as an equivalent property on 'styleClass'.",
              "The change of value will remove the prior value and apply the new value."
            ],
            "value": [],
            "name": "receivestatecustomstyle"
          },
          {
            "documentation": [
              "`receivestateshow` attribute",
              "***",
              "When true, the boolean value of the signal determines if the component is visible."
            ],
            "value": [],
            "name": "receivestateshow"
          },
          {
            "documentation": [
              "`'receivestateshowpulse` attribute",
              "***",
              "on transition from false to true, this signal directs the component to become visible."
            ],
            "value": [],
            "name": "receivestateshowpulse"
          },
          {
            "documentation": [
              "`receivestatehidepulse` attribute",
              "***",
              "on transition from false to true, this signal will direct if the component is no longer visible."
            ],
            "value": [],
            "name": "receivestatehidepulse"
          },
          {
            "documentation": [
              "`receivestateenable` attribute",
              "***",
              "When true, the boolean value of the signal determines if the component is enabled.",
              "Note that the signal name is provided, and the value of the signal has the opposite ",
              "convention of the 'disabled' attribute. This is to provide consistency with current programming practices."
            ],
            "value": [],
            "name": "receivestateenable"
          },
          {
            "documentation": [
              "`sendeventonshow` attribute",
              "***",
              "Has a boolean value of true when the component is visible and false when not visible.",
              "Note that even if component is completely covered by other visible elements, it is still considered visible."
            ],
            "value": [],
            "name": "sendeventonshow"
          },
          {
            "documentation": [
              "`appendclasswheninviewport` attribute",
              "***",
              "Applies the provided value as class name while the component is visible and removes the class name when not visible."
            ],
            "value": [],
            "name": "appendclasswheninviewport"
          },
          {
            "documentation": [
              "`show` attribute",
              "***",
              "The visibility of the component depends upon the boolean value. The component is visible ",
              "when the value is true and hides when it is false."
            ],
            "value": [],
            "name": "show"
          },
          {
            "documentation": [
              "`dir` attribute",
              "***",
              "An enumerated attribute indicating the directionality of the element's text. It can have the following values:",
              "ltr, which means left to right and is to be used for languages that are written from the left to the right (like English) ",
              "rtl, which means right to left and is to be used for languages that are written from the right to the left (like Arabic) ",
              "auto, which lets the user agent decide. It uses a basic algorithm as it parses the characters inside the element until it ",
              "finds a character with a strong directionality then it applies that directionality to the whole element."
            ],
            "value": [],
            "name": "dir"
          },
          {
            "documentation": [
              "`class` attribute",
              "***",
              "This is a standard class HTML attribute."
            ],
            "value": [],
            "name": "class"
          },
          {
            "documentation": [
              "`style` attribute",
              "***",
              "This is a standard style HTML attribute."
            ],
            "value": [],
            "name": "style"
          },
          {
            "documentation": [
              "`role` attribute",
              "***",
              "This is an accessibility attribute implemented by all ch5-components and added automatically if not set by the user. ",
              "Where possible, it represents the closest supported type for a ch5-component. In the case of a ch5-button, the value of the role attribute is 'button', for a ch5-modal-dialog the value is 'dialog', and so on. ",
              "The default value for this ch5-component can be overridden via this attribute."
            ],
            "value": [],
            "name": "role"
          },
          {
            "documentation": [
              "`debug` attribute",
              "***",
              "The default value is false. Used to get useful developer-related information about component behavior."
            ],
            "value": [
              "false",
              "true"
            ],
            "name": "debug"
          },
          {
            "documentation": [
              "`disabled` attribute",
              "***",
              "The default value is false. This property will direct the component to change CSS and event listeners ",
              "to reflect a disabled state when true."
            ],
            "value": [
              "false",
              "true"
            ],
            "name": "disabled"
          },
          {
            "documentation": [
              "`size` attribute",
              "***",
              "Overrides the appearance of the button with alternative CSS that is defined in classes defined with ch5-button--size, where size is the value of the property. If no `size` is provided, type of `default` is used."
            ],
            "value": [
              "regular",
              "x-small",
              "small",
              "large",
              "x-large"
            ],
            "name": "size"
          },
          {
            "documentation": [
              "`label` attribute",
              "***",
              "The label of the button element."
            ],
            "value": [],
            "name": "label"
          },
          {
            "documentation": [
              "`icon` attribute",
              "***",
              "The icon class."
            ],
            "value": [],
            "name": "iconclass"
          },
          {
            "documentation": [
              "`iconposition` attribute",
              "***",
              "The default value is 'left'.",
              "Valid values: 'first', 'last', 'top', 'bottom'.",
              "The icon position relative to the label."
            ],
            "value": [
              "first",
              "last",
              "top",
              "bottom"
            ],
            "name": "iconposition"
          },
          {
            "documentation": [
              "`iconurl` attribute",
              "***",
              "The attribute used for add a SVG image."
            ],
            "value": [],
            "name": "iconurl"
          },
          {
            "documentation": [
              "`orientation` attribute",
              "***",
              "The default value is 'horizontal'. Valid values: 'horizontal', 'vertical'.",
              "Positions the control elements in a horizontal or vertical orientation.",
              "For vertical alignment, it will apply a CSS class that will rotate the ",
              "component -90 degrees (270 degrees clockwise, 90 degrees counter clockwise)."
            ],
            "value": [
              "horizontal",
              "vertical"
            ],
            "name": "orientation"
          },
          {
            "documentation": [
              "`shape` attribute",
              "***",
              "The default value is 'rounded-rectangle'. Valid values: 'rounded-rectangle', ",
              "'rectangle', 'tab', 'circle', 'oval'. The shape of the button."
            ],
            "value": [
              "rounded-rectangle",
              "rectangle",
              "tab",
              "circle",
              "oval"
            ],
            "name": "shape"
          },
          {
            "documentation": [
              "`stretch` attribute",
              "***",
              "The default value is 'both'. Valid values: 'width', 'height', 'both'.",
              "When the stretch property is set, the button element inherits the ",
              "width and/or height of the container. If stretch=height is used, ",
              "the button will be responsive based on the label length until it ",
              "reaches the max-width of the container. If stretch=width is ",
              "applied, there is no responsiveness after reaching the max-width, and ",
              "the text will overflow. The same applies if stretch=both is used. Note ",
              "that if the button element shape is 'circle' or 'oval', the stretch ",
              "property will be ignored."
            ],
            "value": [
              "",
              "both",
              "width",
              "height"
            ],
            "name": "stretch"
          },
          {
            "documentation": [
              "`type` attribute",
              "***",
              "Valid values: 'default', 'info', 'text', 'danger', 'warning', 'success', 'primary', 'secondary'.",
              "Overrides the appearance of the button with alternative CSS ",
              "defined in classes defined with ch5-button--type, where type is ",
              "the value of the property. If no 'type' is provided, the type of ",
              "'default' is used."
            ],
            "value": [
              "default",
              "primary",
              "info",
              "text",
              "danger",
              "warning",
              "success",
              "secondary"
            ],
            "name": "type"
          },
          {
            "documentation": [
              "`formtype` attribute",
              "***",
              "Valid values: 'cancel' and 'submit'. ",
              "submit: The value submit,submits the form data. ",
              "cancel: The value cancel, reset all the controls of form to their initial values."
            ],
            "value": [
              "",
              "cancel",
              "submit"
            ],
            "name": "formtype"
          },
          {
            "documentation": [
              "`receivestateselected` attribute",
              "***",
              "When received, applies a true value applied by the selected class (ch5-button--selected)."
            ],
            "value": [],
            "name": "receivestateselected"
          },
          {
            "documentation": [
              "`receivestatelabel` attribute",
              "***",
              "When received, applies the value on the label."
            ],
            "value": [],
            "name": "receivestatelabel"
          },
          {
            "documentation": [
              "`receivestatescriptlabelhtml` attribute",
              "***",
              "Allows the signal script evaluation to be applied to the ",
              "button.inner HTML class. Allows for multiline, multistyled labels."
            ],
            "value": [],
            "name": "receivestatescriptlabelhtml"
          },
          {
            "documentation": [
              "`sendeventonclick` attribute",
              "***",
              "Sends an event on click or tap (mouse or swipe up and down quickly).",
              "Use this when the control system takes an action on the rising edge from false to true of a boolean digital event.",
              "Examples include the SIMPL Logic Symbol for Toggle a with description of ",
              "Digital input <clock> 'High/1 (rising edge) = Toggle; Low/0 = No effect'."
            ],
            "value": [],
            "name": "sendeventonclick"
          },
          {
            "documentation": [
              "`sendeventontouch` attribute",
              "***",
              "Sends a boolean true event when the screen is tapped and a boolean false event when released.",
              "Use this when the control system takes an action on a level-sensitive boolean digital event.",
              "Examples include the SIMPL Logic Symbol for Analog Ramp with a description of ",
              "Digital input <up> 'High/1 (level sensitive) = Ramp up; Low/0 = Stop ramp'."
            ],
            "value": [],
            "name": "sendeventontouch"
          },
          {
            "documentation": [
              "`receivestateiconclass` attribute",
              "***",
              "The icon class received from the control system."
            ],
            "value": [],
            "name": "receivestateiconclass"
          },
          {
            "documentation": [
              "`receivestatetype` attribute",
              "***",
              "After receiving a stateType value from control system, this value is applied to the type attribute.",
              "See description of the type attribute."
            ],
            "value": [],
            "name": "receivestatetype"
          },
          {
            "documentation": [
              "`receivestateiconurl` attribute",
              "***",
              "After receiving stateIconUrl value from control system, this value is applied to the iconUrl attribute. ",
              "See description of the iconUrl attribute."
            ],
            "value": [],
            "name": "receivestateiconurl"
          },
          {
            "documentation": [
              "`customclasspressed` attribute",
              "***",
              "The name of the CSS class applied while the button is pressed by a user."
            ],
            "value": [],
            "name": "customclasspressed"
          },
          {
            "documentation": [
              "`customclassdisabled` attribute",
              "***",
              "The name of the CSS class applied while the button is disabled."
            ],
            "value": [],
            "name": "customclassdisabled"
          },
          {
            "documentation": [
              "`onpress` attribute",
              "***",
              "Runs when a press event is initiated."
            ],
            "value": [],
            "name": "onpress"
          },
          {
            "documentation": [
              "`onrelease` attribute",
              "***",
              "Runs when a release event is initiated."
            ],
            "value": [],
            "name": "onrelease"
          },
          {
            "documentation": [
              "`selected` attribute",
              "***",
              "The default value is false.",
              "This property reflects the state of the component. If set to true, ",
              "'ch5-button--selected' will be applied as the CSS class on the component."
            ],
            "value": [
              "false",
              "true"
            ],
            "name": "selected"
          },
          {
            "documentation": [
              "`customclassselected` attribute",
              "***",
              "Specifies a custom class for the selected state of the button."
            ],
            "value": [],
            "name": "customclassselected"
          }
        ],
        "documentation": [
          "`ch5-button` element",
          "***",
          "An extension to standard HTML ch5-button element with icons and simple formats."
        ],
        "snippets": [
          {
            "prefix": "ch5-button:blank",
            "description": "Crestron Button",
            "body": [
              "<ch5-button>",
              "</ch5-button>$0"
            ]
          },
          {
            "prefix": "ch5-button:default",
            "description": "Crestron Button",
            "body": [
              "<ch5-button id=\"btn_${1:id}\"",
              "\tlabel=\"${2:Crestron Button}\"",
              "\tsendeventonclick=\"${3:btn_${1}_clicked}\">",
              "</ch5-button>$0"
            ]
          },
          {
            "prefix": "ch5-button:all-attributes",
            "description": "Crestron Button (All Attributes)",
            "body": [
              "<ch5-button id=\"btn_${1:id}\"",
              "\tlabel=\"${2:Crestron Button}\"",
              "\ttype=\"${3|default,primary,info,text,danger,warning,success,secondary|}\"",
              "\tcustomClass=\"${4:customClass}\"",
              "\tshape=\"${5|rounded-rectangle,rectangle,tab,circle,oval|}\"",
              "\tsize=\"${6|regular,x-small,small,large,x-large|}\"",
              "\tstretch=\"${7|both,width,height|}\"",
              "\ticonposition=\"${8|first,last,top,bottom|}\"",
              "\ticonclass=\"${9:iconClass}\"",
              "\torientation=\"${10|horizontal,vertical|}\"",
              "\tsendeventonclick=\"${11:btn_${1}_clicked}\"",
              "\tsendeventontouch=\"${12:btn_${1}_touched}\"",
              "\treceivestateselected=\"${13}\"",
              "\treceivestatelabel=\"${14}\"",
              "\treceivestatescriptlabelhtml=\"${15}\">",
              "</ch5-button>$0"
            ]
          }
        ],
        "description": "Ch5 Button offers a wide range of functionality out-of-the-box.",
        "name": "Ch5 Button",
        "tagName": "ch5-button"
      },
      {
        "attributes": [
          {
            "documentation": [
              "`id` attribute",
              "***",
              "This is a standard id HTML attribute."
            ],
            "value": [],
            "name": "id"
          },
          {
            "documentation": [
              "`customclass` attribute",
              "***",
              "Contains a list of classes that are applied on the component"
            ],
            "value": [],
            "name": "customclass"
          },
          {
            "documentation": [
              "`customstyle` attribute",
              "***",
              "Contains a list of space-delimited style classes applied on the component."
            ],
            "value": [],
            "name": "customstyle"
          },
          {
            "documentation": [
              "`noshowtype` attribute",
              "***",
              "This property reflects the type of the visibility of the item. See the 'data-ch5-noshow-type' ",
              "custom HTML attribute for further information."
            ],
            "value": [
              "visibility",
              "display",
              "remove"
            ],
            "name": "noshowtype"
          },
          {
            "documentation": [
              "`receivestatecustomclass` attribute",
              "***",
              "The value of this signal will be applied as an equivalent property on 'customClass'.",
              "The change of value will remove  theprior value and apply the new value."
            ],
            "value": [],
            "name": "receivestatecustomclass"
          },
          {
            "documentation": [
              "`receivestatecustomstyle` attribute",
              "***",
              "The value of this signal will be applied as an equivalent property on 'styleClass'.",
              "The change of value will remove the prior value and apply the new value."
            ],
            "value": [],
            "name": "receivestatecustomstyle"
          },
          {
            "documentation": [
              "`receivestateshow` attribute",
              "***",
              "When true, the boolean value of the signal determines if the component is visible."
            ],
            "value": [],
            "name": "receivestateshow"
          },
          {
            "documentation": [
              "`'receivestateshowpulse` attribute",
              "***",
              "on transition from false to true, this signal directs the component to become visible."
            ],
            "value": [],
            "name": "receivestateshowpulse"
          },
          {
            "documentation": [
              "`receivestatehidepulse` attribute",
              "***",
              "on transition from false to true, this signal will direct if the component is no longer visible."
            ],
            "value": [],
            "name": "receivestatehidepulse"
          },
          {
            "documentation": [
              "`receivestateenable` attribute",
              "***",
              "When true, the boolean value of the signal determines if the component is enabled.",
              "Note that the signal name is provided, and the value of the signal has the opposite ",
              "convention of the 'disabled' attribute. This is to provide consistency with current programming practices."
            ],
            "value": [],
            "name": "receivestateenable"
          },
          {
            "documentation": [
              "`sendeventonshow` attribute",
              "***",
              "Has a boolean value of true when the component is visible and false when not visible.",
              "Note that even if component is completely covered by other visible elements, it is still considered visible."
            ],
            "value": [],
            "name": "sendeventonshow"
          },
          {
            "documentation": [
              "`appendclasswheninviewport` attribute",
              "***",
              "Applies the provided value as class name while the component is visible and removes the class name when not visible."
            ],
            "value": [],
            "name": "appendclasswheninviewport"
          },
          {
            "documentation": [
              "`show` attribute",
              "***",
              "The visibility of the component depends upon the boolean value. The component is visible ",
              "when the value is true and hides when it is false."
            ],
            "value": [],
            "name": "show"
          },
          {
            "documentation": [
              "`dir` attribute",
              "***",
              "An enumerated attribute indicating the directionality of the element's text. It can have the following values:",
              "ltr, which means left to right and is to be used for languages that are written from the left to the right (like English) ",
              "rtl, which means right to left and is to be used for languages that are written from the right to the left (like Arabic) ",
              "auto, which lets the user agent decide. It uses a basic algorithm as it parses the characters inside the element until it ",
              "finds a character with a strong directionality then it applies that directionality to the whole element."
            ],
            "value": [],
            "name": "dir"
          },
          {
            "documentation": [
              "`class` attribute",
              "***",
              "This is a standard class HTML attribute."
            ],
            "value": [],
            "name": "class"
          },
          {
            "documentation": [
              "`style` attribute",
              "***",
              "This is a standard style HTML attribute."
            ],
            "value": [],
            "name": "style"
          },
          {
            "documentation": [
              "`role` attribute",
              "***",
              "This is an accessibility attribute implemented by all ch5-components and added automatically if not set by the user. ",
              "Where possible, it represents the closest supported type for a ch5-component. In the case of a ch5-button, the value of the role attribute is 'button', for a ch5-modal-dialog the value is 'dialog', and so on. ",
              "The default value for this ch5-component can be overridden via this attribute."
            ],
            "value": [],
            "name": "role"
          },
          {
            "documentation": [
              "`debug` attribute",
              "***",
              "The default value is false. Used to get useful developer-related information about component behavior."
            ],
            "value": [
              "false",
              "true"
            ],
            "name": "debug"
          },
          {
            "documentation": [
              "`disabled` attribute",
              "***",
              "The default value is false. This property will direct the component to change CSS and event listeners ",
              "to reflect a disabled state when true."
            ],
            "value": [
              "false",
              "true"
            ],
            "name": "disabled"
          },
          {
            "documentation": [
              "`submitbuttonlabel` attribute",
              "***",
              "Represents the label of the Submit button."
            ],
            "value": [],
            "name": "submitbuttonlabel"
          },
          {
            "documentation": [
              "`submitbuttonicon` attribute",
              "***",
              "Represents the icon of the Submit button."
            ],
            "value": [],
            "name": "submitbuttonicon"
          },
          {
            "documentation": [
              "`submitbuttonStyle` attribute",
              "***",
              "Represents the style of the Submit button."
            ],
            "value": [],
            "name": "submitbuttonstyle"
          },
          {
            "documentation": [
              "`submitbuttontype` attribute",
              "***",
              "Represents the type of the auto-generated Submit button."
            ],
            "value": [
              "default",
              "primary",
              "info",
              "text",
              "danger",
              "warning",
              "success",
              "secondary"
            ],
            "name": "submitbuttontype"
          },
          {
            "documentation": [
              "`cancelbuttonlabel` attribute",
              "***",
              "Represents the label of the Cancel button."
            ],
            "value": [],
            "name": "cancelbuttonlabel"
          },
          {
            "documentation": [
              "`cancelbuttonicon` attribute",
              "***",
              "Represents the icon of the Cancel button."
            ],
            "value": [],
            "name": "cancelbuttonicon"
          },
          {
            "documentation": [
              "`cancelbuttonstyle` attribute",
              "***",
              "Represents the style of the Cancel button."
            ],
            "value": [],
            "name": "cancelbuttonstyle"
          },
          {
            "documentation": [
              "`cancelButtonType` attribute",
              "***",
              "Represents the type of the auto-generated Cancel button."
            ],
            "value": [
              "default",
              "primary",
              "info",
              "text",
              "danger",
              "warning",
              "success",
              "secondary"
            ],
            "name": "cancelbuttontype"
          },
          {
            "documentation": [
              "`submitid` attribute",
              "***",
              "Represents the ID of the Submit button."
            ],
            "value": [],
            "name": "submitid"
          },
          {
            "documentation": [
              "`cancelId` attribute",
              "***",
              "Represents the ID of the Cancel button."
            ],
            "value": [],
            "name": "cancelid"
          },
          {
            "documentation": [
              "`hidesubmitbutton` attribute",
              "***",
              "If true, the Submit button is not shown."
            ],
            "value": [
              "false",
              "true"
            ],
            "name": "hidesubmitbutton"
          },
          {
            "documentation": [
              "`hidecancelbutton` attribute",
              "***",
              "If true, the Cancel button is not shown."
            ],
            "value": [
              "false",
              "true"
            ],
            "name": "hidecancelbutton"
          }
        ],
        "documentation": [
          "`ch5-form` element",
          "***",
          " This component provides a container for which 'input' style components, such as TextEntry, ",
          "Slider, Toggle Switch, Select, and Spinner, can be grouped together to update their send signals upon a ",
          "Submit button press or to revert to their receive signal value upon a Cancel button press."
        ],
        "snippets": [
          {
            "prefix": "ch5-form:blank",
            "description": "Crestron Form (blank)",
            "body": [
              "<ch5-form>",
              "</ch5-form>$0"
            ]
          },
          {
            "prefix": "ch5-form:default",
            "description": "Crestron Form (default)",
            "body": [
              "<ch5-form>",
              "    <h2>Room X</h2>",
              "    ",
              "    <h5>Do not disturb</h5>",
              "    <ch5-toggle",
              "        labelon=\"On\"",
              "        labeloff=\"Off\"",
              "        feedbackmode=\"submit\"",
              "        receivestatevalue=\"room_donotdisturb_selected\"",
              "        sendeventonclick=\"room_donotdisturb_clicked\">",
              "    </ch5-toggle>",
              "",
              "",
              "    <h5>Temperature</h5>",
              "    <ch5-slider",
              "        feedbackmode=\"submit\"",
              "        receivestatevalue=\"room_thermostat_set_fb\"",
              "        sendeventonchange=\"room_thermostat_set\"",
              "        step=\"10\"",
              "        min=\"0\"",
              "        max=\"100\">",
              "    </ch5-slider>",
              "",
              "    ",
              "    <ch5-select size=\"4\" indexid=\"idx\" mode=\"panel\"",
              "                 feedbackmode=\"submit\"",
              "                 sendeventonchange=\"select_send_change_signal\"",
              "                 receivestatevalue=\"select_receive_signal_value\"",
              "                 noneselectedprompt=\"Select\">",
              "         <template>",
              "            <ch5-select-option>",
              "                <span>Option {{idx}}</span>",
              "            </ch5-select-option>",
              "         </template>",
              "    </ch5-select>",
              "</ch5-form>"
            ]
          },
          {
            "prefix": "ch5-form:custom-buttons",
            "description": "Crestron Form with custom submit and cancel buttons inside",
            "body": [
              "<ch5-form>",
              "    <h2>Room X</h2>",
              "    ",
              "    <h5>Do not disturb</h5>",
              "    <ch5-toggle",
              "        labelon=\"On\"",
              "        labeloff=\"Off\"",
              "        feedbackmode=\"submit\"",
              "        receivestatevalue=\"room_donotdisturb_selected\"",
              "        sendeventonclick=\"room_donotdisturb_clicked\">",
              "    </ch5-toggle>",
              "",
              "",
              "    <h5>Temperature</h5>",
              "    <ch5-slider",
              "        feedbackmode=\"submit\"",
              "        receivestatevalue=\"room_thermostat_set_fb\"",
              "        sendeventonchange=\"room_thermostat_set\"",
              "        step=\"10\"",
              "        min=\"0\"",
              "        max=\"100\">",
              "    </ch5-slider>",
              "",
              "    ",
              "    <ch5-select size=\"4\" indexId=\"idx\" mode=\"panel\"",
              "                 feedbackmode=\"submit\"",
              "                 sendeventonchange=\"select_send_change_signal\"",
              "                 receivestatevalue=\"select_receive_signal_value\"",
              "                 noneselectedprompt=\"Select\">",
              "         <template>",
              "            <ch5-select-option>",
              "                <span>Option {{idx}}</span>",
              "            </ch5-select-option>",
              "         </template>",
              "    </ch5-select>",
              "",
              "    <ch5-button id=\"room_submit_id\" formtype=\"submit\" label=\"Update Room\"></ch5-button>",
              "    <ch5-button id=\"room_cancel_id\" formtype=\"cancel\" label=\"Revert Changes\"></ch5-button>",
              "</ch5-form>"
            ]
          }
        ],
        "description": "Ch5 Form offers a wide range of functionality out-of-the-box.",
        "name": "Ch5 Form",
        "tagName": "ch5-form"
      },
      {
        "attributes": [
          {
            "documentation": [
              "`id` attribute",
              "***",
              "This is a standard id HTML attribute."
            ],
            "value": [],
            "name": "id"
          },
          {
            "documentation": [
              "`customclass` attribute",
              "***",
              "Contains a list of classes that are applied on the component"
            ],
            "value": [],
            "name": "customclass"
          },
          {
            "documentation": [
              "`customstyle` attribute",
              "***",
              "Contains a list of space-delimited style classes applied on the component."
            ],
            "value": [],
            "name": "customstyle"
          },
          {
            "documentation": [
              "`noshowtype` attribute",
              "***",
              "This property reflects the type of the visibility of the item. See the 'data-ch5-noshow-type' ",
              "custom HTML attribute for further information."
            ],
            "value": [
              "visibility",
              "display",
              "remove"
            ],
            "name": "noshowtype"
          },
          {
            "documentation": [
              "`receivestatecustomclass` attribute",
              "***",
              "The value of this signal will be applied as an equivalent property on 'customClass'.",
              "The change of value will remove  theprior value and apply the new value."
            ],
            "value": [],
            "name": "receivestatecustomclass"
          },
          {
            "documentation": [
              "`receivestatecustomstyle` attribute",
              "***",
              "The value of this signal will be applied as an equivalent property on 'styleClass'.",
              "The change of value will remove the prior value and apply the new value."
            ],
            "value": [],
            "name": "receivestatecustomstyle"
          },
          {
            "documentation": [
              "`receivestateshow` attribute",
              "***",
              "When true, the boolean value of the signal determines if the component is visible."
            ],
            "value": [],
            "name": "receivestateshow"
          },
          {
            "documentation": [
              "`'receivestateshowpulse` attribute",
              "***",
              "on transition from false to true, this signal directs the component to become visible."
            ],
            "value": [],
            "name": "receivestateshowpulse"
          },
          {
            "documentation": [
              "`receivestatehidepulse` attribute",
              "***",
              "on transition from false to true, this signal will direct if the component is no longer visible."
            ],
            "value": [],
            "name": "receivestatehidepulse"
          },
          {
            "documentation": [
              "`receivestateenable` attribute",
              "***",
              "When true, the boolean value of the signal determines if the component is enabled.",
              "Note that the signal name is provided, and the value of the signal has the opposite ",
              "convention of the 'disabled' attribute. This is to provide consistency with current programming practices."
            ],
            "value": [],
            "name": "receivestateenable"
          },
          {
            "documentation": [
              "`sendeventonshow` attribute",
              "***",
              "Has a boolean value of true when the component is visible and false when not visible.",
              "Note that even if component is completely covered by other visible elements, it is still considered visible."
            ],
            "value": [],
            "name": "sendeventonshow"
          },
          {
            "documentation": [
              "`appendclasswheninviewport` attribute",
              "***",
              "Applies the provided value as class name while the component is visible and removes the class name when not visible."
            ],
            "value": [],
            "name": "appendclasswheninviewport"
          },
          {
            "documentation": [
              "`show` attribute",
              "***",
              "The visibility of the component depends upon the boolean value. The component is visible ",
              "when the value is true and hides when it is false."
            ],
            "value": [],
            "name": "show"
          },
          {
            "documentation": [
              "`dir` attribute",
              "***",
              "An enumerated attribute indicating the directionality of the element's text. It can have the following values:",
              "ltr, which means left to right and is to be used for languages that are written from the left to the right (like English) ",
              "rtl, which means right to left and is to be used for languages that are written from the right to the left (like Arabic) ",
              "auto, which lets the user agent decide. It uses a basic algorithm as it parses the characters inside the element until it ",
              "finds a character with a strong directionality then it applies that directionality to the whole element."
            ],
            "value": [],
            "name": "dir"
          },
          {
            "documentation": [
              "`alt` attribute",
              "***",
              "Defines an alternative text description for the image."
            ],
            "value": [],
            "name": "alt"
          },
          {
            "documentation": [
              "`height` attribute",
              "The intrinsic height of the image, in pixels. Must be a string of the form Npx or N%."
            ],
            "value": [],
            "name": "height"
          },
          {
            "documentation": [
              "`width` attribute",
              "The intrinsic width of the image, in pixels. Must be a string of the form Npx or N%."
            ],
            "value": [],
            "name": "width"
          },
          {
            "documentation": [
              "`refreshrate` attribute",
              "***",
              "The number of seconds between each URL refresh. If 0, the URL will not",
              "be refreshed."
            ],
            "value": [],
            "name": "refreshrate"
          },
          {
            "documentation": [
              "`url` attribute",
              "***",
              "Must be a supported image format, including JPEG, GIF, PNG, SVG, and BMP."
            ],
            "value": [],
            "name": "url"
          },
          {
            "documentation": [
              "`password` attribute",
              "***",
              "The authentication password required to get the image."
            ],
            "value": [],
            "name": "password"
          },
          {
            "documentation": [
              "`user` attribute",
              "***",
              "The authentication username required to get the image."
            ],
            "value": [],
            "name": "user"
          },
          {
            "documentation": [
              "`receivestateurl` attribute",
              "***",
              "The image URL passed via state."
            ],
            "value": [],
            "name": "receivestateurl"
          },
          {
            "documentation": [
              "`sendeventontouch` attribute",
              "***",
              "Sends a boolean true event when the screen is tapped and boolean false event when released. ",
              "Use this when the control system takes an action on a level-sensitive boolean digital event. ",
              "Examples include the SIMPL Logic Symbol for Analog Ramp with a description of ",
              "Digital input <up> 'High/1 (level sensitive) = Ramp up; Low/0 = Stop ramp'."
            ],
            "value": [],
            "name": "sendeventontouch"
          },
          {
            "documentation": [
              "`sendeventonclick` attribute",
              "***",
              "Sends an on click or tap event (mouse or swipe up and down quickly). ",
              "Use this when the control system takes an action on the rising edge from false to true of a boolean digital event. ",
              "Examples include the SIMPL Logic Symbol for Toggle with a description of ",
              "Digital input <clock> 'High/1 (rising edge) = Toggle; Low/0 = No effect'."
            ],
            "value": [],
            "name": "sendeventonclick"
          },
          {
            "documentation": [
              "`sendeventonerror` attribute",
              "***",
              "Sends an event on error."
            ],
            "value": [],
            "name": "sendeventonerror"
          },
          {
            "documentation": [
              "`class` attribute",
              "***",
              "This is a standard class HTML attribute."
            ],
            "value": [],
            "name": "class"
          },
          {
            "documentation": [
              "`style` attribute",
              "***",
              "This is a standard style HTML attribute."
            ],
            "value": [],
            "name": "style"
          },
          {
            "documentation": [
              "`role` attribute",
              "***",
              "This is an accessibility attribute implemented by all ch5-components and added automatically if not set by the user. ",
              "Where possible, it represents the closest supported type for a ch5-component. In the case of a ch5-button, the value of the role attribute is 'button', for a ch5-modal-dialog the value is 'dialog', and so on. ",
              "The default value for this ch5-component can be overridden via this attribute."
            ],
            "value": [],
            "name": "role"
          },
          {
            "documentation": [
              "`debug` attribute",
              "***",
              "The default value is false. Used to get useful developer-related information about component behavior."
            ],
            "value": [
              "false",
              "true"
            ],
            "name": "debug"
          },
          {
            "documentation": [
              "`disabled` attribute",
              "***",
              "The default value is false. This property will direct the component to change CSS and event listeners ",
              "to reflect a disabled state when true."
            ],
            "value": [
              "false",
              "true"
            ],
            "name": "disabled"
          },
          {
            "documentation": [
              "`onpress` attribute",
              "***",
              "Runs when a press event is initiated."
            ],
            "value": [],
            "name": "onpress"
          },
          {
            "documentation": [
              "`onrelease` attribute",
              "***",
              "Runs when a release event is initiated."
            ],
            "value": [],
            "name": "onrelease"
          }
        ],
        "documentation": [
          "`ch5-image` element",
          "***",
          "A component to load images. Even with this component, the user can use the standard HTML ",
          "<img> tag. This component allows for images to be loaded mainly from a security camera on a polled basis. ",
          "The implementation of the Image Component in used to coordinate requests of images to be shared ",
          "between different image components and video components that may be requesting the same image URL."
        ],
        "snippets": [
          {
            "prefix": "ch5-image:blank",
            "description": "Crestron Image (Blank)",
            "body": [
              "<ch5-image>",
              "</ch5-image>$0"
            ]
          },
          {
            "prefix": "ch5-image:default",
            "description": "Crestron Image (Default)",
            "body": [
              "<ch5-image alt=\"${1:Outside driveway image}\"",
              "\theight=\"${2:900px}\"",
              "\twidth=\"${3:1600px}\"",
              "\trefreshrate=\"${4:2}\"",
              "\turl=\"${5:http://someServer/image.png}\">",
              "</ch5-image>$0"
            ]
          },
          {
            "prefix": "ch5-image:receive-signal",
            "description": "Crestron Image (Receive Signal)",
            "body": [
              "<ch5-image alt=\"${1:Backyard image}\"",
              "\theight=\"${2:450px}\"",
              "\twidth=\"${3:800px}\"",
              "\trefreshrate=\"${4:1}\"",
              "\treceivestateurl=\"${5:url_for_image_signal}\">",
              "</ch5-image>$0"
            ]
          }
        ],
        "description": "Ch5 Image offers a wide range of functionality out-of-the-box.",
        "name": "Ch5 Image",
        "tagName": "ch5-image"
      },
      {
        "attributes": [
          {
            "documentation": [
              "`id` attribute",
              "***",
              "This is a standard id HTML attribute."
            ],
            "value": [],
            "name": "id"
          },
          {
            "documentation": [
              "`customclass` attribute",
              "***",
              "Contains a list of classes that are applied on the component"
            ],
            "value": [],
            "name": "customclass"
          },
          {
            "documentation": [
              "`customstyle` attribute",
              "***",
              "Contains a list of space-delimited style classes applied on the component."
            ],
            "value": [],
            "name": "customstyle"
          },
          {
            "documentation": [
              "`noshowtype` attribute",
              "***",
              "This property reflects the type of the visibility of the item. See the 'data-ch5-noshow-type' ",
              "custom HTML attribute for further information."
            ],
            "value": [
              "visibility",
              "display",
              "remove"
            ],
            "name": "noshowtype"
          },
          {
            "documentation": [
              "`receivestatecustomclass` attribute",
              "***",
              "The value of this signal will be applied as an equivalent property on 'customClass'.",
              "The change of value will remove  theprior value and apply the new value."
            ],
            "value": [],
            "name": "receivestatecustomclass"
          },
          {
            "documentation": [
              "`receivestatecustomstyle` attribute",
              "***",
              "The value of this signal will be applied as an equivalent property on 'styleClass'.",
              "The change of value will remove the prior value and apply the new value."
            ],
            "value": [],
            "name": "receivestatecustomstyle"
          },
          {
            "documentation": [
              "`receivestateshow` attribute",
              "***",
              "When true, the boolean value of the signal determines if the component is visible."
            ],
            "value": [],
            "name": "receivestateshow"
          },
          {
            "documentation": [
              "`'receivestateshowpulse` attribute",
              "***",
              "on transition from false to true, this signal directs the component to become visible."
            ],
            "value": [],
            "name": "receivestateshowpulse"
          },
          {
            "documentation": [
              "`receivestatehidepulse` attribute",
              "***",
              "on transition from false to true, this signal will direct if the component is no longer visible."
            ],
            "value": [],
            "name": "receivestatehidepulse"
          },
          {
            "documentation": [
              "`receivestateenable` attribute",
              "***",
              "When true, the boolean value of the signal determines if the component is enabled.",
              "Note that the signal name is provided, and the value of the signal has the opposite ",
              "convention of the 'disabled' attribute. This is to provide consistency with current programming practices."
            ],
            "value": [],
            "name": "receivestateenable"
          },
          {
            "documentation": [
              "`sendeventonshow` attribute",
              "***",
              "Has a boolean value of true when the component is visible and false when not visible.",
              "Note that even if component is completely covered by other visible elements, it is still considered visible."
            ],
            "value": [],
            "name": "sendeventonshow"
          },
          {
            "documentation": [
              "`appendclasswheninviewport` attribute",
              "***",
              "Applies the provided value as class name while the component is visible and removes the class name when not visible."
            ],
            "value": [],
            "name": "appendclasswheninviewport"
          },
          {
            "documentation": [
              "`show` attribute",
              "***",
              "The visibility of the component depends upon the boolean value. The component is visible ",
              "when the value is true and hides when it is false."
            ],
            "value": [],
            "name": "show"
          },
          {
            "documentation": [
              "`dir` attribute",
              "***",
              "An enumerated attribute indicating the directionality of the element's text. It can have the following values:",
              "ltr, which means left to right and is to be used for languages that are written from the left to the right (like English) ",
              "rtl, which means right to left and is to be used for languages that are written from the right to the left (like Arabic) ",
              "auto, which lets the user agent decide. It uses a basic algorithm as it parses the characters inside the element until it ",
              "finds a character with a strong directionality then it applies that directionality to the whole element."
            ],
            "value": [],
            "name": "dir"
          },
          {
            "documentation": [
              "`class` attribute",
              "***",
              "This is a standard class HTML attribute."
            ],
            "value": [],
            "name": "class"
          },
          {
            "documentation": [
              "`style` attribute",
              "***",
              "This is a standard style HTML attribute."
            ],
            "value": [],
            "name": "style"
          },
          {
            "documentation": [
              "`role` attribute",
              "***",
              "This is an accessibility attribute implemented by all ch5-components and added automatically if not set by the user. ",
              "Where possible, it represents the closest supported type for a ch5-component. In the case of a ch5-button, the value of the role attribute is 'button', for a ch5-modal-dialog the value is 'dialog', and so on. ",
              "The default value for this ch5-component can be overridden via this attribute."
            ],
            "value": [],
            "name": "role"
          },
          {
            "documentation": [
              "`debug` attribute",
              "***",
              "The default value is false. Used to get useful developer-related information about component behavior."
            ],
            "value": [
              "false",
              "true"
            ],
            "name": "debug"
          },
          {
            "documentation": [
              "`disabled` attribute",
              "***",
              "The default value is false. This property will direct the component to change CSS and event listeners ",
              "to reflect a disabled state when true."
            ],
            "value": [
              "false",
              "true"
            ],
            "name": "disabled"
          },
          {
            "documentation": [
              "`size` attribute",
              "***",
              "The number of items in a list. The max value is 1000."
            ],
            "value": [],
            "name": "size"
          },
          {
            "documentation": [
              "`orientation` attribute",
              "***",
              "The default value is 'vertical'. Valid values: 'vertical' or 'horizontal'. ",
              "Positions the control elements in a horizontal or vertical orientation. ",
              "This is done with the CSS overflow property. The overflow property specifies ",
              "what happens if content overflows an element's box."
            ],
            "value": [
              "vertical",
              "horizontal"
            ],
            "name": "orientation"
          },
          {
            "documentation": [
              "`bufferammount` attribute",
              "***",
              "The number of elements to be rendered outside of the current container's ",
              "viewport (visible area)."
            ],
            "value": [],
            "name": "bufferamount"
          },
          {
            "documentation": [
              "`itemheight` attribute",
              "***",
              "The height of an item. The height value can be in px and vh. ",
              "The item height is needed for a vertical infinite list. If the height is not provided, ",
              "the infinite list is calculated based on the first item height. ",
              "Each list item must have the same height."
            ],
            "value": [],
            "name": "itemheight"
          },
          {
            "documentation": [
              "`itemwidth` attribute",
              "***",
              "Recommendation: Use the same unit type for all width and height attributes. ",
              "The width of an item. The height value can be in px and vh. ",
              "The item width is needed for a vertical infinite list. If the width is not provided, ",
              "the infinite list is calculated based on the first item width. ",
              "Each list item must have the same width."
            ],
            "value": [],
            "name": "itemwidth"
          },
          {
            "documentation": [
              "`minWidth` attribute",
              "***",
              "Recommendation: Use the same unit type for all width height attributes. ",
              "The min width of the list container."
            ],
            "value": [],
            "name": "minwidth"
          },
          {
            "documentation": [
              "`minWidth` attribute",
              "***",
              "Recommendation: Use the same unit type for all width and height attributes. ",
              "The max width of the list container."
            ],
            "value": [],
            "name": "maxwidth"
          },
          {
            "documentation": [
              "`minHeight` attribute",
              "***",
              "Recommendation: Use the same unit type for all width and height attributes ",
              "The min height of the list container."
            ],
            "value": [],
            "name": "minheight"
          },
          {
            "documentation": [
              "`maxHeight` attribute",
              "***",
              "Recommendation: Use the same unit type for all width and height attributes. ",
              "The max height of the list container."
            ],
            "value": [],
            "name": "maxheight"
          },
          {
            "documentation": [
              "`scrollToTime` attribute",
              "***",
              "The default value is 500ms. Sets how long to animate changing a list location to the scrollTo ",
              "signal value."
            ],
            "value": [],
            "name": "scrolltotime"
          },
          {
            "documentation": [
              "`indexid` attribute",
              "***",
              "The pattern that will be replaced with the id from the list items iteration. ",
              "Example: {{ idx }}"
            ],
            "value": [],
            "name": "indexid"
          },
          {
            "documentation": [
              "`receivestatesize` attribute",
              "***",
              "Represents the size of the list received from Native."
            ],
            "value": [],
            "name": "receivestatesize"
          },
          {
            "documentation": [
              "`receivestatescrollto` attribute",
              "***",
              "Represents the scroll position of the list received from Native. ",
              "Example: value 10 of receivestatescrollto will scroll the list ",
              "to the 10th element."
            ],
            "value": [],
            "name": "receivestatescrollto"
          },
          {
            "documentation": [
              "`receivestatetemplatevars` attribute",
              "***",
              "Represents the template variables that are received from Native."
            ],
            "value": [],
            "name": "receivestatetemplatevars"
          },
          {
            "documentation": [
              "`gestureable` attribute",
              "***",
              "The default value is false. When set to true, gesturing will be supported. ",
              "Adding this will change the behavior inside of the component."
            ],
            "value": [
              "false",
              "true"
            ],
            "name": "gestureable"
          },
          {
            "documentation": [
              "`scrollbar` attribute",
              "***",
              "The default value is false. If true, shows a scrollbar for the list."
            ],
            "value": [
              "false",
              "true"
            ],
            "name": "scrollbar"
          },
          {
            "documentation": [
              "`pageswipe` attribute",
              "***",
              "The default value is false. If false, a swipe gesture moves the list with momentum as ",
              "expected on 'throwable' lists. If true, a swipe gesture will move the list only ",
              "woith the number of visible items, snapping the first visible item to the top ",
              "for a vertical list or on left for dir='ltr' attribute lists."
            ],
            "value": [
              "false",
              "true"
            ],
            "name": "pagedswipe"
          },
          {
            "documentation": [
              "`endless` attribute",
              "***",
              "The default value is false. If false, continued swiping when reaching end of list reveals ",
              "no items beyond the last. If true, if the attirbute is added without a value, ",
              "the first list item will ",
              "virtually follow the last item when the end of the list is reached. ",
              "Swiping towards the beginning of the list items will also show the last item ",
              "prior to the first."
            ],
            "value": [
              "false",
              "true"
            ],
            "name": "endless"
          }
        ],
        "documentation": [
          "`ch5-list` element",
          "***",
          " Used to display a list of items."
        ],
        "snippets": [
          {
            "prefix": "ch5-list:all",
            "description": "Crestron List (All Attributes)",
            "body": [
              "<ch5-list indexid=\"${1:idx}\"",
              "\tsize=\"${2:5}\"",
              "\torientation=\"${3:horizontal}\"",
              "\tbufferamount=\"${4:5}\"",
              "\titemheight=\"${5:75px}\"",
              "\titemwidth=\"${6:125px}\"",
              "\tminwidth=\"${7:250px}\"",
              "\tmaxwidth=\"${8:500px}\"",
              "\tminheight=\"${9:100px}\"",
              "\tmaxheight=\"${10:150px}\"",
              "\tpagedswipe=\"${11:false}\"",
              "\tendless=\"${12:false}\"",
              "\tscrollbar=\"${13:true}\"",
              "\tscrolltotime=\"${14}\"",
              "\treceivestatesize=\"${15}\"",
              "\treceivestatescrollto=\"${16}\"",
              "\treceivestatetemplatevars=\"${17}\">",
              "</ch5-list>$0"
            ]
          },
          {
            "prefix": "ch5-list",
            "description": "Crestron List",
            "body": [
              "<ch5-list size=\"${1:10}\" orientation=\"${2|vertical,horizontal|}\">",
              "\t<template>",
              "\t\t<ch5-button id=\"btn_${3:id}\"",
              "\t\t\tlabel=\"${4:Crestron Button}\"",
              "\t\t\tsendeventonclick=\"${5:btn_${3}_clicked}\">",
              "\t\t</ch5-button>",
              "\t</template>",
              "</ch5-list>$0"
            ]
          },
          {
            "prefix": "ch5-list-",
            "description": "Crestron List Extended",
            "body": [
              "<ch5-list size=\"${1:10}\" orientation=\"${2|vertical,horizontal|}\" minwidth=\"${3:900px}\" maxwidth=\"${4:1115px}\"",
              "\t minheight=\"${5:600px}\" maxheight=\"${6:700px}\" indexid=\"${7:idx}\" itemwidth=\"${8:150px}\">",
              "\t<template>",
              "\t\t<ch5-button stretch=\"${9|both,width,height|}\" label=\"${10:mute}\"",
              "\t\t\treceivestateselected=\"levels_mute_selected_${7}\">",
              "\t\t</ch5-button>",
              "\t</template>",
              "</ch5-list>$0"
            ]
          }
        ],
        "description": "Ch5 List offers a wide range of functionality out-of-the-box.",
        "name": "Ch5 List",
        "tagName": "ch5-list"
      },
      {
        "attributes": [
          {
            "documentation": [
              "`id` attribute",
              "***",
              "This is a standard id HTML attribute."
            ],
            "value": [],
            "name": "id"
          },
          {
            "documentation": [
              "`customclass` attribute",
              "***",
              "Contains a list of classes that are applied on the component"
            ],
            "value": [],
            "name": "customclass"
          },
          {
            "documentation": [
              "`customstyle` attribute",
              "***",
              "Contains a list of space-delimited style classes applied on the component."
            ],
            "value": [],
            "name": "customstyle"
          },
          {
            "documentation": [
              "`noshowtype` attribute",
              "***",
              "This property reflects the type of the visibility of the item. See the 'data-ch5-noshow-type' ",
              "custom HTML attribute for further information."
            ],
            "value": [
              "visibility",
              "display",
              "remove"
            ],
            "name": "noshowtype"
          },
          {
            "documentation": [
              "`receivestatecustomclass` attribute",
              "***",
              "The value of this signal will be applied as an equivalent property on 'customClass'.",
              "The change of value will remove  theprior value and apply the new value."
            ],
            "value": [],
            "name": "receivestatecustomclass"
          },
          {
            "documentation": [
              "`receivestatecustomstyle` attribute",
              "***",
              "The value of this signal will be applied as an equivalent property on 'styleClass'.",
              "The change of value will remove the prior value and apply the new value."
            ],
            "value": [],
            "name": "receivestatecustomstyle"
          },
          {
            "documentation": [
              "`receivestateshow` attribute",
              "***",
              "When true, the boolean value of the signal determines if the component is visible."
            ],
            "value": [],
            "name": "receivestateshow"
          },
          {
            "documentation": [
              "`'receivestateshowpulse` attribute",
              "***",
              "on transition from false to true, this signal directs the component to become visible."
            ],
            "value": [],
            "name": "receivestateshowpulse"
          },
          {
            "documentation": [
              "`receivestatehidepulse` attribute",
              "***",
              "on transition from false to true, this signal will direct if the component is no longer visible."
            ],
            "value": [],
            "name": "receivestatehidepulse"
          },
          {
            "documentation": [
              "`receivestateenable` attribute",
              "***",
              "When true, the boolean value of the signal determines if the component is enabled.",
              "Note that the signal name is provided, and the value of the signal has the opposite ",
              "convention of the 'disabled' attribute. This is to provide consistency with current programming practices."
            ],
            "value": [],
            "name": "receivestateenable"
          },
          {
            "documentation": [
              "`sendeventonshow` attribute",
              "***",
              "Has a boolean value of true when the component is visible and false when not visible.",
              "Note that even if component is completely covered by other visible elements, it is still considered visible."
            ],
            "value": [],
            "name": "sendeventonshow"
          },
          {
            "documentation": [
              "`appendclasswheninviewport` attribute",
              "***",
              "Applies the provided value as class name while the component is visible and removes the class name when not visible."
            ],
            "value": [],
            "name": "appendclasswheninviewport"
          },
          {
            "documentation": [
              "`show` attribute",
              "***",
              "The visibility of the component depends upon the boolean value. The component is visible ",
              "when the value is true and hides when it is false."
            ],
            "value": [],
            "name": "show"
          },
          {
            "documentation": [
              "`dir` attribute",
              "***",
              "An enumerated attribute indicating the directionality of the element's text. It can have the following values:",
              "ltr, which means left to right and is to be used for languages that are written from the left to the right (like English) ",
              "rtl, which means right to left and is to be used for languages that are written from the right to the left (like Arabic) ",
              "auto, which lets the user agent decide. It uses a basic algorithm as it parses the characters inside the element until it ",
              "finds a character with a strong directionality then it applies that directionality to the whole element."
            ],
            "value": [],
            "name": "dir"
          },
          {
            "documentation": [
              "`class` attribute",
              "***",
              "This is a standard class HTML attribute."
            ],
            "value": [],
            "name": "class"
          },
          {
            "documentation": [
              "`style` attribute",
              "***",
              "This is a standard style HTML attribute."
            ],
            "value": [],
            "name": "style"
          },
          {
            "documentation": [
              "`role` attribute",
              "***",
              "This is an accessibility attribute implemented by all ch5-components and added automatically if not set by the user. ",
              "Where possible, it represents the closest supported type for a ch5-component. In the case of a ch5-button, the value of the role attribute is 'button', for a ch5-modal-dialog the value is 'dialog', and so on. ",
              "The default value for this ch5-component can be overridden via this attribute."
            ],
            "value": [],
            "name": "role"
          },
          {
            "documentation": [
              "`debug` attribute",
              "***",
              "The default value is false. Used to get useful developer-related information about component behavior."
            ],
            "value": [
              "false",
              "true"
            ],
            "name": "debug"
          },
          {
            "documentation": [
              "`disabled` attribute",
              "***",
              "The default value is false. This property will direct the component to change CSS and event listeners ",
              "to reflect a disabled state when true."
            ],
            "value": [
              "false",
              "true"
            ],
            "name": "disabled"
          },
          {
            "documentation": [
              "`closeicon` attribute",
              "***",
              "A class name of the close icon. It may be a font awesome class."
            ],
            "value": [],
            "name": "closeicon"
          },
          {
            "documentation": [
              "`stretch` attribute",
              "***",
              "Valid values: 'width', 'height', and 'both'. The component will stretch to ",
              "the available width or the available height in the parent component. Using ",
              "'both' will stretch the component both directions."
            ],
            "value": [
              "",
              "both",
              "width",
              "height"
            ],
            "name": "stretch"
          },
          {
            "documentation": [
              "`overflow` attribute",
              "***",
              "Valid values: 'scroll' and 'show'. The overflow property specifies what ",
              "happens if content does or does not overflow the component box. ",
              "This is related with stretch property. This property specifies whether to add ",
              "scrollbars when an element's content is too big to fit in a specified area. ",
              "If 'show' is selected, the overflow is not clipped."
            ],
            "value": [
              "scroll",
              "show"
            ],
            "name": "overflow"
          },
          {
            "documentation": [
              "`positionto` attribute",
              "***",
              "If not set, the position will be related to the viewport. ",
              "Positions the component related to either a window or an element by id."
            ],
            "value": [],
            "name": "positionto"
          },
          {
            "documentation": [
              "`positionoffset` attribute",
              "***",
              "Valid values 'top-left', 'top-center', 'top-right', 'bottom-left', 'bottom-center', ",
              "'bottom-right', 'left-center', and 'right-center'. Auto-positions the panel offset ",
              "to the event element's position."
            ],
            "value": [
              "top-left",
              "top-center",
              "top-right",
              "bottom-left",
              "bottom-center",
              "bottom-right",
              "left-center",
              "right-center"
            ],
            "name": "positionoffset"
          },
          {
            "documentation": [
              "`receivestatepositionto` attribute ",
              "***",
              "When received, positions to this component."
            ],
            "value": [],
            "name": "receivestatepositionto"
          },
          {
            "documentation": [
              "`receivestatepositionoffset` attribute",
              "***",
              "when received, positions offset to this component. ",
              "See attribute 'positionOffset' for valid values."
            ],
            "value": [],
            "name": "receivestatepositionoffset"
          },
          {
            "documentation": [
              "`sendeventonbeforeshow` attribute",
              "***",
              "Sends a signal on the overlay panel before show."
            ],
            "value": [],
            "name": "sendeventonbeforeshow"
          },
          {
            "documentation": [
              "`sendeventonaftershow` attribute",
              "***",
              "Sends a signal on the overlay panel after show."
            ],
            "value": [],
            "name": "sendeventonaftershow"
          },
          {
            "documentation": [
              "`sendisignalonbeforehide` attribute",
              "***",
              "Sends a signal on overlay panel before hide."
            ],
            "value": [],
            "name": "sendeventonbeforehide"
          },
          {
            "documentation": [
              "`sendisgnalonafterhide` attribute",
              "***",
              "Sends a signal on overlay panel after hide."
            ],
            "value": [],
            "name": "sendeventonafterhide"
          },
          {
            "documentation": [
              "`dismissable` attribute",
              "***",
              "The default value is 'true'. If false, the panel won't automatically hide if a touch event occurs outside of it."
            ],
            "value": [
              "false",
              "true"
            ],
            "name": "dismissable"
          },
          {
            "documentation": [
              "`closable` attribute",
              "***",
              "The default value is 'false'. If true, shows a close icon on the corner of the panel. If fales, ",
              "the close icon is not shown."
            ],
            "value": [
              "false",
              "true"
            ],
            "name": "closable"
          },
          {
            "documentation": [
              "`mask` attribute",
              "***",
              "Specifies whether or not to apply a background mask."
            ],
            "value": [
              "false",
              "true"
            ],
            "name": "mask"
          }
        ],
        "documentation": [
          "`ch5-overlay-panel` element",
          "***",
          "The overlay panel component provides a content container for other components that ",
          "'pop up' on top of and overlays the main content container."
        ],
        "snippets": [
          {
            "prefix": "ch5-overlay-panel:blank",
            "description": "Crestron Overlay Panel (Blank)",
            "body": [
              "<ch5-overlay-panel>",
              "</ch5-overlay-panel>$0"
            ]
          },
          {
            "prefix": "ch5-overlay-panel:default",
            "description": "Crestron Overlay Panel (Default)",
            "body": [
              "<ch5-overlay-panel receivestateshowpulse=\"${1:trigger_1}\" closable>",
              "    <p>Sample text</p>",
              "    <ch5-image id=\"${2:ex1-img}\" url=\"${3:some_server_url}\">",
              "    </ch5-image>",
              "</ch5-overlay-panel>$0"
            ]
          },
          {
            "prefix": "ch5-overlay-panel:signals",
            "description": "Crestron Overlay Panel Signals",
            "body": [
              "<ch5-overlay-panel",
              "    receivestateshowpulse=\"${1:trigger_1}\"",
              "    closable",
              "    sendeventonshow=\"${1:signal_on_show}\"",
              "    sendeventonbeforeshow=\"${2:signal_on_before_show}\"",
              "    sendeventonaftershow=\"${3:signal_on_after_show}\"",
              "    sendeventonbeforehide=\"${4:signal_on_before_hide}\"",
              "    sendeventonafterhide=\"${5:signal_on_after_hide}\"",
              "    >",
              "    <p>Sample text</p>",
              "    <ch5-image id=\"${8:ex1-img}\" url=\"${9:some_server_url}\">",
              "    </ch5-image>",
              "</ch5-overlay-panel>$0"
            ]
          }
        ],
        "description": "Ch5 Overlay Panel",
        "name": "Ch5 Overlay Panel",
        "tagName": "ch5-overlay-panel"
      },
      {
        "attributes": [
          {
            "documentation": [
              "`id` attribute",
              "***",
              "This is a standard id HTML attribute."
            ],
            "value": [],
            "name": "id"
          },
          {
            "documentation": [
              "`customclass` attribute",
              "***",
              "Contains a list of classes that are applied on the component"
            ],
            "value": [],
            "name": "customclass"
          },
          {
            "documentation": [
              "`customstyle` attribute",
              "***",
              "Contains a list of space-delimited style classes applied on the component."
            ],
            "value": [],
            "name": "customstyle"
          },
          {
            "documentation": [
              "`noshowtype` attribute",
              "***",
              "This property reflects the type of the visibility of the item. See the 'data-ch5-noshow-type' ",
              "custom HTML attribute for further information."
            ],
            "value": [
              "visibility",
              "display",
              "remove"
            ],
            "name": "noshowtype"
          },
          {
            "documentation": [
              "`receivestatecustomclass` attribute",
              "***",
              "The value of this signal will be applied as an equivalent property on 'customClass'.",
              "The change of value will remove  theprior value and apply the new value."
            ],
            "value": [],
            "name": "receivestatecustomclass"
          },
          {
            "documentation": [
              "`receivestatecustomstyle` attribute",
              "***",
              "The value of this signal will be applied as an equivalent property on 'styleClass'.",
              "The change of value will remove the prior value and apply the new value."
            ],
            "value": [],
            "name": "receivestatecustomstyle"
          },
          {
            "documentation": [
              "`receivestateshow` attribute",
              "***",
              "When true, the boolean value of the signal determines if the component is visible."
            ],
            "value": [],
            "name": "receivestateshow"
          },
          {
            "documentation": [
              "`'receivestateshowpulse` attribute",
              "***",
              "on transition from false to true, this signal directs the component to become visible."
            ],
            "value": [],
            "name": "receivestateshowpulse"
          },
          {
            "documentation": [
              "`receivestatehidepulse` attribute",
              "***",
              "on transition from false to true, this signal will direct if the component is no longer visible."
            ],
            "value": [],
            "name": "receivestatehidepulse"
          },
          {
            "documentation": [
              "`receivestateenable` attribute",
              "***",
              "When true, the boolean value of the signal determines if the component is enabled.",
              "Note that the signal name is provided, and the value of the signal has the opposite ",
              "convention of the 'disabled' attribute. This is to provide consistency with current programming practices."
            ],
            "value": [],
            "name": "receivestateenable"
          },
          {
            "documentation": [
              "`sendeventonshow` attribute",
              "***",
              "Has a boolean value of true when the component is visible and false when not visible.",
              "Note that even if component is completely covered by other visible elements, it is still considered visible."
            ],
            "value": [],
            "name": "sendeventonshow"
          },
          {
            "documentation": [
              "`appendclasswheninviewport` attribute",
              "***",
              "Applies the provided value as class name while the component is visible and removes the class name when not visible."
            ],
            "value": [],
            "name": "appendclasswheninviewport"
          },
          {
            "documentation": [
              "`show` attribute",
              "***",
              "The visibility of the component depends upon the boolean value. The component is visible ",
              "when the value is true and hides when it is false."
            ],
            "value": [],
            "name": "show"
          },
          {
            "documentation": [
              "`dir` attribute",
              "***",
              "An enumerated attribute indicating the directionality of the element's text. It can have the following values:",
              "ltr, which means left to right and is to be used for languages that are written from the left to the right (like English) ",
              "rtl, which means right to left and is to be used for languages that are written from the right to the left (like Arabic) ",
              "auto, which lets the user agent decide. It uses a basic algorithm as it parses the characters inside the element until it ",
              "finds a character with a strong directionality then it applies that directionality to the whole element."
            ],
            "value": [],
            "name": "dir"
          },
          {
            "documentation": [
              "`class` attribute",
              "***",
              "This is a standard class HTML attribute."
            ],
            "value": [],
            "name": "class"
          },
          {
            "documentation": [
              "`style` attribute",
              "***",
              "This is a standard style HTML attribute."
            ],
            "value": [],
            "name": "style"
          },
          {
            "documentation": [
              "`role` attribute",
              "***",
              "This is an accessibility attribute implemented by all ch5-components and added automatically if not set by the user. ",
              "Where possible, it represents the closest supported type for a ch5-component. In the case of a ch5-button, the value of the role attribute is 'button', for a ch5-modal-dialog the value is 'dialog', and so on. ",
              "The default value for this ch5-component can be overridden via this attribute."
            ],
            "value": [],
            "name": "role"
          },
          {
            "documentation": [
              "`debug` attribute",
              "***",
              "The default value is false. Used to get useful developer-related information about component behavior."
            ],
            "value": [
              "false",
              "true"
            ],
            "name": "debug"
          },
          {
            "documentation": [
              "`disabled` attribute",
              "***",
              "The default value is false. This property will direct the component to change CSS and event listeners ",
              "to reflect a disabled state when true."
            ],
            "value": [
              "false",
              "true"
            ],
            "name": "disabled"
          },
          {
            "documentation": [
              "`closeicon` attribute",
              "***",
              "A class name of the close icon. It may be a font awesome class."
            ],
            "value": [],
            "name": "closeicon"
          },
          {
            "documentation": [
              "`stretch` attribute",
              "***",
              "Valid values: 'width', 'height', and 'both'. The component will stretch to ",
              "the available width or the available height in the parent component. Using ",
              "'both' will stretch the component both ways."
            ],
            "value": [
              "",
              "both",
              "width",
              "height"
            ],
            "name": "stretch"
          },
          {
            "documentation": [
              "`overflow` attribute",
              "***",
              "Valid values: 'scroll' and 'show'. The overflow property specifies what ",
              "happens if content does or does not overflow the component box. ",
              "This is related to the stretch property. This property specifies whether to add ",
              "scrollbars when an element's content is too big to fit in a specified area. ",
              "If 'show' is selected, the overflow is not clipped."
            ],
            "value": [
              "scroll",
              "show"
            ],
            "name": "overflow"
          },
          {
            "documentation": [
              "`width` attribute",
              "***",
              "The width of the modal dialog, in pixels. Must be a string of the form Npx."
            ],
            "value": [],
            "name": "width"
          },
          {
            "documentation": [
              "`height` attribute",
              "***",
              "The height of the modal dialog, in pixels. Must be a string of the form Npx."
            ],
            "value": [],
            "name": "height"
          },
          {
            "documentation": [
              "`title` attribute",
              "***",
              "The title of the modal dialog. Must be a string."
            ],
            "value": [],
            "name": "title"
          },
          {
            "documentation": [
              "`maskstyle` attribute",
              "***",
              "The Header title text. If absent or empty, the title bar will be hidden."
            ],
            "value": [],
            "name": "maskstyle"
          },
          {
            "documentation": [
              "`okbuttonlabel` attribute",
              "The OK button text. If absent or empty, the default translated 'OK' text is shown."
            ],
            "value": [],
            "name": "okbuttonlabel"
          },
          {
            "documentation": [
              "`okbuttonicon` attribute",
              "***",
              "The OK button icon. If absent or empty, the icon is hidden."
            ],
            "value": [],
            "name": "okbuttonicon"
          },
          {
            "documentation": [
              "`okbuttonstyle` attribute",
              "***",
              "The inline style value for the OK button to override the theme."
            ],
            "value": [],
            "name": "okbuttonstyle"
          },
          {
            "documentation": [
              "`cancelbuttonlabel` attribute",
              "***",
              "The Cancel button text. If absent or empty, the default translated 'Cancel' text ",
              "is shown."
            ],
            "value": [],
            "name": "cancelbuttonlabel"
          },
          {
            "documentation": [
              "`cancelbuttonicon` attribute",
              "***",
              "The Cancel button icon. If absent or empty, the icon is hidden."
            ],
            "value": [],
            "name": "cancelbuttonicon"
          },
          {
            "documentation": [
              "`cancelbuttonstyle` attribute",
              "***",
              "The inline style value for the Cancel button to override the theme."
            ],
            "value": [],
            "name": "cancelbuttonstyle"
          },
          {
            "documentation": [
              "`prompt` attribute",
              "***",
              "The optional text for a message."
            ],
            "value": [],
            "name": "prompt"
          },
          {
            "documentation": [
              "`prompticon` attribute",
              "***",
              "The icon that appears next to prompt text"
            ],
            "value": [],
            "name": "prompticon"
          },
          {
            "documentation": [
              "`sendeventonbeforeshow` attribute",
              "***",
              "The name of the boolean signal that will be sent to Native just before the panel is shown."
            ],
            "value": [],
            "name": "sendeventonbeforeshow"
          },
          {
            "documentation": [
              "`sendeventonaftershow` attribute",
              "***",
              "The name of the boolean signal that will be sent to Native after the panel is shown."
            ],
            "value": [],
            "name": "sendeventonaftershow"
          },
          {
            "documentation": [
              "`sendeventonbeforehide` attribute",
              "***",
              "The name of the boolean signal that will be sent to Native before the panel is hidden."
            ],
            "value": [],
            "name": "sendeventonbeforehide"
          },
          {
            "documentation": [
              "`sendeventonafterhide` attribute",
              "***",
              "The name of the boolean signal that will be sent to Native after the panel is hidden."
            ],
            "value": [],
            "name": "sendeventonafterhide"
          },
          {
            "documentation": [
              "`sendeventonok` attribute",
              "***",
              "The name of the boolean signal that will be sent when the OK button is pressed."
            ],
            "value": [],
            "name": "sendeventonok"
          },
          {
            "documentation": [
              "`sendeventoncancel` attribute",
              "***",
              "The name of the boolean signal that will be sent when the Cancel button is pressed."
            ],
            "value": [],
            "name": "sendeventoncancel"
          },
          {
            "documentation": [
              "`dismissable` attribute",
              "***",
              "The default value is 'true'. If false, the panel will not automatically hide if a touch event occurs outside of it."
            ],
            "value": [
              "false",
              "true"
            ],
            "name": "dismissable"
          },
          {
            "documentation": [
              "`closable` attribute",
              "***",
              "The default value is 'false'. If true, shows a close icon on the corner of the panel. If false, ",
              "the close icon is not showed."
            ],
            "value": [
              "false",
              "true"
            ],
            "name": "closable"
          },
          {
            "documentation": [
              "`mask` attribute",
              "***",
              "Specifies whether to apply a background mask."
            ],
            "value": [
              "false",
              "true"
            ],
            "name": "mask"
          },
          {
            "documentation": [
              "`hideokbutton` attribute",
              "***",
              "The default value is false. If true, the button is hidden."
            ],
            "value": [
              "false",
              "true"
            ],
            "name": "hideokbutton"
          },
          {
            "documentation": [
              "`hidecancelbutton` attribute",
              "***",
              "The default value is false. If true, the button is hidden."
            ],
            "value": [
              "false",
              "true"
            ],
            "name": "hidecancelbutton"
          }
        ],
        "documentation": [
          "`ch5-modal-dialog` element",
          "***",
          "The Modal Dialog component is a special-case instance of an overlay panel used primarily ",
          "to display dialog windows and user prompts. ",
          "The modal dialog should generally contains an optional header bar with a title, ",
          "an optional message with an optional icon, an optional button 'ok', and 'cancel' buttons."
        ],
        "snippets": [
          {
            "prefix": "ch5-modal-dialog:blank",
            "description": "Crestron Modal Dialog (Blank)",
            "body": [
              "<ch5-modal-dialog>",
              "</ch5-modal-dialog>$0"
            ]
          },
          {
            "prefix": "ch5-modal-dialog:default",
            "description": "Crestron Modal Dialog (Default)",
            "body": [
              "<ch5-modal-dialog receivestateshowpulse=\"${1:trigger_1}\" closable>",
              "    <p>Sample text</p>",
              "    <ch5-image id=\"${2:ex1-img}\" url=\"${3:some_server_url}\">",
              "    </ch5-image>",
              "</ch5-modal-dialog>$0"
            ]
          },
          {
            "prefix": "ch5-modal-dialog:signals",
            "description": "Crestron Modal Dialog Signals",
            "body": [
              "<ch5-modal-dialog",
              "    receivestateshowpulse=\"${1:trigger_1}\"",
              "    closable",
              "    sendeventonshow=\"${1:signal_on_show}\"",
              "    sendeventonbeforeshow=\"${2:signal_on_before_show}\"",
              "    sendeventonaftershow=\"${3:signal_on_after_show}\"",
              "    sendeventonbeforehide=\"${4:signal_on_before_hide}\"",
              "    sendeventonafterhide=\"${5:signal_on_after_hide}\"",
              "    sendeventonok=\"${6:signal_on_ok}\"",
              "    >",
              "    <p>Sample text</p>",
              "    <ch5-image id=\"${7:ex1-img}\" url=\"${8:some_server_url}\">",
              "    </ch5-image>",
              "</ch5-modal-dialog>$0"
            ]
          }
        ],
        "description": "Ch5 Modal",
        "name": "Ch5 Modal Dialog",
        "tagName": "ch5-modal-dialog"
      },
      {
        "attributes": [
          {
            "documentation": [
              "`id` attribute",
              "***",
              "This is a standard id HTML attribute."
            ],
            "value": [],
            "name": "id"
          },
          {
            "documentation": [
              "`customclass` attribute",
              "***",
              "Contains a list of classes that are applied on the component"
            ],
            "value": [],
            "name": "customclass"
          },
          {
            "documentation": [
              "`customstyle` attribute",
              "***",
              "Contains a list of space-delimited style classes applied on the component."
            ],
            "value": [],
            "name": "customstyle"
          },
          {
            "documentation": [
              "`noshowtype` attribute",
              "***",
              "This property reflects the type of the visibility of the item. See the 'data-ch5-noshow-type' ",
              "custom HTML attribute for further information."
            ],
            "value": [
              "visibility",
              "display",
              "remove"
            ],
            "name": "noshowtype"
          },
          {
            "documentation": [
              "`receivestatecustomclass` attribute",
              "***",
              "The value of this signal will be applied as an equivalent property on 'customClass'.",
              "The change of value will remove  theprior value and apply the new value."
            ],
            "value": [],
            "name": "receivestatecustomclass"
          },
          {
            "documentation": [
              "`receivestatecustomstyle` attribute",
              "***",
              "The value of this signal will be applied as an equivalent property on 'styleClass'.",
              "The change of value will remove the prior value and apply the new value."
            ],
            "value": [],
            "name": "receivestatecustomstyle"
          },
          {
            "documentation": [
              "`receivestateshow` attribute",
              "***",
              "When true, the boolean value of the signal determines if the component is visible."
            ],
            "value": [],
            "name": "receivestateshow"
          },
          {
            "documentation": [
              "`'receivestateshowpulse` attribute",
              "***",
              "on transition from false to true, this signal directs the component to become visible."
            ],
            "value": [],
            "name": "receivestateshowpulse"
          },
          {
            "documentation": [
              "`receivestatehidepulse` attribute",
              "***",
              "on transition from false to true, this signal will direct if the component is no longer visible."
            ],
            "value": [],
            "name": "receivestatehidepulse"
          },
          {
            "documentation": [
              "`receivestateenable` attribute",
              "***",
              "When true, the boolean value of the signal determines if the component is enabled.",
              "Note that the signal name is provided, and the value of the signal has the opposite ",
              "convention of the 'disabled' attribute. This is to provide consistency with current programming practices."
            ],
            "value": [],
            "name": "receivestateenable"
          },
          {
            "documentation": [
              "`sendeventonshow` attribute",
              "***",
              "Has a boolean value of true when the component is visible and false when not visible.",
              "Note that even if component is completely covered by other visible elements, it is still considered visible."
            ],
            "value": [],
            "name": "sendeventonshow"
          },
          {
            "documentation": [
              "`appendclasswheninviewport` attribute",
              "***",
              "Applies the provided value as class name while the component is visible and removes the class name when not visible."
            ],
            "value": [],
            "name": "appendclasswheninviewport"
          },
          {
            "documentation": [
              "`show` attribute",
              "***",
              "The visibility of the component depends upon the boolean value. The component is visible ",
              "when the value is true and hides when it is false."
            ],
            "value": [],
            "name": "show"
          },
          {
            "documentation": [
              "`dir` attribute",
              "***",
              "An enumerated attribute indicating the directionality of the element's text. It can have the following values:",
              "ltr, which means left to right and is to be used for languages that are written from the left to the right (like English) ",
              "rtl, which means right to left and is to be used for languages that are written from the right to the left (like Arabic) ",
              "auto, which lets the user agent decide. It uses a basic algorithm as it parses the characters inside the element until it ",
              "finds a character with a strong directionality then it applies that directionality to the whole element."
            ],
            "value": [],
            "name": "dir"
          },
          {
            "documentation": [
              "`class` attribute",
              "***",
              "This is a standard class HTML attribute."
            ],
            "value": [],
            "name": "class"
          },
          {
            "documentation": [
              "`style` attribute",
              "***",
              "This is a standard style HTML attribute."
            ],
            "value": [],
            "name": "style"
          },
          {
            "documentation": [
              "`role` attribute",
              "***",
              "This is an accessibility attribute implemented by all ch5-components and added automatically if not set by the user. ",
              "Where possible, it represents the closest supported type for a ch5-component. In the case of a ch5-button, the value of the role attribute is 'button', for a ch5-modal-dialog the value is 'dialog', and so on. ",
              "The default value for this ch5-component can be overridden via this attribute."
            ],
            "value": [],
            "name": "role"
          },
          {
            "documentation": [
              "`debug` attribute",
              "***",
              "The default value is false. Used to get useful developer-related information about component behavior."
            ],
            "value": [
              "false",
              "true"
            ],
            "name": "debug"
          },
          {
            "documentation": [
              "`disabled` attribute",
              "***",
              "The default value is false. This property will direct the component to change CSS and event listeners ",
              "to reflect a disabled state when true."
            ],
            "value": [
              "false",
              "true"
            ],
            "name": "disabled"
          },
          {
            "documentation": [
              "`size` attribute",
              "***",
              "The initial number of entries in a selection. The default value is 1. The accepted range is 1-30."
            ],
            "value": [],
            "name": "size"
          },
          {
            "documentation": [
              "`iconposition` attribute",
              "***",
              "Valid values: 'first' and 'last'. The default value is 'first'. ",
              "This attribute only applies when a template is not provided ",
              "and the implied template is in use. If a template is provided, ",
              "this property is ignored."
            ],
            "value": [
              "first",
              "last"
            ],
            "name": "iconposition"
          },
          {
            "documentation": [
              "`selectedvalud` attribute",
              "***",
              "The default value is false. Set to true if multiple selections can be selected. ",
              "If true, the value of the selection will be an array of values."
            ],
            "value": [],
            "name": "selectedvalue"
          },
          {
            "documentation": [
              "`scrollheight` attribute",
              "***",
              "height of the panel containing the list of options, supports px, vw, vh and % (% is based on the parent height of the ch5-select. "
            ],
            "value": [],
            "name": "panelscrollheight"
          },
          {
            "documentation": [
              "`minwidth` attribute",
              "***",
              "The min width of the selection container."
            ],
            "value": [],
            "name": "minwidth"
          },
          {
            "documentation": [
              "`maxwidth` attribute",
              "***",
              "The max width of the selection container."
            ],
            "value": [],
            "name": "maxwidth"
          },
          {
            "documentation": [
              "`minheight` attribute",
              "***",
              "The min height of the selection container."
            ],
            "value": [],
            "name": "minheight"
          },
          {
            "documentation": [
              "`maxheight` attribute",
              "***",
              "The max height of the selection container."
            ],
            "value": [],
            "name": "maxheight"
          },
          {
            "documentation": [
              "`mode` attribute",
              "***",
              "Two values are possible as show below. The default value is 'plain'. ",
              "plain - The select menu opens and closes as clicked by user. ",
              "panel – The select menu stays open even when not in focus."
            ],
            "value": [
              "plain",
              "panel"
            ],
            "name": "mode"
          },
          {
            "documentation": [
              "`feedbackmode` attribute",
              "***",
              "Allows the form submission functionality. Valid values: 'direct', 'submit'."
            ],
            "value": [
              "direct",
              "submit"
            ],
            "name": "feedbackmode"
          },
          {
            "documentation": [
              "`signalvaluesynctimeout` attribute",
              "***",
              "The default valus is 1500. Defines the time between when the user releases the ",
              "toggle handle and the time the toggle will check if the ",
              "value is equal with the value from the signal. If the value is not equal, it will ",
              "apply the value from the signal automatically. Apply only for feedbackMode direct."
            ],
            "value": [],
            "name": "signalvaluesynctimeout"
          },
          {
            "documentation": [
              "`indexid` attribute",
              "***",
              "Provides the name of the offset identifier to be substituted with ",
              "a 1-based index of the item in a list within the template item ",
              "surrounded by {{ }} delimiters."
            ],
            "value": [],
            "name": "indexid"
          },
          {
            "documentation": [
              "`noneselectedprompt` attribute",
              "***",
              "Showed when no items are selected."
            ],
            "value": [],
            "name": "noneselectedprompt"
          },
          {
            "documentation": [
              "`receivestatevalue` attribute",
              "***",
              "When received, changes the selected value of this selector. This is only applicable for ",
              "multiselect=false. A 1-based index is expected. ",
              "Value 0 indicates all will be unselected."
            ],
            "value": [],
            "name": "receivestatevalue"
          },
          {
            "documentation": [
              "`receivestatesize` attribute",
              "***",
              "Sets the number of items in this component."
            ],
            "value": [],
            "name": "receivestatesize"
          },
          {
            "documentation": [
              "`receivestatetemplatevars` attribute",
              "***",
              "A JSON-encoded array of name/value objects, with one per item created from the template."
            ],
            "value": [],
            "name": "receivestatetemplatevars"
          },
          {
            "documentation": [
              "`snedsignalonfocus` attribute",
              "***",
              "Send a signal on the focus event. Set to true if in focus and set to false if not in focus."
            ],
            "value": [],
            "name": "sendeventonfocus"
          },
          {
            "documentation": [
              "`sendeventonchange` attribute",
              "***",
              "Sends a signal value on the selected change. Shis is only applicable for multiselect=false. ",
              "A 1-based index is expected. Value 0 indicates all will be unselected."
            ],
            "value": [],
            "name": "sendeventonchange"
          },
          {
            "documentation": [
              "`onclean` attribute",
              "***",
              "Runs when a clean event is initiated."
            ],
            "value": [],
            "name": "onclean"
          },
          {
            "documentation": [
              "`ondirty` attribute",
              "***",
              "Runs when a dirty event is initiated."
            ],
            "value": [],
            "name": "ondirty"
          },
          {
            "documentation": [
              "`multiselect` attribute",
              "***",
              "The default value is false. Set to true if multiple selections can be selected. ",
              "If true, the value of the selection will be an array of values."
            ],
            "value": [
              "false",
              "true"
            ],
            "name": "multiselect"
          },
          {
            "documentation": [
              "`resize` attribute",
              "***",
              "If true, the options panel will be resized to fit content width. ",
              "The maximum width and height cannot be bigger then parent HTML element."
            ],
            "value": [
              "false",
              "true"
            ],
            "name": "resize"
          }
        ],
        "documentation": [
          "`ch5-select` element",
          "***",
          "The select component enables the user to select one or more choices from a list of options. ",
          "The select component will not be a wrapper around the HTML input type select because other options ",
          "must be covered that are not available on HTML input type select."
        ],
        "snippets": [
          {
            "prefix": "ch5-select:blank",
            "description": "Crestron Select (Blank)",
            "body": [
              "<ch5-select>",
              "</ch5-select>$0"
            ]
          },
          {
            "prefix": "ch5-select:all",
            "description": "Crestron Select (All Attributes)",
            "body": [
              "<ch5-select size=\"${1}\"",
              "\ticonposition=\"${2|first,last|}\"",
              "\tmultiselect=\"${3}\"",
              "\tselectedvalue=\"${4}\"",
              "\tnoneselectedprompt=\"${5}\"",
              "\tpanelscrollheight=\"${6}\"",
              "\tminwidth=\"${7}\"",
              "\tmaxwidth=\"${8}\"",
              "\tminheight=\"${9}\"",
              "\tmaxheight=\"${8}\"",
              "\tresize=\"${9|true,false|}\"",
              "\tmode=\"${10|plain,panel|}\"",
              "\tfeedbackmode=\"${11|direct,submit|}\"",
              "\tsignalvaluesynctimeout=\"${12|1500|}\"",
              "\tindexid=\"${13|idx|}\"",
              "\treceivestatevalue=\"${14}\"",
              "\treceivestatesize=\"${15}\"",
              "\treceivestatetemplatevars=\"${16}\"",
              "\tsendeventonfocus=\"${17}\"",
              "\tsendeventonchange=\"${18}\">",
              "\t<template>",
              "\t\t<ch5-select-option receivestateselected=\"${19}\"",
              "\t\t\treceivestatelabel=\"${20}\"",
              "\t\t\treceivestateurl=\"${21}\"",
              "\t\t\treceivestatescriptlabelhtml=\"${22}\"",
              "\t\t\tsendeventonclick=\"${23}\">",
              "\t\t</ch5-select-option>",
              "\t</template>",
              "</ch5-select>$0"
            ]
          },
          {
            "prefix": "ch5-select:single-selection",
            "description": "Crestron Select (single selection using receiveStateValue and sendEventOnChange",
            "body": [
              "<ch5-select size=\"${1}\"",
              "\tselectedvalue=\"${2}\"",
              "\tnoneselectedprompt=\"${3}\"",
              "\tpanelscrollheight=\"${4}\"",
              "\tminwidth=\"${5}\"",
              "\tmaxwidth=\"${6}\"",
              "\tminheight=\"${7}\"",
              "\tmaxheight=\"${8}\"",
              "\tresize=\"${9|true,false|}\"",
              "\tmode=\"${10|plain,panel|}\"",
              "\tfeedbackmode=\"${11|direct,submit|}\"",
              "\tsignalvaluesynctimeout=\"${12|1500|}\"",
              "\tindexid=\"${13|idx|}\"",
              "\treceivestatevalue=\"${14}\"",
              "\tsendeventonchange=\"${15}\">",
              "\t<template>",
              "\t\t<ch5-select-option>",
              "\t\t\t<span>Option {{idx}}</span>",
              "\t\t</ch5-select-option>",
              "\t</template>",
              "</ch5-select>$0"
            ]
          },
          {
            "prefix": "ch5-select:single-selection2",
            "description": "Crestron Select (single selection using receiveStateValue and ch5-select-option.sendEventOnClick)",
            "body": [
              "<ch5-select size=\"${1}\"",
              "\tselectedvalue=\"${2}\"",
              "\tnoneselectedprompt=\"${3}\"",
              "\tpanelscrollheight=\"${4}\"",
              "\tminwidth=\"${5}\"",
              "\tmaxwidth=\"${6}\"",
              "\tminheight=\"${7}\"",
              "\tmaxheight=\"${8}\"",
              "\tresize=\"${9|true,false|}\"",
              "\tmode=\"${10|plain,panel|}\"",
              "\tfeedbackmode=\"${11|direct,submit|}\"",
              "\tsignalvaluesynctimeout=\"${12|1500|}\"",
              "\tindexid=\"${13|idx|}\"",
              "\treceivestatevalue=\"${14}\">",
              "\t<template>",
              "\t\t<ch5-select-option sendeventonclick=\"${15}\">",
              "\t\t\t<span>Option {{idx}}</span>",
              "\t\t</ch5-select-option>",
              "\t</template>",
              "</ch5-select>$0"
            ]
          },
          {
            "prefix": "ch5-select:single-selection3",
            "description": "Crestron Select (single selection using ch5-select-option.receiveStateSelected and ch5-select-option.sendEventOnClick)",
            "body": [
              "<ch5-select size=\"${1}\"",
              "\tselectedvalue=\"${2}\"",
              "\tnoneselectedprompt=\"${3}\"",
              "\tpanelscrollheight=\"${4}\"",
              "\tminwidth=\"${5}\"",
              "\tmaxwidth=\"${6}\"",
              "\tminheight=\"${7}\"",
              "\tmaxheight=\"${8}\"",
              "\tresize=\"${9|true,false|}\"",
              "\tmode=\"${10|plain,panel|}\"",
              "\tfeedbackmode=\"${11|direct,submit|}\"",
              "\tsignalvaluesynctimeout=\"${12|1500|}\"",
              "\tindexid=\"${13|idx|}\"",
              "\treceivestatevalue=\"${14}\">",
              "\t<template>",
              "\t\t<ch5-select-option sendeventonclick=\"${15}\"",
              "\t\t\treceivestateselected=\"${16}\">",
              "\t\t\t<span>Option {{idx}}</span>",
              "\t\t</ch5-select-option>",
              "\t</template>",
              "</ch5-select>$0"
            ]
          },
          {
            "prefix": "ch5-select:multiselection",
            "description": "Crestron Select (multi selection using ch5-select-option.receiveStateSelected, ch5-select-option.sendEventOnClick and ch5-select-option.receiveStateLabel)",
            "body": [
              "<ch5-select size=\"${1}\"",
              "\tnoneselectedprompt=\"${2}\"",
              "\tpanelscrollheight=\"${3}\"",
              "\tminwidth=\"${4}\"",
              "\tmaxwidth=\"${5}\"",
              "\tminheight=\"${6}\"",
              "\tmaxheight=\"${7}\"",
              "\tresize=\"${8|true,false|}\"",
              "\tmode=\"${9|plain,panel|}\"",
              "\tmultiselect",
              "\tfeedbackmode=\"${10|direct,submit|}\"",
              "\tindexid=\"${11|idx|}\">",
              "\t<template>",
              "\t\t<ch5-select-option sendeventonclick=\"${12}\"",
              "\t\t\treceivestateselected=\"${13}\"",
              "\t\t\treceivestatelabel=\"${14}\">",
              "\t\t\t<span>Option {{label}}</span>",
              "\t\t</ch5-select-option>",
              "\t</template>",
              "</ch5-select>$0"
            ]
          },
          {
            "prefix": "ch5-select:default",
            "description": "Crestron Select (using default template)",
            "body": [
              "<ch5-select size=\"${1}\"",
              "\ticonposition=\"${2|first,last|}\"",
              "\tselectedvalue=\"${3}\"",
              "\tnoneselectedprompt=\"${4}\"",
              "\tpanelscrollheight=\"${5}\"",
              "\tminwidth=\"${6}\"",
              "\tmaxwidth=\"${7}\"",
              "\tminheight=\"${8}\"",
              "\tmaxheight=\"${9}\"",
              "\tresize=\"${10|true,false|}\"",
              "\tmode=\"${11|plain,panel|}\"",
              "\tfeedbackmode=\"${12|direct,submit|}\"",
              "\tsignalvaluesynctimeout=\"${13|1500|}\"",
              "\tindexid=\"${14|idx|}\">",
              "\t<template>",
              "\t\t<ch5-select-option receivestateselected=\"${15}\"",
              "\t\t\treceivestatelabel=\"${16}\"",
              "\t\t\treceivestateurl=\"${17}\"",
              "\t\t\treceivestatescriptlabelhtml=\"${18}\"",
              "\t\t\tsendeventonclick=\"${19}\">",
              "\t\t</ch5-select-option>",
              "\t</template>",
              "</ch5-select>$0"
            ]
          }
        ],
        "description": "Ch5 Select inherits the default html select, but provides a lot of extra features",
        "name": "Ch5 Select",
        "tagName": "ch5-select"
      },
      {
        "attributes": [
          {
            "documentation": [
              "`id` attribute",
              "***",
              "This is a standard id HTML attribute."
            ],
            "value": [],
            "name": "id"
          },
          {
            "documentation": [
              "`customclass` attribute",
              "***",
              "Contains a list of classes that are applied on the component"
            ],
            "value": [],
            "name": "customclass"
          },
          {
            "documentation": [
              "`customstyle` attribute",
              "***",
              "Contains a list of space-delimited style classes applied on the component."
            ],
            "value": [],
            "name": "customstyle"
          },
          {
            "documentation": [
              "`noshowtype` attribute",
              "***",
              "This property reflects the type of the visibility of the item. See the 'data-ch5-noshow-type' ",
              "custom HTML attribute for further information."
            ],
            "value": [
              "visibility",
              "display",
              "remove"
            ],
            "name": "noshowtype"
          },
          {
            "documentation": [
              "`receivestatecustomclass` attribute",
              "***",
              "The value of this signal will be applied as an equivalent property on 'customClass'.",
              "The change of value will remove  theprior value and apply the new value."
            ],
            "value": [],
            "name": "receivestatecustomclass"
          },
          {
            "documentation": [
              "`receivestatecustomstyle` attribute",
              "***",
              "The value of this signal will be applied as an equivalent property on 'styleClass'.",
              "The change of value will remove the prior value and apply the new value."
            ],
            "value": [],
            "name": "receivestatecustomstyle"
          },
          {
            "documentation": [
              "`receivestateshow` attribute",
              "***",
              "When true, the boolean value of the signal determines if the component is visible."
            ],
            "value": [],
            "name": "receivestateshow"
          },
          {
            "documentation": [
              "`'receivestateshowpulse` attribute",
              "***",
              "on transition from false to true, this signal directs the component to become visible."
            ],
            "value": [],
            "name": "receivestateshowpulse"
          },
          {
            "documentation": [
              "`receivestatehidepulse` attribute",
              "***",
              "on transition from false to true, this signal will direct if the component is no longer visible."
            ],
            "value": [],
            "name": "receivestatehidepulse"
          },
          {
            "documentation": [
              "`receivestateenable` attribute",
              "***",
              "When true, the boolean value of the signal determines if the component is enabled.",
              "Note that the signal name is provided, and the value of the signal has the opposite ",
              "convention of the 'disabled' attribute. This is to provide consistency with current programming practices."
            ],
            "value": [],
            "name": "receivestateenable"
          },
          {
            "documentation": [
              "`sendeventonshow` attribute",
              "***",
              "Has a boolean value of true when the component is visible and false when not visible.",
              "Note that even if component is completely covered by other visible elements, it is still considered visible."
            ],
            "value": [],
            "name": "sendeventonshow"
          },
          {
            "documentation": [
              "`appendclasswheninviewport` attribute",
              "***",
              "Applies the provided value as class name while the component is visible and removes the class name when not visible."
            ],
            "value": [],
            "name": "appendclasswheninviewport"
          },
          {
            "documentation": [
              "`show` attribute",
              "***",
              "The visibility of the component depends upon the boolean value. The component is visible ",
              "when the value is true and hides when it is false."
            ],
            "value": [],
            "name": "show"
          },
          {
            "documentation": [
              "`dir` attribute",
              "***",
              "An enumerated attribute indicating the directionality of the element's text. It can have the following values:",
              "ltr, which means left to right and is to be used for languages that are written from the left to the right (like English) ",
              "rtl, which means right to left and is to be used for languages that are written from the right to the left (like Arabic) ",
              "auto, which lets the user agent decide. It uses a basic algorithm as it parses the characters inside the element until it ",
              "finds a character with a strong directionality then it applies that directionality to the whole element."
            ],
            "value": [],
            "name": "dir"
          },
          {
            "documentation": [
              "`class` attribute",
              "***",
              "This is a standard class HTML attribute."
            ],
            "value": [],
            "name": "class"
          },
          {
            "documentation": [
              "`style` attribute",
              "***",
              "This is a standard style HTML attribute."
            ],
            "value": [],
            "name": "style"
          },
          {
            "documentation": [
              "`role` attribute",
              "***",
              "This is an accessibility attribute implemented by all ch5-components and added automatically if not set by the user. ",
              "Where possible, it represents the closest supported type for a ch5-component. In the case of a ch5-button, the value of the role attribute is 'button', for a ch5-modal-dialog the value is 'dialog', and so on. ",
              "The default value for this ch5-component can be overridden via this attribute."
            ],
            "value": [],
            "name": "role"
          },
          {
            "documentation": [
              "`debug` attribute",
              "***",
              "The default value is false. Used to get useful developer-related information about component behavior."
            ],
            "value": [
              "false",
              "true"
            ],
            "name": "debug"
          },
          {
            "documentation": [
              "`disabled` attribute",
              "***",
              "The default value is false. This property will direct the component to change CSS and event listeners ",
              "to reflect a disabled state when true."
            ],
            "value": [
              "false",
              "true"
            ],
            "name": "disabled"
          },
          {
            "documentation": [
              "`iconposition` attribute",
              "***",
              "Valid values: 'first' and 'last'. The default value is 'first'. ",
              "This attribute only applies when a template is not provided ",
              "and the implied template is in use. If a template is provided, ",
              "this property is ignored."
            ],
            "value": [
              "first",
              "last"
            ],
            "name": "iconposition"
          },
          {
            "documentation": [
              "`receivestateselected` attribute",
              "***",
              "When received, applies a true value to the selected class (ch5-button--selected)."
            ],
            "value": [],
            "name": "receivestateselected"
          },
          {
            "documentation": [
              "`receivestatelabel` attribute",
              "***",
              "The label or name of the ch5-select-option is received via this attribute."
            ],
            "value": [],
            "name": "receivestatelabel"
          },
          {
            "documentation": [
              "`receivestateurl` attribute",
              "***",
              "Provides the image or icon url."
            ],
            "value": [],
            "name": "receivestateurl"
          },
          {
            "documentation": [
              "`receivestatescriptlabelhtml` attribute",
              "***",
              "A signal script evaluation will be applied to the ",
              "button.innerHTML. Allows for multiline, multistyled labels."
            ],
            "value": [],
            "name": "receivestatescriptlabelhtml"
          },
          {
            "documentation": [
              "`sendeventonclick` attribute",
              "***",
              "Sends an on click or tap event (mouse or swipe up and down quickly). ",
              "Use this when the control system takes an action on the rising edge from false to true of a boolean digital event. ",
              "Examples include the SIMPL Logic Symbol for Toggle with a description of ",
              "Digital input <clock> 'High/1 (rising edge) = Toggle; Low/0 = No effect'."
            ],
            "value": [],
            "name": "sendeventonclick"
          },
          {
            "documentation": [
              "`useDefaultTmpl` attribute",
              "***",
              "Provides the ability to initialise ch5-select with the default template."
            ],
            "value": [
              "false",
              "true"
            ],
            "name": "usedefaulttmpl"
          }
        ],
        "documentation": [
          "`ch5-select-option` element",
          "***",
          "An extension to standard HTML option element."
        ],
        "snippets": [],
        "description": "",
        "name": "Ch5 Select option",
        "tagName": "ch5-select-option"
      },
      {
        "attributes": [
          {
            "documentation": [
              "`id` attribute",
              "***",
              "This is a standard id HTML attribute."
            ],
            "value": [],
            "name": "id"
          },
          {
            "documentation": [
              "`customclass` attribute",
              "***",
              "Contains a list of classes that are applied on the component"
            ],
            "value": [],
            "name": "customclass"
          },
          {
            "documentation": [
              "`customstyle` attribute",
              "***",
              "Contains a list of space-delimited style classes applied on the component."
            ],
            "value": [],
            "name": "customstyle"
          },
          {
            "documentation": [
              "`noshowtype` attribute",
              "***",
              "This property reflects the type of the visibility of the item. See the 'data-ch5-noshow-type' ",
              "custom HTML attribute for further information."
            ],
            "value": [
              "visibility",
              "display",
              "remove"
            ],
            "name": "noshowtype"
          },
          {
            "documentation": [
              "`receivestatecustomclass` attribute",
              "***",
              "The value of this signal will be applied as an equivalent property on 'customClass'.",
              "The change of value will remove  theprior value and apply the new value."
            ],
            "value": [],
            "name": "receivestatecustomclass"
          },
          {
            "documentation": [
              "`receivestatecustomstyle` attribute",
              "***",
              "The value of this signal will be applied as an equivalent property on 'styleClass'.",
              "The change of value will remove the prior value and apply the new value."
            ],
            "value": [],
            "name": "receivestatecustomstyle"
          },
          {
            "documentation": [
              "`receivestateshow` attribute",
              "***",
              "When true, the boolean value of the signal determines if the component is visible."
            ],
            "value": [],
            "name": "receivestateshow"
          },
          {
            "documentation": [
              "`'receivestateshowpulse` attribute",
              "***",
              "on transition from false to true, this signal directs the component to become visible."
            ],
            "value": [],
            "name": "receivestateshowpulse"
          },
          {
            "documentation": [
              "`receivestatehidepulse` attribute",
              "***",
              "on transition from false to true, this signal will direct if the component is no longer visible."
            ],
            "value": [],
            "name": "receivestatehidepulse"
          },
          {
            "documentation": [
              "`receivestateenable` attribute",
              "***",
              "When true, the boolean value of the signal determines if the component is enabled.",
              "Note that the signal name is provided, and the value of the signal has the opposite ",
              "convention of the 'disabled' attribute. This is to provide consistency with current programming practices."
            ],
            "value": [],
            "name": "receivestateenable"
          },
          {
            "documentation": [
              "`sendeventonshow` attribute",
              "***",
              "Has a boolean value of true when the component is visible and false when not visible.",
              "Note that even if component is completely covered by other visible elements, it is still considered visible."
            ],
            "value": [],
            "name": "sendeventonshow"
          },
          {
            "documentation": [
              "`appendclasswheninviewport` attribute",
              "***",
              "Applies the provided value as class name while the component is visible and removes the class name when not visible."
            ],
            "value": [],
            "name": "appendclasswheninviewport"
          },
          {
            "documentation": [
              "`show` attribute",
              "***",
              "The visibility of the component depends upon the boolean value. The component is visible ",
              "when the value is true and hides when it is false."
            ],
            "value": [],
            "name": "show"
          },
          {
            "documentation": [
              "`dir` attribute",
              "***",
              "An enumerated attribute indicating the directionality of the element's text. It can have the following values:",
              "ltr, which means left to right and is to be used for languages that are written from the left to the right (like English) ",
              "rtl, which means right to left and is to be used for languages that are written from the right to the left (like Arabic) ",
              "auto, which lets the user agent decide. It uses a basic algorithm as it parses the characters inside the element until it ",
              "finds a character with a strong directionality then it applies that directionality to the whole element."
            ],
            "value": [],
            "name": "dir"
          },
          {
            "documentation": [
              "`class` attribute",
              "***",
              "This is a standard class HTML attribute."
            ],
            "value": [],
            "name": "class"
          },
          {
            "documentation": [
              "`style` attribute",
              "***",
              "This is a standard style HTML attribute."
            ],
            "value": [],
            "name": "style"
          },
          {
            "documentation": [
              "`role` attribute",
              "***",
              "This is an accessibility attribute implemented by all ch5-components and added automatically if not set by the user. ",
              "Where possible, it represents the closest supported type for a ch5-component. In the case of a ch5-button, the value of the role attribute is 'button', for a ch5-modal-dialog the value is 'dialog', and so on. ",
              "The default value for this ch5-component can be overridden via this attribute."
            ],
            "value": [],
            "name": "role"
          },
          {
            "documentation": [
              "`debug` attribute",
              "***",
              "The default value is false. Used to get useful developer-related information about component behavior."
            ],
            "value": [
              "false",
              "true"
            ],
            "name": "debug"
          },
          {
            "documentation": [
              "`disabled` attribute",
              "***",
              "The default value is false. This property will direct the component to change CSS and event listeners ",
              "to reflect a disabled state when true."
            ],
            "value": [
              "false",
              "true"
            ],
            "name": "disabled"
          },
          {
            "documentation": [
              "`handleshape` attribute",
              "***",
              "The default value is 'rounded-rectangle'. Valid Values: 'rectangle', 'circle', 'oval', ",
              "'rounded-rectangle'. Defines the handle shape."
            ],
            "value": [
              "rounded-rectangle",
              "rectangle",
              "circle",
              "oval"
            ],
            "name": "handleshape"
          },
          {
            "documentation": [
              "`value` attribute",
              "***",
              "The initial values of single value or lower value if range=true."
            ],
            "value": [],
            "name": "value"
          },
          {
            "documentation": [
              "`valuehigh` attribute",
              "***",
              "The higher value only applicable if range=true."
            ],
            "value": [],
            "name": "valuehigh"
          },
          {
            "documentation": [
              "`max` attribute",
              "***",
              "The maximum value."
            ],
            "value": [],
            "name": "max"
          },
          {
            "documentation": [
              "`min` attribute",
              "***",
              "The minimum value."
            ],
            "value": [],
            "name": "min"
          },
          {
            "documentation": [
              "`orientation` attribute",
              "***",
              "The default value is 'horizontal'. Valid values: 'horizontal', 'vertical'. ",
              "The orientation of the slider."
            ],
            "value": [
              "horizontal",
              "vertical"
            ],
            "name": "orientation"
          },
          {
            "documentation": [
              "`size` attribute",
              "***",
              "The default value is 'regular'. Valid values: 'x-small', 'small', 'regular', 'large', 'xlarge'. ",
              "The size of the slider."
            ],
            "value": [
              "regular",
              "x-small",
              "small",
              "large",
              "x-large"
            ],
            "name": "size"
          },
          {
            "documentation": [
              "`handlesize` attribute",
              "***",
              "The size of the handle.",
              "The default value is 'regular'. Valid values: 'x-small', 'small', 'regular', 'large', 'x-large'."
            ],
            "value": [
              "regular",
              "x-small",
              "small",
              "large",
              "x-large"
            ],
            "name": "handlesize"
          },
          {
            "documentation": [
              "`step` attribute",
              "***",
              "The default value is 100. The maximum value is 100. ",
              "Defines the number of steps values in the slider. ",
              "For example, if the slider should have quarters 0, 25, 50, 75, 100, then 5 is the numbers of steps."
            ],
            "value": [],
            "name": "step"
          },
          {
            "documentation": [
              "`stretch` attribute",
              "***",
              "The default value is 'both'. Valid Values: 'width', 'height', 'both'. ",
              "When the stretch property is set, the slider inherits the width and/or ",
              "height of the container."
            ],
            "value": [
              "",
              "both",
              "width",
              "height"
            ],
            "name": "stretch"
          },
          {
            "documentation": [
              "`ticks` attribute",
              "***",
              "Defines the ticks on the slider. ",
              "This definition is based on advanced tick scales: non-linear or logarithmic. ",
              "Sliders can be created with ever-increasing increments b ",
              "specifying the value for the slider at certain intervals. ",
              "- The first value defines the % position along the length of the slider scale to place a tick mark. ",
              "- The second value is the label value to place next to the tick at that position.",
              "***",
              "An example would be [[0.0,'-60'], [0.25,'-40'], [0.50,'-20'],[0.75,'-10'], [1.0,'0']]"
            ],
            "value": [],
            "name": "ticks"
          },
          {
            "documentation": [
              "`tooltipshowtype` attribute",
              "***",
              "The Default value is 'off'.  Provides the ability to display a tooltip above (horizontal) or right (vertical) of the handle.  Valid values: ",
              "-'off': Not displayed ",
              "-'on': Always displayed ",
              "-'auto': Displayed while user interacts with the slider"
            ],
            "value": [
              "off",
              "on",
              "auto"
            ],
            "name": "tooltipshowtype"
          },
          {
            "documentation": [
              "`tooltipdisplaytype` attribute",
              "***",
              "The default value is 'percent'. Sets what is displayed in the tooltip. Valid values: ",
              "'%' - The value is displayed as a percent ",
              "'value' - The actual value provided"
            ],
            "value": [
              "%",
              "value"
            ],
            "name": "tooltipdisplaytype"
          },
          {
            "documentation": [
              "`signalvaluesynctimeout` attribute",
              "***",
              "The default value is 1500. Defines the time (milliseconds) between when the user ",
              "releases the slider handle and the time the slider will check ",
              "if the value is equal with the value from the signal. If not, it will automatically apply the value from the signal."
            ],
            "value": [],
            "name": "signalvaluesynctimeout"
          },
          {
            "documentation": [
              "`feedbackmode` attribute",
              "***",
              "If set to direct, value send and receive will be instant. On submit, it ",
              "will send and listen for the first received event."
            ],
            "value": [
              "direct",
              "submit"
            ],
            "name": "feedbackmode"
          },
          {
            "documentation": [
              "`receivestatevalue` attribute",
              "***",
              "On receive, changes the value of the slider handle."
            ],
            "value": [],
            "name": "receivestatevalue"
          },
          {
            "documentation": [
              "`receivestatevaluehigh` attribute",
              "***",
              "On receive, changes the value of the right slider handle (available when range is true)."
            ],
            "value": [],
            "name": "receivestatevaluehigh"
          },
          {
            "documentation": [
              "`sendeventonchange` attribute",
              "***",
              "Sends a signal value on slider change."
            ],
            "value": [],
            "name": "sendeventonchange"
          },
          {
            "documentation": [
              "`sendeventonchangehigh` attribute",
              "***",
              "If a range slider is set to true, sends a signal value high on slider change."
            ],
            "value": [],
            "name": "sendeventonchangehigh"
          },
          {
            "documentation": [
              "`onclean` attribute",
              "***",
              "Runs when a clean event is initiated."
            ],
            "value": [],
            "name": "onclean"
          },
          {
            "documentation": [
              "`ondirty` attribute",
              "***",
              "Runs when a dirty event is initiated."
            ],
            "value": [],
            "name": "ondirty"
          },
          {
            "documentation": [
              "`range` attribute",
              "***",
              "The default value is false. If true, the slider will have two handles so two different values can be defined."
            ],
            "value": [
              "false",
              "true"
            ],
            "name": "range"
          },
          {
            "documentation": [
              "`showtickvalues` attribute",
              "***",
              "The default value is false. Provides the ability to display value labels next to tick marks ",
              "at each tick increment."
            ],
            "value": [
              "false",
              "true"
            ],
            "name": "showtickvalues"
          },
          {
            "documentation": [
              "`noHandle` attribute",
              "***",
              "The default value is false. Hides the slider handle."
            ],
            "value": [
              "false",
              "true"
            ],
            "name": "nohandle"
          },
          {
            "documentation": [
              "`tapSettable` attribute",
              "***",
              "The default value is false. Sets the slider value on tap."
            ],
            "value": [
              "false",
              "true"
            ],
            "name": "tapsettable"
          }
        ],
        "documentation": [
          "`ch5-slider` element",
          "***",
          "A component to provide input by dragging a handle. One or two numeric values can be ",
          "visualized with this component. If two values are used, two handles are provided."
        ],
        "snippets": [
          {
            "prefix": "ch5-slider:blank",
            "description": "Crestron slider (Blank)",
            "body": [
              "<ch5-slider>",
              "</ch5-slider>$0"
            ]
          },
          {
            "prefix": "ch5-slider:default",
            "description": "Crestron slider (Default)",
            "body": [
              "<ch5-slider value=\"${1:20}\"",
              "\tmin=\"${2:0}\"",
              "\tmax=\"${3:100}\"",
              "\tstep=\"${4:20}\"",
              "\tsendeventonchange=\"${5:slider_value_on_change}\"",
              "\treceivestatevalue=\"${6:receive_slider_value}\">",
              "</ch5-slider>$0"
            ]
          },
          {
            "prefix": "ch5-slider:range",
            "description": "Crestron slider range(If true, we provide two handles to define two values.)",
            "body": [
              "<ch5-slider value=\"${1:20}\"",
              "\tvaluehigh=\"${2:80}\"",
              "\tmin=\"${3:0}\"",
              "\tmax=\"${4:100}\"",
              "\tstep=\"${5:20}\"",
              "\trange=\"${6:true}\"",
              "\tsendeventonchange=\"${7:slider_value_on_change}\"",
              "\treceivestatevalue=\"${8:receive_slider_value}\"",
              "\tsendeventonchangehigh=\"${9:slider_value_high_on_change}\"",
              "\treceivestatevaluehigh=\"${10:receive_slider_value_high}\">",
              "</ch5-slider>$0"
            ]
          },
          {
            "prefix": "ch5-slider:ticks",
            "description": "Crestron slider ticks(Defines the ticks on the slider, value should be a valid JSON.)",
            "body": [
              "<ch5-slider value=\"${1:40}\"",
              "\tshowtickvalues=\"${2:true}\"",
              "\tticks='${3:{\"0\":\"-60\", \"25\":\"-40\", \"50\":\"-20\", \"75\":\"-10\", \"100\": \"0\" }}'",
              "\tsendeventonchange=\"${4:slider_value_on_change}\"",
              "\treceivestatevalue=\"${5:receive_slider_value}\">",
              "</ch5-slider>$0"
            ]
          }
        ],
        "description": "Ch5 Slider inherits the default input range behavior but provides a lot of extra features.",
        "name": "Ch5 Slider",
        "tagName": "ch5-slider"
      },
      {
        "attributes": [
          {
            "documentation": [
              "`id` attribute",
              "***",
              "This is a standard id HTML attribute."
            ],
            "value": [],
            "name": "id"
          },
          {
            "documentation": [
              "`customclass` attribute",
              "***",
              "Contains a list of classes that are applied on the component"
            ],
            "value": [],
            "name": "customclass"
          },
          {
            "documentation": [
              "`customstyle` attribute",
              "***",
              "Contains a list of space-delimited style classes applied on the component."
            ],
            "value": [],
            "name": "customstyle"
          },
          {
            "documentation": [
              "`noshowtype` attribute",
              "***",
              "This property reflects the type of the visibility of the item. See the 'data-ch5-noshow-type' ",
              "custom HTML attribute for further information."
            ],
            "value": [
              "visibility",
              "display",
              "remove"
            ],
            "name": "noshowtype"
          },
          {
            "documentation": [
              "`receivestatecustomclass` attribute",
              "***",
              "The value of this signal will be applied as an equivalent property on 'customClass'.",
              "The change of value will remove  theprior value and apply the new value."
            ],
            "value": [],
            "name": "receivestatecustomclass"
          },
          {
            "documentation": [
              "`receivestatecustomstyle` attribute",
              "***",
              "The value of this signal will be applied as an equivalent property on 'styleClass'.",
              "The change of value will remove the prior value and apply the new value."
            ],
            "value": [],
            "name": "receivestatecustomstyle"
          },
          {
            "documentation": [
              "`receivestateshow` attribute",
              "***",
              "When true, the boolean value of the signal determines if the component is visible."
            ],
            "value": [],
            "name": "receivestateshow"
          },
          {
            "documentation": [
              "`'receivestateshowpulse` attribute",
              "***",
              "on transition from false to true, this signal directs the component to become visible."
            ],
            "value": [],
            "name": "receivestateshowpulse"
          },
          {
            "documentation": [
              "`receivestatehidepulse` attribute",
              "***",
              "on transition from false to true, this signal will direct if the component is no longer visible."
            ],
            "value": [],
            "name": "receivestatehidepulse"
          },
          {
            "documentation": [
              "`receivestateenable` attribute",
              "***",
              "When true, the boolean value of the signal determines if the component is enabled.",
              "Note that the signal name is provided, and the value of the signal has the opposite ",
              "convention of the 'disabled' attribute. This is to provide consistency with current programming practices."
            ],
            "value": [],
            "name": "receivestateenable"
          },
          {
            "documentation": [
              "`sendeventonshow` attribute",
              "***",
              "Has a boolean value of true when the component is visible and false when not visible.",
              "Note that even if component is completely covered by other visible elements, it is still considered visible."
            ],
            "value": [],
            "name": "sendeventonshow"
          },
          {
            "documentation": [
              "`appendclasswheninviewport` attribute",
              "***",
              "Applies the provided value as class name while the component is visible and removes the class name when not visible."
            ],
            "value": [],
            "name": "appendclasswheninviewport"
          },
          {
            "documentation": [
              "`show` attribute",
              "***",
              "The visibility of the component depends upon the boolean value. The component is visible ",
              "when the value is true and hides when it is false."
            ],
            "value": [],
            "name": "show"
          },
          {
            "documentation": [
              "`dir` attribute",
              "***",
              "An enumerated attribute indicating the directionality of the element's text. It can have the following values:",
              "ltr, which means left to right and is to be used for languages that are written from the left to the right (like English) ",
              "rtl, which means right to left and is to be used for languages that are written from the right to the left (like Arabic) ",
              "auto, which lets the user agent decide. It uses a basic algorithm as it parses the characters inside the element until it ",
              "finds a character with a strong directionality then it applies that directionality to the whole element."
            ],
            "value": [],
            "name": "dir"
          },
          {
            "documentation": [
              "`class` attribute",
              "***",
              "This is a standard class HTML attribute."
            ],
            "value": [],
            "name": "class"
          },
          {
            "documentation": [
              "`style` attribute",
              "***",
              "This is a standard style HTML attribute."
            ],
            "value": [],
            "name": "style"
          },
          {
            "documentation": [
              "`role` attribute",
              "***",
              "This is an accessibility attribute implemented by all ch5-components and added automatically if not set by the user. ",
              "Where possible, it represents the closest supported type for a ch5-component. In the case of a ch5-button, the value of the role attribute is 'button', for a ch5-modal-dialog the value is 'dialog', and so on. ",
              "The default value for this ch5-component can be overridden via this attribute."
            ],
            "value": [],
            "name": "role"
          },
          {
            "documentation": [
              "`debug` attribute",
              "***",
              "The default value is false. Used to get useful developer-related information about component behavior."
            ],
            "value": [
              "false",
              "true"
            ],
            "name": "debug"
          },
          {
            "documentation": [
              "`disabled` attribute",
              "***",
              "The default value is false. This property will direct the component to change CSS and event listeners ",
              "to reflect a disabled state when true."
            ],
            "value": [
              "false",
              "true"
            ],
            "name": "disabled"
          },
          {
            "documentation": [
              "`size` attribute",
              "***",
              "The number of of items that can be in a spinner element."
            ],
            "value": [],
            "name": "size"
          },
          {
            "documentation": [
              "`label` attribute",
              "***",
              "The label of the spinner element."
            ],
            "value": [],
            "name": "label"
          },
          {
            "documentation": [
              "`iconposition` attribute",
              "***",
              "Valid values: 'first' and 'last'. The default value is 'first'. ",
              "This attribute only applies when a template is not provided ",
              "and the implied template is in use. ",
              "If a template is provided, this property is ignored. ",
              "If the direction attribute is 'ltr', as will be typical in locales with ",
              "left-to-right language direction, 'first' is equivalent to the icon being ",
              "placed on the left and the text on the right. Conversely, if the direction ",
              "attribute is 'rtl', 'first' would place the icon on the right and ",
              "the label to its left. Value of 'last' is the opposite of 'first'."
            ],
            "value": [
              "first",
              "last"
            ],
            "name": "iconposition"
          },
          {
            "documentation": [
              "`selectedValue` attribute",
              "***",
              "The 1-based index of the selected item. Valid values are >=1",
              "and <= size."
            ],
            "value": [],
            "name": "selectedvalue"
          },
          {
            "documentation": [
              "`itemheight` attribute",
              "***",
              "The height of an item. The value of the height can be in px and vh. ",
              "The item height is required. If this is not provided, ",
              "CH5 calculates based on the first item height. ",
              "Each item on the list must have the same height."
            ],
            "value": [],
            "name": "itemheight"
          },
          {
            "documentation": [
              "`visibleitemscroll` attribute",
              "***",
              "The default value is 3. The number of items to show in the ",
              "upper/lower container around the selected item container. ",
              "This information is needed to determine how many items ",
              "are added to the top of the list and to the bottom. If this ",
              "value is not set, the number of items can fit in scrollHeight ",
              "must be calculated, which presents a probability that ",
              "one item will not be fully visible in height. If there is a template ",
              "including this, visibleItems will need to adjust on the height of ",
              "the template given."
            ],
            "value": [],
            "name": "visibleitemscroll"
          },
          {
            "documentation": [
              "`feedbackmode` attribute",
              "***",
              "The default value is 'direct'. Allows the form submission functionality. ",
              "Valid values: 'direct', 'submit'."
            ],
            "value": [
              "direct",
              "submit"
            ],
            "name": "feedbackmode"
          },
          {
            "documentation": [
              "`signalValueSyncTimeout` attribute",
              "***",
              "The default value is 1500. Defines the time between the user releases a ",
              "toggle and the time the toggle will check if the ",
              "value is equal with the value from the signal. If the value is not equal, it will ",
              "apply the value from the signal automatically. Apply only for ",
              "feedbackMode direct."
            ],
            "value": [],
            "name": "signalvaluesynctimeout"
          },
          {
            "documentation": [
              "`indexid` attribute",
              "***",
              "Provides the name of the offset identifier to be substituted with ",
              "a 1-based index of the item in a list within the template item ",
              "surrounded by {{ }} delimiters."
            ],
            "value": [],
            "name": "indexid"
          },
          {
            "documentation": [
              "`receiveStateValue` attribute",
              "***",
              "Provides the current value of the spinner."
            ],
            "value": [],
            "name": "receivestatevalue"
          },
          {
            "documentation": [
              "`receiveStateSize` attribute",
              "***",
              "Provides the size of the spinner."
            ],
            "value": [],
            "name": "receivestatesize"
          },
          {
            "documentation": [
              "`receiveStateLabel` attribute",
              "***",
              "Provides the label of the spinner."
            ],
            "value": [],
            "name": "receivestatelabel"
          },
          {
            "documentation": [
              "`receiveStateUrl` attribute",
              "***",
              "Provides the image or icon URL."
            ],
            "value": [],
            "name": "receivestateurl"
          },
          {
            "documentation": [
              "`sendEventOnChange` attribute",
              "***",
              "Sends an event when the value of the spinner changes."
            ],
            "value": [],
            "name": "sendeventonchange"
          },
          {
            "documentation": [
              "`sendEventOnFocus` attribute",
              "***",
              "Sends an event on focus."
            ],
            "value": [],
            "name": "sendeventonfocus"
          },
          {
            "documentation": [
              "`sendEventOnOverflow` attribute",
              "***",
              "Sends an event on overflow (endless attribute required)."
            ],
            "value": [],
            "name": "sendeventonoverflow"
          },
          {
            "documentation": [
              "`sendEventOnUnderflow` attribute",
              "***",
              "Sends an event on underflow (endless attribute required)."
            ],
            "value": [],
            "name": "sendeventonunderflow"
          },
          {
            "documentation": [
              "`onclean` attribute",
              "***",
              "Runs when a clean event is initiated."
            ],
            "value": [],
            "name": "onclean"
          },
          {
            "documentation": [
              "`ondirty` attribute",
              "***",
              "Runs when a dirty event is initiated."
            ],
            "value": [],
            "name": "ondirty"
          },
          {
            "documentation": [
              "`resize` attribute",
              "***",
              "If true, the options panel is resized to fit content width. ",
              "Apply only with the CSS rule 'width=fit-content' and/or 'width =auto' ",
              "(depending on the browser agent)."
            ],
            "value": [
              "false",
              "true"
            ],
            "name": "resize"
          },
          {
            "documentation": [
              "`endless` attribute",
              "***",
              "The default value is false. Creates an infinite spinner. This will trigger the next ",
              "element after the last to be the first element in the list."
            ],
            "value": [
              "false",
              "true"
            ],
            "name": "endless"
          },
          {
            "documentation": [
              "`autosetitemheight` attribute",
              "***",
              "Adjusts the height of ch5-spinner items automatically."
            ],
            "value": [
              "false",
              "true"
            ],
            "name": "autosetitemheight"
          }
        ],
        "documentation": [
          "`ch5-spinner` element",
          "***",
          "Functionally, the Spinner component is similar to the Select component. The primary differences are in the visual representation. ",
          "The Spinner component presents a vertical list of values centered around one centrally-orientated ",
          "item, which is considered the single selected item. Swiping up and down on the items allow the user ",
          "to see other selections, and placing an item in the center chooses that item."
        ],
        "snippets": [
          {
            "prefix": "ch5-spinner:blank",
            "description": "Crestron Spinner (Blank)",
            "body": [
              "<ch5-spinner>",
              "</ch5-spinner>$0"
            ]
          },
          {
            "prefix": "ch5-spinner:default",
            "description": "Crestron Spinner (Default)",
            "body": [
              "<ch5-spinner",
              "    label=\"${1:item {{idx}}}\"",
              "    indexid=\"${2:idx}\"",
              "    size=\"${3:40}\"",
              "    itemheight=\"${4:40}\"",
              "    visibleitemscroll=\"${5:3}\"",
              "    sendeventonchange=\"${6:changed_signal}\">",
              "</ch5-spinner>$0"
            ]
          },
          {
            "prefix": "ch5-spinner:endless",
            "description": "Crestron Spinner endless attribute allows the user to continuously drag the spinner.",
            "body": [
              "<ch5-spinner",
              "    label=\"${1:item {{idx}}}\"",
              "    indexid=\"${2:idx}\"",
              "    size=\"${3:20}\"",
              "    itemheight=\"${4:40}\"",
              "    visibleitemscroll=\"${5:3}\"",
              "    endless=\"${6:true}\">",
              "</ch5-spinner>$0"
            ]
          },
          {
            "prefix": "ch5-spinner:signals",
            "description": "Crestron Spinner sending signals when interact with the component.",
            "body": [
              "<ch5-spinner",
              "    label=\"${1:item {{idx}}}\"",
              "    indexid=\"${2:idx}\"",
              "    size=\"${3:20}\"",
              "    itemheight=\"${4:40}\"",
              "    visibleitemscroll=\"${5:3}\"",
              "    endless=\"${6:true}\"",
              "    sendeventonchange=\"${7:changed_signal}\"",
              "    sendeventonfocus=\"${8:spinner_focusin}\">",
              "</ch5-spinner>$0"
            ]
          }
        ],
        "description": "CH5 Spinner provides a list of items where items can be moved between by dragging the spinner element.",
        "name": "Ch5 Spinner",
        "tagName": "ch5-spinner"
      },
      {
        "attributes": [
          {
            "documentation": [
              "`id` attribute",
              "***",
              "This is a standard id HTML attribute."
            ],
            "value": [],
            "name": "id"
          },
          {
            "documentation": [
              "`customclass` attribute",
              "***",
              "Contains a list of classes that are applied on the component"
            ],
            "value": [],
            "name": "customclass"
          },
          {
            "documentation": [
              "`customstyle` attribute",
              "***",
              "Contains a list of space-delimited style classes applied on the component."
            ],
            "value": [],
            "name": "customstyle"
          },
          {
            "documentation": [
              "`noshowtype` attribute",
              "***",
              "This property reflects the type of the visibility of the item. See the 'data-ch5-noshow-type' ",
              "custom HTML attribute for further information."
            ],
            "value": [
              "visibility",
              "display",
              "remove"
            ],
            "name": "noshowtype"
          },
          {
            "documentation": [
              "`receivestatecustomclass` attribute",
              "***",
              "The value of this signal will be applied as an equivalent property on 'customClass'.",
              "The change of value will remove  theprior value and apply the new value."
            ],
            "value": [],
            "name": "receivestatecustomclass"
          },
          {
            "documentation": [
              "`receivestatecustomstyle` attribute",
              "***",
              "The value of this signal will be applied as an equivalent property on 'styleClass'.",
              "The change of value will remove the prior value and apply the new value."
            ],
            "value": [],
            "name": "receivestatecustomstyle"
          },
          {
            "documentation": [
              "`receivestateshow` attribute",
              "***",
              "When true, the boolean value of the signal determines if the component is visible."
            ],
            "value": [],
            "name": "receivestateshow"
          },
          {
            "documentation": [
              "`'receivestateshowpulse` attribute",
              "***",
              "on transition from false to true, this signal directs the component to become visible."
            ],
            "value": [],
            "name": "receivestateshowpulse"
          },
          {
            "documentation": [
              "`receivestatehidepulse` attribute",
              "***",
              "on transition from false to true, this signal will direct if the component is no longer visible."
            ],
            "value": [],
            "name": "receivestatehidepulse"
          },
          {
            "documentation": [
              "`receivestateenable` attribute",
              "***",
              "When true, the boolean value of the signal determines if the component is enabled.",
              "Note that the signal name is provided, and the value of the signal has the opposite ",
              "convention of the 'disabled' attribute. This is to provide consistency with current programming practices."
            ],
            "value": [],
            "name": "receivestateenable"
          },
          {
            "documentation": [
              "`sendeventonshow` attribute",
              "***",
              "Has a boolean value of true when the component is visible and false when not visible.",
              "Note that even if component is completely covered by other visible elements, it is still considered visible."
            ],
            "value": [],
            "name": "sendeventonshow"
          },
          {
            "documentation": [
              "`appendclasswheninviewport` attribute",
              "***",
              "Applies the provided value as class name while the component is visible and removes the class name when not visible."
            ],
            "value": [],
            "name": "appendclasswheninviewport"
          },
          {
            "documentation": [
              "`show` attribute",
              "***",
              "The visibility of the component depends upon the boolean value. The component is visible ",
              "when the value is true and hides when it is false."
            ],
            "value": [],
            "name": "show"
          },
          {
            "documentation": [
              "`dir` attribute",
              "***",
              "An enumerated attribute indicating the directionality of the element's text. It can have the following values:",
              "ltr, which means left to right and is to be used for languages that are written from the left to the right (like English) ",
              "rtl, which means right to left and is to be used for languages that are written from the right to the left (like Arabic) ",
              "auto, which lets the user agent decide. It uses a basic algorithm as it parses the characters inside the element until it ",
              "finds a character with a strong directionality then it applies that directionality to the whole element."
            ],
            "value": [],
            "name": "dir"
          },
          {
            "documentation": [
              "`class` attribute",
              "***",
              "This is a standard class HTML attribute."
            ],
            "value": [],
            "name": "class"
          },
          {
            "documentation": [
              "`style` attribute",
              "***",
              "This is a standard style HTML attribute."
            ],
            "value": [],
            "name": "style"
          },
          {
            "documentation": [
              "`role` attribute",
              "***",
              "This is an accessibility attribute implemented by all ch5-components and added automatically if not set by the user. ",
              "Where possible, it represents the closest supported type for a ch5-component. In the case of a ch5-button, the value of the role attribute is 'button', for a ch5-modal-dialog the value is 'dialog', and so on. ",
              "The default value for this ch5-component can be overridden via this attribute."
            ],
            "value": [],
            "name": "role"
          },
          {
            "documentation": [
              "`debug` attribute",
              "***",
              "The default value is false. Used to get useful developer-related information about component behavior."
            ],
            "value": [
              "false",
              "true"
            ],
            "name": "debug"
          },
          {
            "documentation": [
              "`disabled` attribute",
              "***",
              "The default value is false. This property will direct the component to change CSS and event listeners ",
              "to reflect a disabled state when true."
            ],
            "value": [
              "false",
              "true"
            ],
            "name": "disabled"
          },
          {
            "documentation": [
              "`feedbackmode` attribute",
              "***",
              "The default value is 'direct'. Valid values: 'direct', 'submit'.",
              "***",
              "- 'direct' updates the trigger change event and sendEventOnChange ",
              "as the user changes. ",
              "- 'submit' triggers a change event and updates the signal in ",
              "sendEventOnChange attribute only when the submit() method is called by a Form Component."
            ],
            "value": [
              "direct",
              "submit"
            ],
            "name": "feedbackmode"
          },
          {
            "documentation": [
              "`signalvaluesynctimeout` attribute",
              "***",
              "The default value is 1500ms. Defines the time between the end of focus (no more user action ",
              "for example, for a ch5-toggle this means that the user has released the handle of the toggle) ",
              "and the time the CH5 element will check if the value is equal with the value from the signal. ",
              "If the value is not equal, it will apply the value from the signal automatically. Apply only for feedbackMode direct."
            ],
            "value": [],
            "name": "signalvaluesynctimeout"
          },
          {
            "documentation": [
              "`onclean` attribute",
              "***",
              "Runs when a clean event is initiated."
            ],
            "value": [],
            "name": "onclean"
          },
          {
            "documentation": [
              "`ondirty` attribute",
              "***",
              "Runs when a dirty event is initiated."
            ],
            "value": [],
            "name": "ondirty"
          },
          {
            "documentation": [
              "`mask` attribute",
              "***",
              "The background pattern that will be present when the input is focused. ",
              "The following combination of prebuilt definitions are permitted: ",
              "a - alpha caracter ",
              "9 - numeric character ",
              "* - alphanumeric character"
            ],
            "value": [],
            "name": "mask"
          },
          {
            "documentation": [
              "`icon` attribute",
              "***",
              "The icon to be shown."
            ],
            "value": [],
            "name": "icon"
          },
          {
            "documentation": [
              "`label` attribute",
              "***",
              "Provides the label for the input."
            ],
            "value": [],
            "name": "label"
          },
          {
            "documentation": [
              "`placeholder` attribute",
              "***",
              "Provides the placeholder for the input. This shares the default behavior of the input HMTL element."
            ],
            "value": [],
            "name": "placeholder"
          },
          {
            "documentation": [
              "`iconposition` attribute",
              "***",
              "Valid values: 'first' and 'last'. The default value is 'first'. ",
              "If the direction attribute is 'ltr', as will be typical in locales with a left-to-right language ",
              "direction, 'first' is equivalent to the icon being placed on the left and the text on the ",
              "right. ",
              "Conversely, if the direction attribute is 'rtl', first' would place the icon on the ",
              "right and the label to its left. The Value of 'last' is ",
              "the opposite of 'first'."
            ],
            "value": [
              "first",
              "last"
            ],
            "name": "iconposition"
          },
          {
            "documentation": [
              "`type` attribute",
              "***",
              "The type of the input."
            ],
            "value": [
              "text",
              "number",
              "email"
            ],
            "name": "type"
          },
          {
            "documentation": [
              "`minlength` attribute",
              "***",
              "Applicable only in feedbackmode='submit'. The minimum length of the attribute."
            ],
            "value": [],
            "name": "minlength"
          },
          {
            "documentation": [
              "`maxlength` attribute",
              "***",
              "Applicable only in feedbackmode='submit'. The maximum length of the attribute"
            ],
            "value": [],
            "name": "maxlength"
          },
          {
            "documentation": [
              "`minvalue` attribute",
              "***",
              "Applicable only for type=numeric and feedbackmode='submit'. ",
              "The field will result in an error if the value supplied by user is less than value of the attribute."
            ],
            "value": [],
            "name": "minvalue"
          },
          {
            "documentation": [
              "`maxvalue` attribute",
              "***",
              "Applicable only for type=numeric and feedbackmode='submit'. ",
              "The field will result in an error if the value supplied by user is greater than value of ",
              "the attribute."
            ],
            "value": [],
            "name": "maxvalue"
          },
          {
            "documentation": [
              "`size` attribute",
              "***",
              "Sets the relative size of this component."
            ],
            "value": [
              "regular",
              "x-small",
              "small",
              "large",
              "x-large"
            ],
            "name": "size"
          },
          {
            "documentation": [
              "`stretch` attribute",
              "***",
              "The default value is 'fixed'. Valid values: 'fixed', 'width', and 'content'.",
              "Sets the width of the input.",
              "***",
              "Fixed - fixed position (from CSS classes) ",
              "Width - Width of the parent content ",
              "Content - Width will be equal to the content width"
            ],
            "value": [
              "fixed",
              "width",
              "content"
            ],
            "name": "stretch"
          },
          {
            "documentation": [
              "`text-transform` attribute",
              "***",
              "Only used for type=text. The default value is 'none'. ",
              "Valid values: ",
              "'capitalize' – Makes all first characters of each word uppercase ",
              "'uppercase' – Makes all characters uppercase ",
              "'lowercase' – Makes all characters lowercase ",
              "'none' – Does not change the input"
            ],
            "value": [
              "none",
              "capitalize",
              "uppercase",
              "lowercase"
            ],
            "name": "text-transform"
          },
          {
            "documentation": [
              "`receivestatefocus` attribute",
              "***",
              "When focused, send true. When unfocusesd, send false."
            ],
            "value": [],
            "name": "receivestatefocus"
          },
          {
            "documentation": [
              "`receivestatevalue` attribute",
              "***",
              "When recevied, changes the value of the text input field."
            ],
            "value": [],
            "name": "receivestatevalue"
          },
          {
            "documentation": [
              "`sendeventonchange` attribute",
              "***",
              "Sends an event on value change."
            ],
            "value": [],
            "name": "sendeventonchange"
          },
          {
            "documentation": [
              "`sendeventonfocus` attribute",
              "***",
              "Sends an event on focus."
            ],
            "value": [],
            "name": "sendeventonfocus"
          },
          {
            "documentation": [
              "`sendeventonblur` attribute",
              "***",
              "Sends an event on blur."
            ],
            "value": [],
            "name": "sendeventonblur"
          },
          {
            "documentation": [
              "`onvaliditychange` attribute",
              "***",
              "Runs when the validity state of a input has been changed."
            ],
            "value": [],
            "name": "onvaliditychange"
          },
          {
            "documentation": [
              "`value` attribute",
              "***",
              "The value attribute specifies the value of an input element."
            ],
            "value": [],
            "name": "value"
          },
          {
            "documentation": [
              "`scaling` attribute",
              "***",
              "Scales the input font size when it reaches the edge."
            ],
            "value": [
              "false",
              "true"
            ],
            "name": "scaling"
          },
          {
            "documentation": [
              "`minimumfontsize` attribute",
              "***",
              "The minimum font size is applied when the input text exceeds the width of the input text box. ",
              "This will work only if a scaling attribute is set."
            ],
            "value": [],
            "name": "minimumfontsize"
          },
          {
            "documentation": [
              "`tabIndex` attribute",
              "***",
              "The tabIndex global attribute indicates that its element ",
              "can be focused and indicates where it places in sequential ",
              "keyboard navigation."
            ],
            "value": [],
            "name": "tabindex"
          }
        ],
        "documentation": [
          "`ch5-textinput` attribute",
          "***",
          "The TextEntry component allows the user to enter textual input. This is an extension of the ",
          "input HTML element."
        ],
        "snippets": [
          {
            "prefix": "ch5-textinput:blank",
            "description": "Crestron Textinput (Blank)",
            "body": [
              "<ch5-textinput>",
              "</ch5-textinput>$0"
            ]
          },
          {
            "prefix": "ch5-textinput:default",
            "description": "Crestron Textinput (Default)",
            "body": [
              "<ch5-textinput",
              "     type=\"${1|text,number,month,week,email|}\">",
              "</ch5-textinput>$0"
            ]
          },
          {
            "prefix": "ch5-textinput:phone",
            "description": "Crestron Textinput phone mask attribute",
            "body": [
              "<ch5-textinput",
              "    label=\"${1:Phone number:}\"",
              "    icon=\"${2:fa fa-phone}\"",
              "    size=\"${3:x-large}\"",
              "    placeholder=\"${4:Phone Number}\"",
              "    mask=\"${5:(+99) 999 999 999}\"",
              "    id=\"${7:phoneNumber}\">",
              "</ch5-textinput>"
            ]
          },
          {
            "prefix": "ch5-textinput:signals",
            "description": "Crestron Textinput phone mask attribute",
            "body": [
              "<ch5-textinput",
              "    label=\"${1:Phone number:}\"",
              "    icon=\"${2:fa fa-phone}\"",
              "    size=\"${3:x-large}\"",
              "    placeholder=\"${4:Phone Number}\"",
              "    mask=\"${5:(+99) 999 999 999}\"",
              "    id=\"${7:phoneNumber}\"",
              "    sendeventonchange=\"${8:input_changed}\"",
              "    sendeventonfocus=\"${9:input_focus}\"",
              "    sendeventonblur=\"${10:input_blur}\">",
              "</ch5-textinput>"
            ]
          }
        ],
        "description": "Ch5 Textinput inherits the default html input behavior, but also provides extra features.",
        "name": "Ch5 Textinput",
        "tagName": "ch5-textinput"
      },
      {
        "attributes": [
          {
            "documentation": [
              "`id` attribute",
              "***",
              "This is a standard id HTML attribute."
            ],
            "value": [],
            "name": "id"
          },
          {
            "documentation": [
              "`customclass` attribute",
              "***",
              "Contains a list of classes that are applied on the component"
            ],
            "value": [],
            "name": "customclass"
          },
          {
            "documentation": [
              "`customstyle` attribute",
              "***",
              "Contains a list of space-delimited style classes applied on the component."
            ],
            "value": [],
            "name": "customstyle"
          },
          {
            "documentation": [
              "`noshowtype` attribute",
              "***",
              "This property reflects the type of the visibility of the item. See the 'data-ch5-noshow-type' ",
              "custom HTML attribute for further information."
            ],
            "value": [
              "visibility",
              "display",
              "remove"
            ],
            "name": "noshowtype"
          },
          {
            "documentation": [
              "`receivestatecustomclass` attribute",
              "***",
              "The value of this signal will be applied as an equivalent property on 'customClass'.",
              "The change of value will remove  theprior value and apply the new value."
            ],
            "value": [],
            "name": "receivestatecustomclass"
          },
          {
            "documentation": [
              "`receivestatecustomstyle` attribute",
              "***",
              "The value of this signal will be applied as an equivalent property on 'styleClass'.",
              "The change of value will remove the prior value and apply the new value."
            ],
            "value": [],
            "name": "receivestatecustomstyle"
          },
          {
            "documentation": [
              "`receivestateshow` attribute",
              "***",
              "When true, the boolean value of the signal determines if the component is visible."
            ],
            "value": [],
            "name": "receivestateshow"
          },
          {
            "documentation": [
              "`'receivestateshowpulse` attribute",
              "***",
              "on transition from false to true, this signal directs the component to become visible."
            ],
            "value": [],
            "name": "receivestateshowpulse"
          },
          {
            "documentation": [
              "`receivestatehidepulse` attribute",
              "***",
              "on transition from false to true, this signal will direct if the component is no longer visible."
            ],
            "value": [],
            "name": "receivestatehidepulse"
          },
          {
            "documentation": [
              "`receivestateenable` attribute",
              "***",
              "When true, the boolean value of the signal determines if the component is enabled.",
              "Note that the signal name is provided, and the value of the signal has the opposite ",
              "convention of the 'disabled' attribute. This is to provide consistency with current programming practices."
            ],
            "value": [],
            "name": "receivestateenable"
          },
          {
            "documentation": [
              "`sendeventonshow` attribute",
              "***",
              "Has a boolean value of true when the component is visible and false when not visible.",
              "Note that even if component is completely covered by other visible elements, it is still considered visible."
            ],
            "value": [],
            "name": "sendeventonshow"
          },
          {
            "documentation": [
              "`appendclasswheninviewport` attribute",
              "***",
              "Applies the provided value as class name while the component is visible and removes the class name when not visible."
            ],
            "value": [],
            "name": "appendclasswheninviewport"
          },
          {
            "documentation": [
              "`show` attribute",
              "***",
              "The visibility of the component depends upon the boolean value. The component is visible ",
              "when the value is true and hides when it is false."
            ],
            "value": [],
            "name": "show"
          },
          {
            "documentation": [
              "`dir` attribute",
              "***",
              "An enumerated attribute indicating the directionality of the element's text. It can have the following values:",
              "ltr, which means left to right and is to be used for languages that are written from the left to the right (like English) ",
              "rtl, which means right to left and is to be used for languages that are written from the right to the left (like Arabic) ",
              "auto, which lets the user agent decide. It uses a basic algorithm as it parses the characters inside the element until it ",
              "finds a character with a strong directionality then it applies that directionality to the whole element."
            ],
            "value": [],
            "name": "dir"
          },
          {
            "documentation": [
              "`class` attribute",
              "***",
              "This is a standard class HTML attribute."
            ],
            "value": [],
            "name": "class"
          },
          {
            "documentation": [
              "`style` attribute",
              "***",
              "This is a standard style HTML attribute."
            ],
            "value": [],
            "name": "style"
          },
          {
            "documentation": [
              "`role` attribute",
              "***",
              "This is an accessibility attribute implemented by all ch5-components and added automatically if not set by the user. ",
              "Where possible, it represents the closest supported type for a ch5-component. In the case of a ch5-button, the value of the role attribute is 'button', for a ch5-modal-dialog the value is 'dialog', and so on. ",
              "The default value for this ch5-component can be overridden via this attribute."
            ],
            "value": [],
            "name": "role"
          },
          {
            "documentation": [
              "`debug` attribute",
              "***",
              "The default value is false. Used to get useful developer-related information about component behavior."
            ],
            "value": [
              "false",
              "true"
            ],
            "name": "debug"
          },
          {
            "documentation": [
              "`disabled` attribute",
              "***",
              "The default value is false. This property will direct the component to change CSS and event listeners ",
              "to reflect a disabled state when true."
            ],
            "value": [
              "false",
              "true"
            ],
            "name": "disabled"
          },
          {
            "documentation": [
              "`feedbackmode` attribute",
              "***",
              "The default value is 'direct'. If direct, value send and receive will be ",
              "instant. On submit, it will send and listen for the first event received."
            ],
            "value": [
              "direct",
              "submit"
            ],
            "name": "feedbackmode"
          },
          {
            "documentation": [
              "`signalvaluesynctimeout` attribute",
              "***",
              "The default value is 1500. Defines the time between when the user clicks the ",
              "toggle and the time the toggle will check if the value is equal ",
              "with the value from the signal. If the value is not equal, it will apply ",
              "the value from the signal automatically. Apply only for feedbackMode direct."
            ],
            "value": [],
            "name": "signalvaluesynctimeout"
          },
          {
            "documentation": [
              "`label` attribute",
              "***",
              "The label of the toggle element."
            ],
            "value": [],
            "name": "label"
          },
          {
            "documentation": [
              "`labelon` attribute",
              "***",
              "Custom text to display on the toggle when the toggle is ON."
            ],
            "value": [],
            "name": "labelon"
          },
          {
            "documentation": [
              "`labeloff` attribute",
              "***",
              "Custom text to display on the toggle when the toggle is OFF."
            ],
            "value": [],
            "name": "labeloff"
          },
          {
            "documentation": [
              "`iconon` attribute",
              "***",
              "Specifies a custom icon class when the toggle is ON."
            ],
            "value": [],
            "name": "iconon"
          },
          {
            "documentation": [
              "`iconoff` attribute",
              "***",
              "Specifies a custom icon class when the toggle is OFF."
            ],
            "value": [],
            "name": "iconoff"
          },
          {
            "documentation": [
              "`handleshape` attribute",
              "***",
              "The default value is 'circle'. Sets the shape that will also determine the shape ",
              "of the component (rectangle or circle)."
            ],
            "value": [
              "circle",
              "rectangle"
            ],
            "name": "handleshape"
          },
          {
            "documentation": [
              "`orientation` attribute",
              "***",
              "The default value is 'horizontal'. Valid values: 'horizontal', 'vertical'. Sets ",
              "the control elements in a horizontal or vertical orientation. ",
              "For vertical alignment, it will apply a CSS class that will rotate the ",
              "component -90 degrees (270 degrees clockwise, 90 degrees counter clockwise)."
            ],
            "value": [
              "horizontal",
              "vertical"
            ],
            "name": "orientation"
          },
          {
            "documentation": [
              "`receivestatescriptlabelhtml` attribute",
              "***",
              "The value of the switch."
            ],
            "value": [],
            "name": "receivestatescriptlabelhtml"
          },
          {
            "documentation": [
              "`receivestatevalue` attribute",
              "***",
              "The receiving value from the signal."
            ],
            "value": [],
            "name": "receivestatevalue"
          },
          {
            "documentation": [
              "`sendeventonclick` attribute",
              "Sends a signal on a click or tap event (mouse or swipe up and down quickly)."
            ],
            "value": [],
            "name": "sendeventonclick"
          },
          {
            "documentation": [
              "`onclean` attribute",
              "***",
              "Runs when a clean event is initiated."
            ],
            "value": [],
            "name": "onclean"
          },
          {
            "documentation": [
              "`ondirty` attribute",
              "***",
              "Runs when a dirty event is initiated."
            ],
            "value": [],
            "name": "ondirty"
          },
          {
            "documentation": [
              "`value` attribute",
              "***",
              "The default value is false. The initial value of the component. ",
              "When feedbackMode=submit, this property will change to the last ",
              "value submitted. When reset, the value property will be changed to ",
              "the initial value or last value on submit."
            ],
            "value": [
              "false",
              "true"
            ],
            "name": "value"
          }
        ],
        "documentation": [
          "`ch5-toggle` element",
          "***",
          "Appears as a two-state switch with easy transition between states. The component has the ",
          "functionality of an HTML checkbox-type input element."
        ],
        "snippets": [
          {
            "prefix": "ch5-toggle:label-on-off",
            "description": "Crestron Toggle (Default)",
            "body": [
              "<ch5-toggle label=\"${1:Alarm}\"",
              "\tvalue=\"${2:false}\"",
              "\tlabelon=\"${3:On}\"",
              "\tlabeloff=\"${4:Off}\"",
              "\tsendeventonclick=\"${5:send_switch_value}\"",
              "\treceivestatevalue=\"${5:receive_switch_value}\">",
              "</ch5-toggle>$0"
            ]
          },
          {
            "prefix": "ch5-toggle:icon-on-off",
            "description": "Crestron Toggle (Default)",
            "body": [
              "<ch5-toggle label=\"${1:Alarm}\"",
              "\tvalue=\"${2:false}\"",
              "\ticonon=\"${3:fas fa-bell}\"",
              "\ticonoff=\"${4:fas fa-bell-slash}\"",
              "\tsendeventonclick=\"${5:send_switch_value}\"",
              "\treceivestatevalue=\"${5:receive_switch_value}\">",
              "</ch5-toggle>$0"
            ]
          }
        ],
        "description": "Ch5 Toggle represents an input with two states behaving like a switch",
        "name": "Ch5 Toggle",
        "tagName": "ch5-toggle"
      },
      {
        "attributes": [
          {
            "documentation": [
              "`id` attribute",
              "***",
              "This is a standard id HTML attribute."
            ],
            "value": [],
            "name": "id"
          },
          {
            "documentation": [
              "`customclass` attribute",
              "***",
              "Contains a list of classes that are applied on the component"
            ],
            "value": [],
            "name": "customclass"
          },
          {
            "documentation": [
              "`customstyle` attribute",
              "***",
              "Contains a list of space-delimited style classes applied on the component."
            ],
            "value": [],
            "name": "customstyle"
          },
          {
            "documentation": [
              "`noshowtype` attribute",
              "***",
              "This property reflects the type of the visibility of the item. See the 'data-ch5-noshow-type' ",
              "custom HTML attribute for further information."
            ],
            "value": [
              "visibility",
              "display",
              "remove"
            ],
            "name": "noshowtype"
          },
          {
            "documentation": [
              "`receivestatecustomclass` attribute",
              "***",
              "The value of this signal will be applied as an equivalent property on 'customClass'.",
              "The change of value will remove  theprior value and apply the new value."
            ],
            "value": [],
            "name": "receivestatecustomclass"
          },
          {
            "documentation": [
              "`receivestatecustomstyle` attribute",
              "***",
              "The value of this signal will be applied as an equivalent property on 'styleClass'.",
              "The change of value will remove the prior value and apply the new value."
            ],
            "value": [],
            "name": "receivestatecustomstyle"
          },
          {
            "documentation": [
              "`receivestateshow` attribute",
              "***",
              "When true, the boolean value of the signal determines if the component is visible."
            ],
            "value": [],
            "name": "receivestateshow"
          },
          {
            "documentation": [
              "`'receivestateshowpulse` attribute",
              "***",
              "on transition from false to true, this signal directs the component to become visible."
            ],
            "value": [],
            "name": "receivestateshowpulse"
          },
          {
            "documentation": [
              "`receivestatehidepulse` attribute",
              "***",
              "on transition from false to true, this signal will direct if the component is no longer visible."
            ],
            "value": [],
            "name": "receivestatehidepulse"
          },
          {
            "documentation": [
              "`receivestateenable` attribute",
              "***",
              "When true, the boolean value of the signal determines if the component is enabled.",
              "Note that the signal name is provided, and the value of the signal has the opposite ",
              "convention of the 'disabled' attribute. This is to provide consistency with current programming practices."
            ],
            "value": [],
            "name": "receivestateenable"
          },
          {
            "documentation": [
              "`sendeventonshow` attribute",
              "***",
              "Has a boolean value of true when the component is visible and false when not visible.",
              "Note that even if component is completely covered by other visible elements, it is still considered visible."
            ],
            "value": [],
            "name": "sendeventonshow"
          },
          {
            "documentation": [
              "`appendclasswheninviewport` attribute",
              "***",
              "Applies the provided value as class name while the component is visible and removes the class name when not visible."
            ],
            "value": [],
            "name": "appendclasswheninviewport"
          },
          {
            "documentation": [
              "`show` attribute",
              "***",
              "The visibility of the component depends upon the boolean value. The component is visible ",
              "when the value is true and hides when it is false."
            ],
            "value": [],
            "name": "show"
          },
          {
            "documentation": [
              "`dir` attribute",
              "***",
              "An enumerated attribute indicating the directionality of the element's text. It can have the following values:",
              "ltr, which means left to right and is to be used for languages that are written from the left to the right (like English) ",
              "rtl, which means right to left and is to be used for languages that are written from the right to the left (like Arabic) ",
              "auto, which lets the user agent decide. It uses a basic algorithm as it parses the characters inside the element until it ",
              "finds a character with a strong directionality then it applies that directionality to the whole element."
            ],
            "value": [],
            "name": "dir"
          },
          {
            "documentation": [
              "`class` attribute",
              "***",
              "This is a standard class HTML attribute."
            ],
            "value": [],
            "name": "class"
          },
          {
            "documentation": [
              "`style` attribute",
              "***",
              "This is a standard style HTML attribute."
            ],
            "value": [],
            "name": "style"
          },
          {
            "documentation": [
              "`role` attribute",
              "***",
              "This is an accessibility attribute implemented by all ch5-components and added automatically if not set by the user. ",
              "Where possible, it represents the closest supported type for a ch5-component. In the case of a ch5-button, the value of the role attribute is 'button', for a ch5-modal-dialog the value is 'dialog', and so on. ",
              "The default value for this ch5-component can be overridden via this attribute."
            ],
            "value": [],
            "name": "role"
          },
          {
            "documentation": [
              "`debug` attribute",
              "***",
              "The default value is false. Used to get useful developer-related information about component behavior."
            ],
            "value": [
              "false",
              "true"
            ],
            "name": "debug"
          },
          {
            "documentation": [
              "`disabled` attribute",
              "***",
              "The default value is false. This property will direct the component to change CSS and event listeners ",
              "to reflect a disabled state when true."
            ],
            "value": [
              "false",
              "true"
            ],
            "name": "disabled"
          },
          {
            "documentation": [
              "`activeview` attribute",
              "***",
              "The default value is 0. Sets the view that will be shown using a 0-based index."
            ],
            "value": [],
            "name": "activeview"
          },
          {
            "documentation": [
              "`sendeventshowchildindex` attribute",
              "***",
              "Sends the numeric value of the currently visible state.",
              "Based on 0-based numbering."
            ],
            "value": [],
            "name": "sendeventshowchildindex"
          },
          {
            "documentation": [
              "`receivestateshowchildindex` attribute",
              "***",
              "The receipt of the numeric value of this state will make ",
              "the 0-based index of views in the component become visible."
            ],
            "value": [],
            "name": "receivestateshowchildindex"
          },
          {
            "documentation": [
              "`disableanimation` attribute",
              "***",
              "Disables the swipe-like animation when navigating through the ChildViews of the TriggerView."
            ],
            "value": [],
            "name": "disableanimation"
          },
          {
            "documentation": [
              "`gestureable` attribute",
              "***",
              "The default value is false. When set to true, gesturing will be supported. Adding this will ",
              "change the behavior inside of the component. ",
              "Refer to Gesture - Use Cases for more information."
            ],
            "value": [
              "false",
              "true"
            ],
            "name": "gestureable"
          },
          {
            "documentation": [
              "`endless` attribute",
              "***",
              "The default value is false. The nextChildView method can be called on the last ChildView to open the first-child."
            ],
            "value": [
              "false",
              "true"
            ],
            "name": "endless"
          },
          {
            "documentation": [
              "`nested` attribute",
              "***",
              "A boolean attribute used to flag that ch5-triggerview is the child element on ch5-triggerview-child."
            ],
            "value": [
              "false",
              "true"
            ],
            "name": "nested"
          }
        ],
        "documentation": [
          "`ch5-triggerview` element",
          "***",
          "A container-like component for organizing content into multiple subgroups (ch5-triggerview-child). Each ChildView can be viewed as a separate page or tab."
        ],
        "snippets": [
          {
            "prefix": "ch5-triggerview:blank",
            "body": [
              "<ch5-triggerview>",
              "    <ch5-triggerview-child>",
              "    </ch5-triggerview-child> ",
              "</ch5-triggerview>"
            ],
            "description": "Crestron Triggerview (Blank)"
          },
          {
            "prefix": "ch5-triggerview:default",
            "body": [
              "<ch5-triggerview activeview=\"${1:1}\" gestureable=\"${2:true}\" endless=\"${3:true}\"> ",
              "    <ch5-triggerview-child>",
              "        <div class=\"viewcontent\">",
              "            <h1>First View</h1>",
              "        </div>",
              "    </ch5-triggerview-child> ",
              "    <ch5-triggerview-child>",
              "        <div class=\"viewcontent\">",
              "            <h1>Second View</h1>",
              "        </div>",
              "    </ch5-triggerview-child>",
              "    <ch5-triggerview-child>",
              "        <div class=\"viewcontent\">",
              "            <h1>Third View</h1>",
              "        </div>",
              "    </ch5-triggerview-child>",
              "</ch5-triggerview>"
            ],
            "description": "Crestron Triggerview (Default)"
          },
          {
            "prefix": "ch5-triggerview:signals",
            "body": [
              "<ch5-triggerview activeview=\"${1:1}\" sendeventshowchildindex=\"${2:send_index_view}\" receivestateshowchildindex=\"${3:receive_index_view}\" > ",
              "    <ch5-triggerview-child>",
              "        <div class=\"viewcontent\">",
              "            <h1>First View</h1>",
              "        </div>",
              "    </ch5-triggerview-child> ",
              "    <ch5-triggerview-child>",
              "        <div class=\"viewcontent\">",
              "            <h1>Second View</h1>",
              "        </div>",
              "    </ch5-triggerview-child>",
              "    <ch5-triggerview-child>",
              "        <div class=\"viewcontent\">",
              "            <h1>Third View</h1>",
              "        </div>",
              "    </ch5-triggerview-child>",
              "</ch5-triggerview>"
            ],
            "description": "Crestron Triggerview Signals"
          }
        ],
        "description": "Ch5 Trigger View will be used to group content, each component will be wrap inside an ChildView Component",
        "name": "Ch5 Trigger View",
        "tagName": "ch5-triggerview"
      },
      {
        "attributes": [
          {
            "documentation": [
              "`id` attribute",
              "***",
              "This is a standard id HTML attribute."
            ],
            "value": [],
            "name": "id"
          },
          {
            "documentation": [
              "`customclass` attribute",
              "***",
              "Contains a list of classes that are applied on the component"
            ],
            "value": [],
            "name": "customclass"
          },
          {
            "documentation": [
              "`customstyle` attribute",
              "***",
              "Contains a list of space-delimited style classes applied on the component."
            ],
            "value": [],
            "name": "customstyle"
          },
          {
            "documentation": [
              "`noshowtype` attribute",
              "***",
              "This property reflects the type of the visibility of the item. See the 'data-ch5-noshow-type' ",
              "custom HTML attribute for further information."
            ],
            "value": [
              "visibility",
              "display",
              "remove"
            ],
            "name": "noshowtype"
          },
          {
            "documentation": [
              "`receivestatecustomclass` attribute",
              "***",
              "The value of this signal will be applied as an equivalent property on 'customClass'.",
              "The change of value will remove  theprior value and apply the new value."
            ],
            "value": [],
            "name": "receivestatecustomclass"
          },
          {
            "documentation": [
              "`receivestatecustomstyle` attribute",
              "***",
              "The value of this signal will be applied as an equivalent property on 'styleClass'.",
              "The change of value will remove the prior value and apply the new value."
            ],
            "value": [],
            "name": "receivestatecustomstyle"
          },
          {
            "documentation": [
              "`receivestateshow` attribute",
              "***",
              "When true, this will tell the parent component (ch5-triggerview) to hide all the other ChildViews and to only show this one."
            ],
            "value": [],
            "name": "receivestateshow"
          },
          {
            "documentation": [
              "`'receivestateshowpulse` attribute",
              "***",
              "on transition from false to true, this signal directs the component to become visible."
            ],
            "value": [],
            "name": "receivestateshowpulse"
          },
          {
            "documentation": [
              "`receivestatehidepulse` attribute",
              "***",
              "on transition from false to true, this signal will direct if the component is no longer visible."
            ],
            "value": [],
            "name": "receivestatehidepulse"
          },
          {
            "documentation": [
              "`receivestateenable` attribute",
              "***",
              "When true, the boolean value of the signal determines if the component is enabled.",
              "Note that the signal name is provided, and the value of the signal has the opposite ",
              "convention of the 'disabled' attribute. This is to provide consistency with current programming practices."
            ],
            "value": [],
            "name": "receivestateenable"
          },
          {
            "documentation": [
              "`sendeventonshow` attribute",
              "***",
              "Sends a digital pulse when a child view becomes visible. Allows the control system ",
              "to take various actions based on which view is active."
            ],
            "value": [],
            "name": "sendeventonshow"
          },
          {
            "documentation": [
              "`appendclasswheninviewport` attribute",
              "***",
              "Applies the provided value as class name while the component is visible and removes the class name when not visible."
            ],
            "value": [],
            "name": "appendclasswheninviewport"
          },
          {
            "documentation": [
              "`show` attribute",
              "***",
              "The visibility of the component depends upon the boolean value. The component is visible ",
              "when the value is true and hides when it is false."
            ],
            "value": [],
            "name": "show"
          },
          {
            "documentation": [
              "`dir` attribute",
              "***",
              "An enumerated attribute indicating the directionality of the element's text. It can have the following values:",
              "ltr, which means left to right and is to be used for languages that are written from the left to the right (like English) ",
              "rtl, which means right to left and is to be used for languages that are written from the right to the left (like Arabic) ",
              "auto, which lets the user agent decide. It uses a basic algorithm as it parses the characters inside the element until it ",
              "finds a character with a strong directionality then it applies that directionality to the whole element."
            ],
            "value": [],
            "name": "dir"
          },
          {
            "documentation": [
              "`class` attribute",
              "***",
              "This is a standard class HTML attribute."
            ],
            "value": [],
            "name": "class"
          },
          {
            "documentation": [
              "`style` attribute",
              "***",
              "This is a standard style HTML attribute."
            ],
            "value": [],
            "name": "style"
          },
          {
            "documentation": [
              "`role` attribute",
              "***",
              "This is an accessibility attribute implemented by all ch5-components and added automatically if not set by the user. ",
              "Where possible, it represents the closest supported type for a ch5-component. In the case of a ch5-button, the value of the role attribute is 'button', for a ch5-modal-dialog the value is 'dialog', and so on. ",
              "The default value for this ch5-component can be overridden via this attribute."
            ],
            "value": [],
            "name": "role"
          },
          {
            "documentation": [
              "`debug` attribute",
              "***",
              "The default value is false. Used to get useful developer-related information about component behavior."
            ],
            "value": [
              "false",
              "true"
            ],
            "name": "debug"
          },
          {
            "documentation": [
              "`disabled` attribute",
              "***",
              "The default value is false. This property will direct the component to change CSS and event listeners ",
              "to reflect a disabled state when true."
            ],
            "value": [
              "false",
              "true"
            ],
            "name": "disabled"
          }
        ],
        "documentation": [
          "`ch5-triggerview-child` attribute",
          "***",
          "Each TriggerView child is similar to a standalone page, and navigating between pages is done via swiping."
        ],
        "snippets": [
          {
            "prefix": "ch5-triggerview:child-send-signals",
            "body": [
              "<ch5-triggerview activeview=\"${1:1}\"> ",
              "    <ch5-triggerview-child sendeventonshow=\"${2:first_child_is_shown}\">",
              "        <div class=\"viewcontent\">",
              "            <h1>First View</h1>",
              "        </div>",
              "    </ch5-triggerview-child > ",
              "    <ch5-triggerview-child sendeventonshow=\"${3:second_child_is_shown}\">",
              "        <div class=\"viewcontent\">",
              "            <h1>Second View </h1>",
              "        </div> ",
              "    </ch5-triggerview-child >",
              "    <ch5-triggerview-child sendeventonshow=\"${4:third_child_is_shown}\">",
              "        <div class=\"viewcontent\">",
              "            <h1>Third View </h1>",
              "        </div> ",
              "    </ch5-triggerview-child >",
              "</ch5-triggerview>"
            ],
            "description": "Crestron Triggerview Child Send Signals"
          },
          {
            "prefix": "ch5-triggerview:child-receive-signals",
            "body": [
              "<ch5-triggerview activeview=\"${1:1}\"> ",
              "    <ch5-triggerview-child receivestateshow=\"${2:show_first_view_signal}\">",
              "        <div class=\"viewcontent\">",
              "            <h1>First View</h1>",
              "        </div>",
              "    </ch5-triggerview-child > ",
              "    <ch5-triggerview-child receivestateshow=\"${3:show_second_view_signal}\">",
              "        <div class=\"viewcontent\">",
              "            <h1>Second View </h1>",
              "        </div> ",
              "    </ch5-triggerview-child >",
              "    <ch5-triggerview-child receivestateshow=\"${4:show_third_view_signal}\">",
              "        <div class=\"viewcontent\">",
              "            <h1>Third View </h1>",
              "        </div> ",
              "    </ch5-triggerview-child >",
              "</ch5-triggerview>"
            ],
            "description": "Crestron Triggerview Signals"
          }
        ],
        "description": "Ch5 View Child - content wrapper for ch5-triggerview.",
        "name": "Ch5 View Child",
        "tagName": "ch5-triggerview-child"
      },
      {
        "attributes": [
          {
            "documentation": [
              "`id` attribute",
              "***",
              "This is a standard id HTML attribute."
            ],
            "value": [],
            "name": "id"
          },
          {
            "documentation": [
              "`customclass` attribute",
              "***",
              "Contains a list of classes that are applied on the component"
            ],
            "value": [],
            "name": "customclass"
          },
          {
            "documentation": [
              "`customstyle` attribute",
              "***",
              "Contains a list of space-delimited style classes applied on the component."
            ],
            "value": [],
            "name": "customstyle"
          },
          {
            "documentation": [
              "`noshowtype` attribute",
              "***",
              "This property reflects the type of the visibility of the item. See the 'data-ch5-noshow-type' ",
              "custom HTML attribute for further information."
            ],
            "value": [
              "visibility",
              "display",
              "remove"
            ],
            "name": "noshowtype"
          },
          {
            "documentation": [
              "`receivestatecustomclass` attribute",
              "***",
              "The value of this signal will be applied as an equivalent property on 'customClass'.",
              "The change of value will remove  theprior value and apply the new value."
            ],
            "value": [],
            "name": "receivestatecustomclass"
          },
          {
            "documentation": [
              "`receivestatecustomstyle` attribute",
              "***",
              "The value of this signal will be applied as an equivalent property on 'styleClass'.",
              "The change of value will remove the prior value and apply the new value."
            ],
            "value": [],
            "name": "receivestatecustomstyle"
          },
          {
            "documentation": [
              "`receivestateshow` attribute",
              "***",
              "When true, the boolean value of the signal determines if the component is visible."
            ],
            "value": [],
            "name": "receivestateshow"
          },
          {
            "documentation": [
              "`'receivestateshowpulse` attribute",
              "***",
              "on transition from false to true, this signal directs the component to become visible."
            ],
            "value": [],
            "name": "receivestateshowpulse"
          },
          {
            "documentation": [
              "`receivestatehidepulse` attribute",
              "***",
              "on transition from false to true, this signal will direct if the component is no longer visible."
            ],
            "value": [],
            "name": "receivestatehidepulse"
          },
          {
            "documentation": [
              "`receivestateenable` attribute",
              "***",
              "When true, the boolean value of the signal determines if the component is enabled.",
              "Note that the signal name is provided, and the value of the signal has the opposite ",
              "convention of the 'disabled' attribute. This is to provide consistency with current programming practices."
            ],
            "value": [],
            "name": "receivestateenable"
          },
          {
            "documentation": [
              "`sendeventonshow` attribute",
              "***",
              "Has a boolean value of true when the component is visible and false when not visible.",
              "Note that even if component is completely covered by other visible elements, it is still considered visible."
            ],
            "value": [],
            "name": "sendeventonshow"
          },
          {
            "documentation": [
              "`appendclasswheninviewport` attribute",
              "***",
              "Applies the provided value as class name while the component is visible and removes the class name when not visible."
            ],
            "value": [],
            "name": "appendclasswheninviewport"
          },
          {
            "documentation": [
              "`show` attribute",
              "***",
              "The visibility of the component depends upon the boolean value. The component is visible ",
              "when the value is true and hides when it is false."
            ],
            "value": [],
            "name": "show"
          },
          {
            "documentation": [
              "`dir` attribute",
              "***",
              "An enumerated attribute indicating the directionality of the element's text. It can have the following values:",
              "ltr, which means left to right and is to be used for languages that are written from the left to the right (like English) ",
              "rtl, which means right to left and is to be used for languages that are written from the right to the left (like Arabic) ",
              "auto, which lets the user agent decide. It uses a basic algorithm as it parses the characters inside the element until it ",
              "finds a character with a strong directionality then it applies that directionality to the whole element."
            ],
            "value": [],
            "name": "dir"
          },
          {
            "documentation": [
              "`class` attribute",
              "***",
              "This is a standard class HTML attribute."
            ],
            "value": [],
            "name": "class"
          },
          {
            "documentation": [
              "`style` attribute",
              "***",
              "This is a standard style HTML attribute."
            ],
            "value": [],
            "name": "style"
          },
          {
            "documentation": [
              "`role` attribute",
              "***",
              "This is an accessibility attribute implemented by all ch5-components and added automatically if not set by the user. ",
              "Where possible, it represents the closest supported type for a ch5-component. In the case of a ch5-button, the value of the role attribute is 'button', for a ch5-modal-dialog the value is 'dialog', and so on. ",
              "The default value for this ch5-component can be overridden via this attribute."
            ],
            "value": [],
            "name": "role"
          },
          {
            "documentation": [
              "`debug` attribute",
              "***",
              "The default value is false. Used to get useful developer-related information about component behavior."
            ],
            "value": [
              "false",
              "true"
            ],
            "name": "debug"
          },
          {
            "documentation": [
              "`disabled` attribute",
              "***",
              "The default value is false. This property will direct the component to change CSS and event listeners ",
              "to reflect a disabled state when true."
            ],
            "value": [
              "false",
              "true"
            ],
            "name": "disabled"
          },
          {
            "documentation": [
              "`templateid` attribute",
              "***",
              "The ID of the template to be instantiated."
            ],
            "value": [],
            "name": "templateid"
          },
          {
            "documentation": [
              "`context` attribute",
              "***",
              "In the format of 'original:replacement;' original is the value to be replaced, and replacement ",
              "is the replacement value."
            ],
            "value": [],
            "name": "context"
          }
        ],
        "documentation": [
          "`ch5-template` element",
          "***",
          "The primary functionality of this component is to create new instances ",
          "of the user-provided <template> and to substitute event and state names ",
          "where indicated by the integrator."
        ],
        "snippets": [
          {
            "prefix": "ch5-template:default",
            "description": "Crestron Ch5-Template (default)",
            "body": [
              "<ch5-template templateId=\"[provideTemplateId]\" context=\"[original]:[replacement]\"></ch5-template>"
            ]
          }
        ],
        "description": "ch5-template create new instances of the user provided <template>.",
        "name": "Ch5 Template",
        "tagName": "ch5-template"
      },
      {
        "attributes": [
          {
            "documentation": [
              "`id` attribute",
              "***",
              "This is a standard id HTML attribute."
            ],
            "value": [],
            "name": "id"
          },
          {
            "documentation": [
              "`customclass` attribute",
              "***",
              "Contains a list of classes that are applied on the component"
            ],
            "value": [],
            "name": "customclass"
          },
          {
            "documentation": [
              "`customstyle` attribute",
              "***",
              "Contains a list of space-delimited style classes applied on the component."
            ],
            "value": [],
            "name": "customstyle"
          },
          {
            "documentation": [
              "`noshowtype` attribute",
              "***",
              "This property reflects the type of the visibility of the item. See the 'data-ch5-noshow-type' ",
              "custom HTML attribute for further information."
            ],
            "value": [
              "visibility",
              "display",
              "remove"
            ],
            "name": "noshowtype"
          },
          {
            "documentation": [
              "`receivestatecustomclass` attribute",
              "***",
              "The value of this signal will be applied as an equivalent property on 'customClass'.",
              "The change of value will remove  theprior value and apply the new value."
            ],
            "value": [],
            "name": "receivestatecustomclass"
          },
          {
            "documentation": [
              "`receivestatecustomstyle` attribute",
              "***",
              "The value of this signal will be applied as an equivalent property on 'styleClass'.",
              "The change of value will remove the prior value and apply the new value."
            ],
            "value": [],
            "name": "receivestatecustomstyle"
          },
          {
            "documentation": [
              "`receiveStateShow` attribute",
              "***",
              "While true, the boolean value of the signal determines if the component is visible."
            ],
            "value": [],
            "name": "receivestateshow"
          },
          {
            "documentation": [
              "`receiveStateShowPulse` attribute",
              "***",
              "On transition from false to true, this signal will direct the component to be visible."
            ],
            "value": [],
            "name": "receivestateshowpulse"
          },
          {
            "documentation": [
              "`receiveStateHidePulse` attribute",
              "***",
              "On transition from false to true, the signal will direct if the component to no longer be visible."
            ],
            "value": [],
            "name": "receivestatehidepulse"
          },
          {
            "documentation": [
              "`receivestateenable` attribute",
              "***",
              "When true, the boolean value of the signal determines if the component is enabled.",
              "Note that the signal name is provided, and the value of the signal has the opposite ",
              "convention of the 'disabled' attribute. This is to provide consistency with current programming practices."
            ],
            "value": [],
            "name": "receivestateenable"
          },
          {
            "documentation": [
              "`sendeventonshow` attribute",
              "***",
              "Has a boolean value of true when the component is visible and false when not visible.",
              "Note that even if component is completely covered by other visible elements, it is still considered visible."
            ],
            "value": [],
            "name": "sendeventonshow"
          },
          {
            "documentation": [
              "`appendclasswheninviewport` attribute",
              "***",
              "Applies the provided value as class name while the component is visible and removes the class name when not visible."
            ],
            "value": [],
            "name": "appendclasswheninviewport"
          },
          {
            "documentation": [
              "`show` attribute",
              "***",
              "The visibility of the component depends upon the boolean value. The component is visible ",
              "when the value is true and hides when it is false."
            ],
            "value": [],
            "name": "show"
          },
          {
            "documentation": [
              "`dir` attribute",
              "***",
              "An enumerated attribute indicating the directionality of the element's text. It can have the following values:",
              "ltr, which means left to right and is to be used for languages that are written from the left to the right (like English) ",
              "rtl, which means right to left and is to be used for languages that are written from the right to the left (like Arabic) ",
              "auto, which lets the user agent decide. It uses a basic algorithm as it parses the characters inside the element until it ",
              "finds a character with a strong directionality then it applies that directionality to the whole element."
            ],
            "value": [],
            "name": "dir"
          },
          {
            "documentation": [
              "`class` attribute",
              "***",
              "This is a standard class HTML attribute."
            ],
            "value": [],
            "name": "class"
          },
          {
            "documentation": [
              "`style` attribute",
              "***",
              "This is a standard style HTML attribute."
            ],
            "value": [],
            "name": "style"
          },
          {
            "documentation": [
              "`role` attribute",
              "***",
              "This is an accessibility attribute implemented by all ch5-components and added automatically if not set by the user. ",
              "Where possible, it represents the closest supported type for a ch5-component. In the case of a ch5-button, the value of the role attribute is 'button', for a ch5-modal-dialog the value is 'dialog', and so on. ",
              "The default value for this ch5-component can be overridden via this attribute."
            ],
            "value": [],
            "name": "role"
          },
          {
            "documentation": [
              "`debug` attribute",
              "***",
              "The default value is false. Used to get useful developer-related information about component behavior."
            ],
            "value": [
              "false",
              "true"
            ],
            "name": "debug"
          },
          {
            "documentation": [
              "`disabled` attribute",
              "***",
              "The default value is false. This property will direct the component to change CSS and event listeners ",
              "to reflect a disabled state when true."
            ],
            "value": [
              "false",
              "true"
            ],
            "name": "disabled"
          },
          {
            "documentation": [
              "`url` attribute",
              "***",
              "The HTML file path."
            ],
            "value": [],
            "name": "url"
          }
        ],
        "documentation": [
          "`ch5-import-htmlsnippet` element",
          "***",
          "The component used to load HTML snippets during run time. ",
          "This component allows users to load HTML snippets. The snippets should not contain HTML, HEAD, and BODY tags. ",
          "Users can modularize the HTML files into pages or sections using this component, ",
          "and the snippet is inserted into the DOM at the respective location ",
          "during run time. ",
          "An afterload event occurs when a snippet HTML has been loaded and inserted into the DOM. ",
          "Afterload is most often used within the ch5-import-htmlsnippet element to execute a script once an HTML ",
          "snippet has completely loaded all content (including images, script files, CSS files, etc.). ",
          "To import the snippet in Angular, the source directory must be added in angular.json file as follows: ",
          "     \"assets\": [",
          "         \"src/assets/htmlsnippets\" ",
          "     ]"
        ],
        "snippets": [
          {
            "prefix": "ch5-import-htmlsnippet:default",
            "description": "Crestron import-htmlsnippet (Default)",
            "body": [
              "<ch5-import-htmlsnippet url=\"\">",
              "</ch5-import-htmlsnippet>$0"
            ]
          },
          {
            "prefix": "ch5-import-htmlsnippet:All Attributes",
            "description": "Crestron import-htmlsnippet (All Attributes)",
            "body": [
              "<ch5-import-htmlsnippet url=\"\" receivestateshowpulse=\"\" receivestatehidepulse=\"\" receivestateshow=\"\" sendeventonshow=\"\">",
              "</ch5-import-htmlsnippet>$0"
            ]
          }
        ],
        "description": "Ch5 import-htmlsnippet allows to import the HTML snippet.",
        "name": "Ch5 import-htmlsnippet",
        "tagName": "ch5-import-htmlsnippet"
      },
      {
        "attributes": [
          {
            "documentation": [
              "`id` attribute",
              "***",
              "This is a standard id HTML attribute."
            ],
            "value": [],
            "name": "id"
          },
          {
            "documentation": [
              "`customclass` attribute",
              "***",
              "Contains a list of classes that are applied on the component"
            ],
            "value": [],
            "name": "customclass"
          },
          {
            "documentation": [
              "`customstyle` attribute",
              "***",
              "Contains a list of space-delimited style classes applied on the component."
            ],
            "value": [],
            "name": "customstyle"
          },
          {
            "documentation": [
              "`noshowtype` attribute",
              "***",
              "This property reflects the type of the visibility of the item. See the 'data-ch5-noshow-type' ",
              "custom HTML attribute for further information."
            ],
            "value": [
              "visibility",
              "display",
              "remove"
            ],
            "name": "noshowtype"
          },
          {
            "documentation": [
              "`receivestatecustomclass` attribute",
              "***",
              "The value of this signal will be applied as an equivalent property on 'customClass'.",
              "The change of value will remove  theprior value and apply the new value."
            ],
            "value": [],
            "name": "receivestatecustomclass"
          },
          {
            "documentation": [
              "`receivestatecustomstyle` attribute",
              "***",
              "The value of this signal will be applied as an equivalent property on 'styleClass'.",
              "The change of value will remove the prior value and apply the new value."
            ],
            "value": [],
            "name": "receivestatecustomstyle"
          },
          {
            "documentation": [
              "`receivestateshow` attribute",
              "***",
              "When true, the boolean value of the signal determines if the component is visible."
            ],
            "value": [],
            "name": "receivestateshow"
          },
          {
            "documentation": [
              "`'receivestateshowpulse` attribute",
              "***",
              "on transition from false to true, this signal directs the component to become visible."
            ],
            "value": [],
            "name": "receivestateshowpulse"
          },
          {
            "documentation": [
              "`receivestatehidepulse` attribute",
              "***",
              "on transition from false to true, this signal will direct if the component is no longer visible."
            ],
            "value": [],
            "name": "receivestatehidepulse"
          },
          {
            "documentation": [
              "`receivestateenable` attribute",
              "***",
              "When true, the boolean value of the signal determines if the component is enabled.",
              "Note that the signal name is provided, and the value of the signal has the opposite ",
              "convention of the 'disabled' attribute. This is to provide consistency with current programming practices."
            ],
            "value": [],
            "name": "receivestateenable"
          },
          {
            "documentation": [
              "`sendeventonshow` attribute",
              "***",
              "Has a boolean value of true when the component is visible and false when not visible.",
              "Note that even if component is completely covered by other visible elements, it is still considered visible."
            ],
            "value": [],
            "name": "sendeventonshow"
          },
          {
            "documentation": [
              "`appendclasswheninviewport` attribute",
              "***",
              "Applies the provided value as class name while the component is visible and removes the class name when not visible."
            ],
            "value": [],
            "name": "appendclasswheninviewport"
          },
          {
            "documentation": [
              "`show` attribute",
              "***",
              "The visibility of the component depends upon the boolean value. The component is visible ",
              "when the value is true and hides when it is false."
            ],
            "value": [],
            "name": "show"
          },
          {
            "documentation": [
              "`dir` attribute",
              "***",
              "An enumerated attribute indicating the directionality of the element's text. It can have the following values:",
              "ltr, which means left to right and is to be used for languages that are written from the left to the right (like English) ",
              "rtl, which means right to left and is to be used for languages that are written from the right to the left (like Arabic) ",
              "auto, which lets the user agent decide. It uses a basic algorithm as it parses the characters inside the element until it ",
              "finds a character with a strong directionality then it applies that directionality to the whole element."
            ],
            "value": [],
            "name": "dir"
          },
          {
            "documentation": [
              "`url` attribute",
              "***",
              "For when one or more image URLs will be used as the background.",
              "Supported image types include JPEG, PNG, SVG, and BMP.",
              "Animated GIFs are not supported. Multiple URLs can be provided ",
              "separated by | (vertical bar) to have images cycle over time."
            ],
            "value": [],
            "name": "url"
          },
          {
            "documentation": [
              "`backgroundcolor` attribute",
              "***",
              "Use when one or more background colors will be used via the CSS background-color property ",
              "syntax including color names, #hex codes, rgb(), rgba(), hsl() and hsla().",
              "Multiple colors can be provided separated by a | (vertical bar) to have colors ",
              "cycled based on the time defined. A black color will be used for invalid input.",
              "This attribute is superseded by the url attribute."
            ],
            "value": [],
            "name": "backgroundcolor"
          },
          {
            "documentation": [
              "`repeat` attribute",
              "***",
              "The repeat property sets how a background image will be repeated. In the absence of ",
              "the repeat attribute, 'no-repeat' will be applied by default. Valid values: 'no-repeat', ",
              "'repeat-x', 'repeat-y', and 'repeat'.",
              "The value 'repeat-x' repeats image horizontally, 'repeat-y' repeats the image vertically, and 'repeat' ",
              "repeats both vertically and horizontally. The last image will be clipped if it does not fit."
            ],
            "value": [
              "",
              "no-repeat",
              "repeat",
              "repeat-x",
              "repeat-y"
            ],
            "name": "repeat"
          },
          {
            "documentation": [
              "`scale` attribute",
              "***",
              "The default value is 'stretch'. Valid values: 'stretch', 'fill', 'fit'.",
              "Defines how an image will fill the component when the ",
              "component and the image do not have the same aspect ratio.",
              "'stretch' will transform the image to have the same aspect ratio as the component, ",
              "'fill' will size the image to leave no extra space ",
              "but will crop off either the top and bottom or left and right to ",
              "fill the component completely, and 'fit' will preserve the image aspect ratio by ",
              "centering the image and leaving either a letter box on the top and bottom or ",
              "a pillar box on the left and right. For fit attribute, see the related ",
              "imgBackgroundColor attribute."
            ],
            "value": [
              "stretch",
              "fill",
              "fit"
            ],
            "name": "scale"
          },
          {
            "documentation": [
              "`refreshrate` attribute",
              "***",
              "The default value is 600. Min value is 10 and max value is 604800.",
              "When more than one image is provided in the url attribute, ",
              "this attribute provides the duration in seconds that each ",
              "image will be displayed. Values outside of the min and max ",
              "will be capped at the closest valid value."
            ],
            "value": [],
            "name": "refreshrate"
          },
          {
            "documentation": [
              "`imgbackgroundcolor` attribute",
              "***",
              "The default value is 'black'.",
              "Related to the scale attribute having a value of 'fit'. ",
              "This attribute defines the color of the pillar box or ",
              "letter box borders when the image aspect ratio is not the ",
              "same as the component aspect ratio."
            ],
            "value": [],
            "name": "imgbackgroundcolor"
          },
          {
            "documentation": [
              "`transitioneffect` attribute",
              "***",
              "The default value is 'ease'.",
              "When more than one image or color is provided in url or backgroundcolor attribute, ",
              "this attribute provide the type of transition using the CSS transition-timing-syntax ",
              "property syntax. See the related attribute transition-duration."
            ],
            "value": [],
            "name": "transitioneffect"
          },
          {
            "documentation": [
              "`transitionduration` attribute",
              "***",
              "The default value is '1s'.",
              "when more than one image or color is provided in url or backgroundcolor attribute, ",
              "this attribute provides the duration of the transition ",
              "using CSS transition-duration syntax."
            ],
            "value": [],
            "name": "transitionduration"
          },
          {
            "documentation": [
              "`receivestaterefreshrate` attribute",
              "***",
              "When defined, this will set the refreshRate attribute."
            ],
            "value": [],
            "name": "receivestaterefreshrate"
          },
          {
            "documentation": [
              "`receivestateurl` attribute",
              "***",
              "When defined, this will set the url attribute.  This attribute",
              " takes precedence over backgroundcolor, url, and receiveStateBackgroundColor ",
              " attributes."
            ],
            "value": [],
            "name": "receivestateurl"
          },
          {
            "documentation": [
              "`receivestatebackgroundcolor` attribute",
              "***",
              "When defined, this will set the backgroundColor attribute. This attribute",
              " is superseded by the receivestateurl attribute."
            ],
            "value": [],
            "name": "receivestatebackgroundcolor"
          },
          {
            "documentation": [
              "`class` attribute",
              "***",
              "This is a standard class HTML attribute."
            ],
            "value": [],
            "name": "class"
          },
          {
            "documentation": [
              "`style` attribute",
              "***",
              "This is a standard style HTML attribute."
            ],
            "value": [],
            "name": "style"
          },
          {
            "documentation": [
              "`role` attribute",
              "***",
              "This is an accessibility attribute implemented by all ch5-components and added automatically if not set by the user. ",
              "Where possible, it represents the closest supported type for a ch5-component. In the case of a ch5-button, the value of the role attribute is 'button', for a ch5-modal-dialog the value is 'dialog', and so on. ",
              "The default value for this ch5-component can be overridden via this attribute."
            ],
            "value": [],
            "name": "role"
          },
          {
            "documentation": [
              "`debug` attribute",
              "***",
              "The default value is false. Used to get useful developer-related information about component behavior."
            ],
            "value": [
              "false",
              "true"
            ],
            "name": "debug"
          },
          {
            "documentation": [
              "`disabled` attribute",
              "***",
              "The default value is false. This property will direct the component to change CSS and event listeners ",
              "to reflect a disabled state when true."
            ],
            "value": [
              "false",
              "true"
            ],
            "name": "disabled"
          }
        ],
        "documentation": [
          "`ch5-background` element",
          "***",
          "For backgrounds, standard HTML has a many available styles to provide backgrounds for HTML elements.",
          "CH5 Video will be implemented using Alpha Blending, where portions of the HTML will become invisible to allow video ",
          "playing below the HTML layer to be visible to the user. As such, to support background images and",
          "colors of HTML element views that will be in CH5 projects, the ch5-background component provides much of the same",
          "functionality, but works with the video component to make portions of the screen invisible to allow the video to appear."
        ],
        "snippets": [
          {
            "prefix": "ch5-background:blank",
            "description": "Crestron Background (Blank)",
            "body": [
              "<ch5-background>",
              "</ch5-background>$0"
            ]
          },
          {
            "prefix": "ch5-background:default",
            "description": "Crestron Background (Default)",
            "body": [
              "<ch5-background url=\"${1:http://someServer/background.png}\">",
              "</ch5-background>$0"
            ]
          },
          {
            "prefix": "ch5-background:all-attributes",
            "description": "Crestron Background (All Attributes)",
            "body": [
              "<ch5-background url=\"${1:http://someServer/background.png}\"",
              "\trefreshrate=\"${2:10}\"",
              "\tbackgroundcolor=\"${3:black}\"",
              "\trepeat=\"${4|no-repeat,repeat,repeat-x,repeat-y|}\"",
              "\tscale=\"${5|stretch,fill,fit|}\"",
              "\timgbackgroundcolor=\"${6:black}\"",
              "\ttransitioneffect=\"${7:ease}\"",
              "\ttransitionduration=\"${8:1s}\"",
              "\treceivestateurl=\"${9}\"",
              "\treceivestatebackgroundcolor=\"${10}\"",
              "\treceivestaterefreshrate=\"${11}\">",
              "</ch5-background>$0"
            ]
          }
        ],
        "description": "Ch5 Background offers a wide range of functionality out-of-the-box.",
        "name": "Ch5 Background",
        "tagName": "ch5-background"
      },
      {
        "attributes": [
          {
            "documentation": [
              "`id` attribute",
              "***",
              "This is a standard id HTML attribute."
            ],
            "value": [],
            "name": "id"
          },
          {
            "documentation": [
              "`customclass` attribute",
              "***",
              "Contains a list of classes that are applied on the component"
            ],
            "value": [],
            "name": "customclass"
          },
          {
            "documentation": [
              "`customstyle` attribute",
              "***",
              "Contains a list of space-delimited style classes applied on the component."
            ],
            "value": [],
            "name": "customstyle"
          },
          {
            "documentation": [
              "`noshowtype` attribute",
              "***",
              "This property reflects the type of the visibility of the item. See the 'data-ch5-noshow-type' ",
              "custom HTML attribute for further information."
            ],
            "value": [
              "visibility",
              "display",
              "remove"
            ],
            "name": "noshowtype"
          },
          {
            "documentation": [
              "`receivestatecustomclass` attribute",
              "***",
              "The value of this signal will be applied as an equivalent property on 'customClass'.",
              "The change of value will remove  theprior value and apply the new value."
            ],
            "value": [],
            "name": "receivestatecustomclass"
          },
          {
            "documentation": [
              "`receivestatecustomstyle` attribute",
              "***",
              "The value of this signal will be applied as an equivalent property on 'styleClass'.",
              "The change of value will remove the prior value and apply the new value."
            ],
            "value": [],
            "name": "receivestatecustomstyle"
          },
          {
            "documentation": [
              "`receivestateshow` attribute",
              "***",
              "When true, the boolean value of the signal determines if the component is visible."
            ],
            "value": [],
            "name": "receivestateshow"
          },
          {
            "documentation": [
              "`'receivestateshowpulse` attribute",
              "***",
              "on transition from false to true, this signal directs the component to become visible."
            ],
            "value": [],
            "name": "receivestateshowpulse"
          },
          {
            "documentation": [
              "`receivestatehidepulse` attribute",
              "***",
              "on transition from false to true, this signal will direct if the component is no longer visible."
            ],
            "value": [],
            "name": "receivestatehidepulse"
          },
          {
            "documentation": [
              "`receivestateenable` attribute",
              "***",
              "When true, the boolean value of the signal determines if the component is enabled.",
              "Note that the signal name is provided, and the value of the signal has the opposite ",
              "convention of the 'disabled' attribute. This is to provide consistency with current programming practices."
            ],
            "value": [],
            "name": "receivestateenable"
          },
          {
            "documentation": [
              "`sendeventonshow` attribute",
              "***",
              "Has a boolean value of true when the component is visible and false when not visible.",
              "Note that even if component is completely covered by other visible elements, it is still considered visible."
            ],
            "value": [],
            "name": "sendeventonshow"
          },
          {
            "documentation": [
              "`appendclasswheninviewport` attribute",
              "***",
              "Applies the provided value as class name while the component is visible and removes the class name when not visible."
            ],
            "value": [],
            "name": "appendclasswheninviewport"
          },
          {
            "documentation": [
              "`show` attribute",
              "***",
              "The visibility of the component depends upon the boolean value. The component is visible ",
              "when the value is true and hides when it is false."
            ],
            "value": [],
            "name": "show"
          },
          {
            "documentation": [
              "`dir` attribute",
              "***",
              "An enumerated attribute indicating the directionality of the element's text. It can have the following values:",
              "ltr, which means left to right and is to be used for languages that are written from the left to the right (like English) ",
              "rtl, which means right to left and is to be used for languages that are written from the right to the left (like Arabic) ",
              "auto, which lets the user agent decide. It uses a basic algorithm as it parses the characters inside the element until it ",
              "finds a character with a strong directionality then it applies that directionality to the whole element."
            ],
            "value": [],
            "name": "dir"
          },
          {
            "documentation": [
              "`class` attribute",
              "***",
              "This is a standard class HTML attribute."
            ],
            "value": [],
            "name": "class"
          },
          {
            "documentation": [
              "`style` attribute",
              "***",
              "This is a standard style HTML attribute."
            ],
            "value": [],
            "name": "style"
          },
          {
            "documentation": [
              "`role` attribute",
              "***",
              "This is an accessibility attribute implemented by all ch5-components and added automatically if not set by the user. ",
              "Where possible, it represents the closest supported type for a ch5-component. In the case of a ch5-button, the value of the role attribute is 'button', for a ch5-modal-dialog the value is 'dialog', and so on. ",
              "The default value for this ch5-component can be overridden via this attribute."
            ],
            "value": [],
            "name": "role"
          },
          {
            "documentation": [
              "`debug` attribute",
              "***",
              "The default value is false. Used to get useful developer-related information about component behavior."
            ],
            "value": [
              "false",
              "true"
            ],
            "name": "debug"
          },
          {
            "documentation": [
              "`disabled` attribute",
              "***",
              "The default value is false. This property will direct the component to change CSS and event listeners ",
              "to reflect a disabled state when true."
            ],
            "value": [
              "false",
              "true"
            ],
            "name": "disabled"
          },
          {
            "documentation": [
              "`indexId` attribute",
              "***",
              "Provides the name of the offset identifier to be substituted with a 0-based index of the list items within the signal names provided in other attributes surrounded by {{ }} delimiters."
            ],
            "value": [],
            "name": "indexid"
          },
          {
            "documentation": [
              "`userId` attribute",
              "***",
              "The user ID to access the video along with a password."
            ],
            "value": [],
            "name": "userid"
          },
          {
            "documentation": [
              "`snapShotUserId` attribute",
              "***",
              "The user ID to access the snapshot along with a password."
            ],
            "value": [],
            "name": "snapshotuserid"
          },
          {
            "documentation": [
              "`password` attribute",
              "***",
              "The password to access the video along with a user ID."
            ],
            "value": [],
            "name": "password"
          },
          {
            "documentation": [
              "`snapShotPassword` attribute",
              "***",
              "The password to access the snapshot along with user ID."
            ],
            "value": [],
            "name": "snapshotpassword"
          },
          {
            "documentation": [
              "`snapShotRefreshRate` attribute",
              "***",
              "The refresh rate of the snapshot."
            ],
            "value": [],
            "name": "snapshotrefreshrate"
          },
          {
            "documentation": [
              "`aspectRatio` attribute",
              "***",
              "Sets the width-to-height ration of the video. ",
              "The width and height of the component to be controlled by CSS style classes. ",
              "Values are 16:9 (default), 4:3, and custom.  When the size of the container does not match the aspect ratio, ",
              "the full height or width should be used and the dimension that is empty should be centered."
            ],
            "value": [
              "16:9",
              "4:3"
            ],
            "name": "aspectratio"
          },
          {
            "documentation": [
              "`stretch` attribute",
              "***",
              "The default value is false. When true, video will occupy the size of the parent container. The user ",
              "needs to specify the width and height of the parent container for the video to appear correctly. ",
              "The video will be displayed as a letter or pillar box based on the aspect ratio and size of the ",
              "parent container. The parent container should not contain any tags other than ch5-background ",
              "and CH5-Video."
            ],
            "value": [
              "true",
              "false"
            ],
            "name": "stretch"
          },
          {
            "documentation": [
              "`url` attribute",
              "***",
              "The source path of the video."
            ],
            "value": [],
            "name": "url"
          },
          {
            "documentation": [
              "`sourceType` attribute",
              "***",
              "The video Source type, which can be 'Network', 'HDMI' or 'DM'."
            ],
            "value": [
              "Network",
              "HDMI",
              "DM"
            ],
            "name": "sourcetype"
          },
          {
            "documentation": [
              "`snapShotUrl` attribute",
              "***",
              "A snapshot of the video, if any."
            ],
            "value": [],
            "name": "snapshoturl"
          },
          {
            "documentation": [
              "`size` attribute",
              "***",
              "The display size for the video. The default size is 'small' if not entered. ",
              "The size options for the aspect ratio 16:9 and 4:3 are 'x-small' (width: 25vw, height: 25vh), ",
              "'small' (width: 40vw, height: 40vh), 'large' (width: 55vw, ",
              "height: 55vh), 'x-large' (width: 70vw, height: 70vh) and 'xx-large' (width: 85vw, height: 80vh). ",
              "The user needs to select the appropriate size to fit the container."
            ],
            "value": [
              "x-small",
              "small",
              "large",
              "x-large",
              "xx-large"
            ],
            "name": "size"
          },
          {
            "documentation": [
              "`zIndex` attribute",
              "***",
              "The video display moves back and forth with regards to the z-axis."
            ],
            "value": [],
            "name": "zindex"
          },
          {
            "documentation": [
              "`sendEventOnClick` attribute",
              "***",
              "Sends a signal on a click or tap event (mouse or swipe up and down quickly)."
            ],
            "value": [],
            "name": "sendeventonclick"
          },
          {
            "documentation": [
              "`sendEventSelectionChange` attribute",
              "***",
              "Sends a signal on a source selection change when the source selection ",
              "is updated using the 'receivestateselect' attribute."
            ],
            "value": [],
            "name": "sendeventselectionchange"
          },
          {
            "documentation": [
              "`sendEventSelectionSourceType` attribute",
              "***",
              "The current selected source type."
            ],
            "value": [],
            "name": "sendeventselectionsourcetype"
          },
          {
            "documentation": [
              "`sendEventSelectionURL` attribute",
              "***",
              "Sends a signal on an url change when the source url ",
              "is updated using the 'receiveStateUrl' attribute."
            ],
            "value": [],
            "name": "sendeventselectionurl"
          },
          {
            "documentation": [
              "`sendEventSnapShotURL` attribute",
              "***",
              "The current selected snapshot URL."
            ],
            "value": [],
            "name": "sendeventsnapshoturl"
          },
          {
            "documentation": [
              "`sendEventErrorCode` attribute",
              "***",
              "The current video error code state."
            ],
            "value": [],
            "name": "sendeventerrorcode"
          },
          {
            "documentation": [
              "`sendEventErrorMessage` attribute",
              "***",
              "The current video error message state."
            ],
            "value": [],
            "name": "sendeventerrormessage"
          },
          {
            "documentation": [
              "`sendEventRetryCount` attribute",
              "***",
              "The current video retry count state."
            ],
            "value": [],
            "name": "sendeventretrycount"
          },
          {
            "documentation": [
              "`sendEventResolution` attribute",
              "***",
              "The current video resolution."
            ],
            "value": [],
            "name": "sendeventresolution"
          },
          {
            "documentation": [
              "`sendEventState` attribute",
              "***",
              "The current state of the video associated with the current source selection."
            ],
            "value": [],
            "name": "sendeventstate"
          },
          {
            "documentation": [
              "`sendEventSnapShotStatus` attribute",
              "***",
              "The current state of the snapshot associated with the current source selection."
            ],
            "value": [],
            "name": "sendeventsnapshotstatus"
          },
          {
            "documentation": [
              "`sendEventSnapShotLastUpdateTime` attribute",
              "***",
              "The timestamp of the last update time of the still image associated with the current source selection."
            ],
            "value": [],
            "name": "sendeventsnapshotlastupdatetime"
          },
          {
            "documentation": [
              "`receiveStateUrl` attribute",
              "***",
              "The default value is empty. Defines the video URL as an attribute."
            ],
            "value": [],
            "name": "receivestateurl"
          },
          {
            "documentation": [
              "`receiveStateSnapShotURL` attribute",
              "***",
              "Provides the still image URL to use when selection changes to an INDEX value."
            ],
            "value": [],
            "name": "receivestatesnapshoturl"
          },
          {
            "documentation": [
              "`receiveStatePlay` attribute",
              "***",
              "When defined, this will play video only when the value is true and will stop video when the value is false. ",
              "If not defined, the video will play whenever the component is visible. If defined with a value of false, ",
              "the background of ch5-video--nosource css class is displayed."
            ],
            "value": [],
            "name": "receivestateplay"
          },
          {
            "documentation": [
              "`receiveStateSelect` attribute",
              "***",
              "When defined, this will play 0-based index of the video source list. ",
              "A value of <0 or >31 will select no video to play. A Value of 0 to 31 will play the selected video source ",
              "provided the video source type (see receiveStateVideoSourceType) is valid. When not defined, ",
              "the first video source defined (equivalent of index 0) in the list will be played."
            ],
            "value": [],
            "name": "receivestateselect"
          },
          {
            "documentation": [
              "`receiveStateSourceType` attribute",
              "***",
              "Provides the video source type when the selection changes to an INDEX value."
            ],
            "value": [],
            "name": "receivestatesourcetype"
          },
          {
            "documentation": [
              "`receiveStateSnapShotRefreshRate` attribute",
              "***",
              "Defines the refresh rate for a still image url. 0 indicates no refresh."
            ],
            "value": [],
            "name": "receivestatesnapshotrefreshrate"
          },
          {
            "documentation": [
              "`receiveStateUserId` attribute",
              "***",
              "Provides the user ID for credentials supplied to a camera for a video URL."
            ],
            "value": [],
            "name": "receivestateuserid"
          },
          {
            "documentation": [
              "`receiveStateSnapShotUserId` attribute",
              "***",
              "Provides the user ID for credentials supplied to a camera for an image URL."
            ],
            "value": [],
            "name": "receivestatesnapshotuserid"
          },
          {
            "documentation": [
              "`receiveStatePassword` attribute",
              "***",
              "Provides the password for credentials supplied to a camera for a video URL."
            ],
            "value": [],
            "name": "receivestatepassword"
          },
          {
            "documentation": [
              "`receiveStateSnapShotPassword` attribute",
              "***",
              "Provides the password for credentials supplied to a camera for an image URL."
            ],
            "value": [],
            "name": "receivestatesnapshotpassword"
          },
          {
            "documentation": [
              "`receiveStateVideoCount` attribute",
              "***",
              "Provides the count of the videos."
            ],
            "value": [],
            "name": "receivestatevideocount"
          },
          {
            "documentation": [
              "`onpress` attribute",
              "***",
              "Runs when a press event is initiated."
            ],
            "value": [],
            "name": "onpress"
          },
          {
            "documentation": [
              "`onrelease` attribute",
              "***",
              "Runs when a release event is initiated."
            ],
            "value": [],
            "name": "onrelease"
          }
        ],
        "documentation": [
          "`ch5-video` element",
          "***",
          "Provides an overlay onto a streaming video window. ",
          "Components that should reside above the video that need to be visible and active ",
          "(such as buttons to control playback, text describing the video, ",
          "and annotation controls) need to be defined as children elements to this component.",
          "As a background, the <video> tag provided in modern HTML5 browsers will stream HTTP-based protocols ",
          "such as HLS (HTTP Live Streaming) and DASH (dynamic adaptive Streaming over HTTP). ",
          "These protocols are not employed on the vast majority of security cameras and the design of these protocols ",
          "specify a great deal of buffering (i.e. time delay) that would not be appropriate for use cases associated with a security camera. ",
          "The implementation of the <ch5-video> component will not attempt to render the streaming video within the HTML rendering engine. ",
          "A three tier approach will be employed.  In the top tier, ",
          "the HTML component will be responsible for creating invisible rectangles to expose content beneath the HTML rendering engine. ",
          "The second tier will provide a surface (handle to raw buffer to display graphics) that will render the streaming video. ",
          "The top tier and the second tier will coordinate the location and size of rendered video stream. ",
          "The bottom tier is responsible for decoding the video stream and interfacing with the second tier to display the decoded video stream. ",
          "The documentation below describes the configuration of the top tier HTML component <ch5-video>."
        ],
        "snippets": [
          {
            "prefix": "ch5-video:default",
            "description": "Provides a view onto a streaming video window. Components that are to reside above the video that need to be visible and active, examples include buttons to control playback, text describing the video, and annotation controls, need to be defined as children elements to this component.",
            "body": [
              "<ch5-video indexid=\"${1}\" aspectratio=\"${2:16:9}\" size=\"${3:large}\" sourcetype=\"${4:Network}\" userid=\"${5}\" snapshotuserid=\"${6}\" password=\"${7}\" snapshotpassword=\"${8}\" snapshoturl=\"${9}\" url=\"${10}\" stretch=\"${11:false}\" zindex=\"${12:0}\" snapshotrefreshrate=\"${13:0}\">",
              "</ch5-video>$0"
            ]
          },
          {
            "prefix": "ch5-video:all-attributes",
            "description": "Provides a view onto a streaming video window. Components that are to reside above the video that need to be visible and active, examples include buttons to control playback, text describing the video, and annotation controls, need to be defined as children elements to this component.",
            "body": [
              "<ch5-video indexid=\"${1}\" aspectratio=\"${2:16:9}\" size=\"${3:large}\" sourcetype=\"${4:Network}\" userid=\"${5}\" snapshotuserid=\"${6}\" password=\"${7}\" snapshotpassword=\"${8}\" snapshoturl=\"${9}\" url=\"${10}\" stretch=\"${11:false}\" zindex=\"${12:0}\" snapshotrefreshrate=\"${13:0}\" receivestatesourcetype=\"${14}\" receivestateuserid=\"${15}\" receivestatepassword=\"${16}\" receivestatesnapshoturl=\"${17}\" receivestatesnapshotrefreshrate=\"${18}\" receivestatesnapshotuserid=\"${19}\" receivestatesnapshotpassword=\"${20}\" receivestateplay=\"${21}\" receivestateselect=\"${22}\" receivestateurl=\"${23}\" receivestatevideocount=\"${24}\" sendeventonclick=\"${25}\" sendeventstate=\"${26}\" sendeventselectionurl=\"${27}\" sendeventerrorcode=\"${28}\" sendeventerrormessage=\"${29}\" sendeventsnapshoturl=\"${30}\" sendeventselectionsourcetype=\"${31}\" sendeventselectionchange=\"${32}\" sendeventretrycount=\"${33}\" sendeventsnapshotlastupdatetime=\"${34}\" sendeventresolution=\"${35}\" sendeventsnapshotstatus=\"${36}\">",
              "</ch5-video>$0"
            ]
          }
        ],
        "description": "Ch5 Video offers a wide range of functionality out-of-the-box.",
        "name": "Ch5 Video",
        "tagName": "ch5-video"
      }
    ]
  }
}